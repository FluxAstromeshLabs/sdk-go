// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: flux/indexer/campclash/provider_query.proto

package campclash

import (
	context "context"
	fmt "fmt"
	types1 "github.com/FluxNFTLabs/sdk-go/chain/eventstream/types"
	types "github.com/cometbft/cometbft/abci/types"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProviderEvents struct {
	Height int64          `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Time   int64          `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Events []*types.Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (m *ProviderEvents) Reset()         { *m = ProviderEvents{} }
func (m *ProviderEvents) String() string { return proto.CompactTextString(m) }
func (*ProviderEvents) ProtoMessage()    {}
func (*ProviderEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_853dc6f4c45df55d, []int{0}
}
func (m *ProviderEvents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProviderEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProviderEvents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProviderEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderEvents.Merge(m, src)
}
func (m *ProviderEvents) XXX_Size() int {
	return m.Size()
}
func (m *ProviderEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderEvents.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderEvents proto.InternalMessageInfo

func (m *ProviderEvents) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ProviderEvents) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ProviderEvents) GetEvents() []*types.Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type QueryCampEventsRequest struct {
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *QueryCampEventsRequest) Reset()         { *m = QueryCampEventsRequest{} }
func (m *QueryCampEventsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryCampEventsRequest) ProtoMessage()    {}
func (*QueryCampEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_853dc6f4c45df55d, []int{1}
}
func (m *QueryCampEventsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryCampEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryCampEventsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryCampEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCampEventsRequest.Merge(m, src)
}
func (m *QueryCampEventsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryCampEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCampEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCampEventsRequest proto.InternalMessageInfo

func (m *QueryCampEventsRequest) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type QueryCampEventsResponse struct {
	Height uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Time   uint64                 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Events []*types1.ModuleEvents `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (m *QueryCampEventsResponse) Reset()         { *m = QueryCampEventsResponse{} }
func (m *QueryCampEventsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryCampEventsResponse) ProtoMessage()    {}
func (*QueryCampEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_853dc6f4c45df55d, []int{2}
}
func (m *QueryCampEventsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryCampEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryCampEventsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryCampEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCampEventsResponse.Merge(m, src)
}
func (m *QueryCampEventsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryCampEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCampEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCampEventsResponse proto.InternalMessageInfo

func (m *QueryCampEventsResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *QueryCampEventsResponse) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QueryCampEventsResponse) GetEvents() []*types1.ModuleEvents {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetProviderLatestHeightRequest struct {
}

func (m *GetProviderLatestHeightRequest) Reset()         { *m = GetProviderLatestHeightRequest{} }
func (m *GetProviderLatestHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetProviderLatestHeightRequest) ProtoMessage()    {}
func (*GetProviderLatestHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_853dc6f4c45df55d, []int{3}
}
func (m *GetProviderLatestHeightRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProviderLatestHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProviderLatestHeightRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProviderLatestHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderLatestHeightRequest.Merge(m, src)
}
func (m *GetProviderLatestHeightRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProviderLatestHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderLatestHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderLatestHeightRequest proto.InternalMessageInfo

type GetProviderLatestHeightResponse struct {
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *GetProviderLatestHeightResponse) Reset()         { *m = GetProviderLatestHeightResponse{} }
func (m *GetProviderLatestHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetProviderLatestHeightResponse) ProtoMessage()    {}
func (*GetProviderLatestHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_853dc6f4c45df55d, []int{4}
}
func (m *GetProviderLatestHeightResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProviderLatestHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProviderLatestHeightResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProviderLatestHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderLatestHeightResponse.Merge(m, src)
}
func (m *GetProviderLatestHeightResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProviderLatestHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderLatestHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderLatestHeightResponse proto.InternalMessageInfo

func (m *GetProviderLatestHeightResponse) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*ProviderEvents)(nil), "flux.indexer.campclash.ProviderEvents")
	proto.RegisterType((*QueryCampEventsRequest)(nil), "flux.indexer.campclash.QueryCampEventsRequest")
	proto.RegisterType((*QueryCampEventsResponse)(nil), "flux.indexer.campclash.QueryCampEventsResponse")
	proto.RegisterType((*GetProviderLatestHeightRequest)(nil), "flux.indexer.campclash.GetProviderLatestHeightRequest")
	proto.RegisterType((*GetProviderLatestHeightResponse)(nil), "flux.indexer.campclash.GetProviderLatestHeightResponse")
}

func init() {
	proto.RegisterFile("flux/indexer/campclash/provider_query.proto", fileDescriptor_853dc6f4c45df55d)
}

var fileDescriptor_853dc6f4c45df55d = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x3f, 0x6f, 0xd3, 0x40,
	0x18, 0xc6, 0xeb, 0x24, 0xca, 0x70, 0x08, 0x86, 0x1b, 0xd2, 0x28, 0x20, 0x13, 0x59, 0x08, 0x55,
	0xa0, 0xde, 0x4b, 0xca, 0x9f, 0x8a, 0x85, 0x01, 0x44, 0x61, 0x28, 0x15, 0x44, 0x4c, 0x2c, 0xe8,
	0x6c, 0xbf, 0xd8, 0x27, 0xd9, 0x77, 0xae, 0xef, 0x1c, 0xa5, 0x42, 0x2c, 0x48, 0xec, 0x48, 0x7c,
	0x07, 0xbe, 0x07, 0x1b, 0x63, 0x25, 0x16, 0x46, 0x94, 0xf0, 0x31, 0x18, 0x50, 0xce, 0x97, 0xb4,
	0x6a, 0x63, 0xfe, 0x6c, 0x89, 0xef, 0x7d, 0x9f, 0xe7, 0xf7, 0x3c, 0x3e, 0x93, 0x9b, 0x6f, 0xb2,
	0x6a, 0x0a, 0x42, 0xc6, 0x38, 0xc5, 0x12, 0x22, 0x9e, 0x17, 0x51, 0xc6, 0x75, 0x0a, 0x45, 0xa9,
	0x26, 0x22, 0xc6, 0xf2, 0xf5, 0x61, 0x85, 0xe5, 0x11, 0x2b, 0x4a, 0x65, 0x14, 0xed, 0x2d, 0x86,
	0x99, 0x1b, 0x66, 0xab, 0xe1, 0xc1, 0x8d, 0x48, 0xe9, 0x5c, 0x69, 0x08, 0xb9, 0x46, 0xb0, 0x0b,
	0x30, 0x19, 0x85, 0x68, 0xf8, 0x08, 0x0a, 0x9e, 0x08, 0xc9, 0x8d, 0x50, 0xb2, 0xd6, 0x18, 0x5c,
	0x49, 0x94, 0x4a, 0x32, 0x04, 0x5e, 0x08, 0xe0, 0x52, 0x2a, 0x63, 0x0f, 0xb5, 0x3b, 0xbd, 0x66,
	0x71, 0x70, 0x82, 0xd2, 0x68, 0x53, 0x22, 0xcf, 0x57, 0x42, 0xa7, 0x38, 0x06, 0x97, 0x0d, 0xca,
	0x18, 0xcb, 0x5c, 0x48, 0x03, 0x3c, 0x8c, 0x04, 0x98, 0xa3, 0x02, 0x9d, 0x44, 0x90, 0x91, 0x4b,
	0xcf, 0x1d, 0xfc, 0x63, 0xab, 0x43, 0x7b, 0xa4, 0x9b, 0xa2, 0x48, 0x52, 0xd3, 0xf7, 0x86, 0xde,
	0x56, 0x7b, 0xec, 0xfe, 0x51, 0x4a, 0x3a, 0x46, 0xe4, 0xd8, 0x6f, 0xd9, 0xa7, 0xf6, 0x37, 0x65,
	0xa4, 0x5b, 0xbb, 0xf7, 0xdb, 0xc3, 0xf6, 0xd6, 0x85, 0x9d, 0x1e, 0x3b, 0xf1, 0x62, 0x0b, 0x2f,
	0x66, 0x45, 0xc7, 0x6e, 0x2a, 0xb8, 0x45, 0x7a, 0x2f, 0x16, 0x64, 0x8f, 0x78, 0x5e, 0xd4, 0x76,
	0x63, 0x3c, 0xac, 0x50, 0x9b, 0x26, 0xd7, 0xe0, 0x83, 0x47, 0x36, 0xcf, 0xad, 0xe8, 0x42, 0x49,
	0x8d, 0x67, 0x76, 0x3a, 0x6b, 0x49, 0x3b, 0x8e, 0xf4, 0xc1, 0x19, 0xd2, 0xeb, 0xcc, 0xbe, 0x9d,
	0x53, 0xdd, 0x31, 0xd7, 0x1d, 0x7b, 0xa6, 0xe2, 0x2a, 0x43, 0xe7, 0xb5, 0x24, 0x1f, 0x12, 0xff,
	0x09, 0x9a, 0x65, 0x55, 0xfb, 0xdc, 0xa0, 0x36, 0x4f, 0xad, 0x9d, 0x4b, 0x10, 0xdc, 0x27, 0x57,
	0x1b, 0x27, 0xd6, 0x02, 0xaf, 0x42, 0xee, 0xfc, 0x6a, 0x91, 0x8b, 0xcb, 0x45, 0x1b, 0x96, 0x7e,
	0xf6, 0x08, 0x39, 0x49, 0x4c, 0x19, 0x5b, 0x7f, 0x97, 0xd8, 0xfa, 0x36, 0x07, 0xf0, 0xcf, 0xf3,
	0x35, 0x59, 0xb0, 0xfb, 0xfe, 0xdb, 0xcf, 0x4f, 0xad, 0x11, 0x05, 0x68, 0xb8, 0xe1, 0xcb, 0x8b,
	0x55, 0xd7, 0x01, 0x6f, 0x6b, 0xf2, 0x77, 0xf4, 0x8b, 0x47, 0x36, 0x1b, 0x62, 0xd3, 0x7b, 0x4d,
	0x14, 0x7f, 0x6e, 0x72, 0xb0, 0xfb, 0xdf, 0x7b, 0x2e, 0xc5, 0x5d, 0x9b, 0x02, 0xe8, 0xf6, 0xdf,
	0x52, 0x64, 0x76, 0x7b, 0xbb, 0x0e, 0xf1, 0xf0, 0xe0, 0xeb, 0xcc, 0xf7, 0x8e, 0x67, 0xbe, 0xf7,
	0x63, 0xe6, 0x7b, 0x1f, 0xe7, 0xfe, 0xc6, 0xf1, 0xdc, 0xdf, 0xf8, 0x3e, 0xf7, 0x37, 0x5e, 0xdd,
	0x49, 0x84, 0x49, 0xab, 0x90, 0x45, 0x2a, 0x87, 0xbd, 0xac, 0x9a, 0x1e, 0xec, 0xbd, 0xdc, 0xe7,
	0xa1, 0xb6, 0xf2, 0x31, 0x44, 0x29, 0x17, 0xf2, 0xbc, 0x4b, 0xd8, 0xb5, 0x9f, 0xd6, 0xed, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0xcb, 0x32, 0xd6, 0x2e, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProviderQueryClient is the client API for ProviderQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProviderQueryClient interface {
	// Balance queries the number of NFTs of a given class owned by the owner,
	// same as balanceOf in ERC721
	CampEvents(ctx context.Context, in *QueryCampEventsRequest, opts ...grpc.CallOption) (*QueryCampEventsResponse, error)
	GetProviderLatestHeight(ctx context.Context, in *GetProviderLatestHeightRequest, opts ...grpc.CallOption) (*GetProviderLatestHeightResponse, error)
}

type providerQueryClient struct {
	cc grpc1.ClientConn
}

func NewProviderQueryClient(cc grpc1.ClientConn) ProviderQueryClient {
	return &providerQueryClient{cc}
}

func (c *providerQueryClient) CampEvents(ctx context.Context, in *QueryCampEventsRequest, opts ...grpc.CallOption) (*QueryCampEventsResponse, error) {
	out := new(QueryCampEventsResponse)
	err := c.cc.Invoke(ctx, "/flux.indexer.campclash.ProviderQuery/CampEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerQueryClient) GetProviderLatestHeight(ctx context.Context, in *GetProviderLatestHeightRequest, opts ...grpc.CallOption) (*GetProviderLatestHeightResponse, error) {
	out := new(GetProviderLatestHeightResponse)
	err := c.cc.Invoke(ctx, "/flux.indexer.campclash.ProviderQuery/GetProviderLatestHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderQueryServer is the server API for ProviderQuery service.
type ProviderQueryServer interface {
	// Balance queries the number of NFTs of a given class owned by the owner,
	// same as balanceOf in ERC721
	CampEvents(context.Context, *QueryCampEventsRequest) (*QueryCampEventsResponse, error)
	GetProviderLatestHeight(context.Context, *GetProviderLatestHeightRequest) (*GetProviderLatestHeightResponse, error)
}

// UnimplementedProviderQueryServer can be embedded to have forward compatible implementations.
type UnimplementedProviderQueryServer struct {
}

func (*UnimplementedProviderQueryServer) CampEvents(ctx context.Context, req *QueryCampEventsRequest) (*QueryCampEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampEvents not implemented")
}
func (*UnimplementedProviderQueryServer) GetProviderLatestHeight(ctx context.Context, req *GetProviderLatestHeightRequest) (*GetProviderLatestHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProviderLatestHeight not implemented")
}

func RegisterProviderQueryServer(s grpc1.Server, srv ProviderQueryServer) {
	s.RegisterService(&_ProviderQuery_serviceDesc, srv)
}

func _ProviderQuery_CampEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryCampEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderQueryServer).CampEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flux.indexer.campclash.ProviderQuery/CampEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderQueryServer).CampEvents(ctx, req.(*QueryCampEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderQuery_GetProviderLatestHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderLatestHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderQueryServer).GetProviderLatestHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flux.indexer.campclash.ProviderQuery/GetProviderLatestHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderQueryServer).GetProviderLatestHeight(ctx, req.(*GetProviderLatestHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProviderQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flux.indexer.campclash.ProviderQuery",
	HandlerType: (*ProviderQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CampEvents",
			Handler:    _ProviderQuery_CampEvents_Handler,
		},
		{
			MethodName: "GetProviderLatestHeight",
			Handler:    _ProviderQuery_GetProviderLatestHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flux/indexer/campclash/provider_query.proto",
}

func (m *ProviderEvents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProviderEvents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProviderEvents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProviderQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Time != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Time))
		i--
		dAtA[i] = 0x10
	}
	if m.Height != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryCampEventsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryCampEventsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryCampEventsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Height != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryCampEventsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryCampEventsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryCampEventsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProviderQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Time != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Time))
		i--
		dAtA[i] = 0x10
	}
	if m.Height != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetProviderLatestHeightRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProviderLatestHeightRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProviderLatestHeightRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GetProviderLatestHeightResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProviderLatestHeightResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProviderLatestHeightResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Height != 0 {
		i = encodeVarintProviderQuery(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintProviderQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovProviderQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProviderEvents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovProviderQuery(uint64(m.Height))
	}
	if m.Time != 0 {
		n += 1 + sovProviderQuery(uint64(m.Time))
	}
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovProviderQuery(uint64(l))
		}
	}
	return n
}

func (m *QueryCampEventsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovProviderQuery(uint64(m.Height))
	}
	return n
}

func (m *QueryCampEventsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovProviderQuery(uint64(m.Height))
	}
	if m.Time != 0 {
		n += 1 + sovProviderQuery(uint64(m.Time))
	}
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovProviderQuery(uint64(l))
		}
	}
	return n
}

func (m *GetProviderLatestHeightRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GetProviderLatestHeightResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovProviderQuery(uint64(m.Height))
	}
	return n
}

func sovProviderQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProviderQuery(x uint64) (n int) {
	return sovProviderQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProviderEvents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProviderEvents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProviderEvents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			m.Time = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Time |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &types.Event{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryCampEventsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryCampEventsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryCampEventsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProviderQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryCampEventsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryCampEventsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryCampEventsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			m.Time = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Time |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &types1.ModuleEvents{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProviderLatestHeightRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProviderLatestHeightRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProviderLatestHeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipProviderQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProviderLatestHeightResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProviderLatestHeightResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProviderLatestHeightResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProviderQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProviderQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProviderQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProviderQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProviderQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProviderQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProviderQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProviderQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProviderQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProviderQuery = fmt.Errorf("proto: unexpected end of group")
)
