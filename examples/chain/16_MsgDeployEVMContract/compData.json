{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/1_Storage.sol\":{\"content\":\"pragma solidity >=0.8.2 <0.9.0;\\n\\ncontract Storage {\\n\\n    uint256 a;\\n    uint256 b;\\n    uint256 sum;\\n    bool processorUsed;\\n\\n    constructor(uint256 _a, uint256 _b) {\\n        a = _a;\\n        b = _b;\\n    }\\n\\n    function computeSum() public {\\n        sum = a + b;\\n    }\\n\\n    function getA() public view returns (uint256) {\\n        return a;\\n    }\\n\\n    function getB() public view returns (uint256) {\\n        return a;\\n    }\\n\\n    function getSum() public view returns (uint256) {\\n        return sum;\\n    }\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "Storage",
	"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"computeSum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0x676206b592f1f496400c18847191b40e0584681f9c96ba0b285234d0ac8185e4\",\"urls\":[\"bzz-raw://84a971a8c68d6ee3e245fee7ea213bb636ebd6b0ef8d06007bc2436f82f5b390\",\"dweb:/ipfs/QmXmi29F6DsTM9kEVAbdqH1PSBUJtfvdPH7HQZ2mMXiEEE\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_25": {
				"entryPoint": null,
				"id": 25,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_decode_t_uint256_fromMemory": {
				"entryPoint": 97,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
				"entryPoint": 115,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 69,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 65,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 78,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:1204:1",
					"nodeType": "YulBlock",
					"src": "0:1204:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:32:1",
								"nodeType": "YulBlock",
								"src": "379:32:1",
								"statements": [
									{
										"nativeSrc": "389:16:1",
										"nodeType": "YulAssignment",
										"src": "389:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "400:5:1",
											"nodeType": "YulIdentifier",
											"src": "400:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "334:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:77:1"
						},
						{
							"body": {
								"nativeSrc": "460:79:1",
								"nodeType": "YulBlock",
								"src": "460:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "517:16:1",
											"nodeType": "YulBlock",
											"src": "517:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "526:1:1",
																"nodeType": "YulLiteral",
																"src": "526:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "529:1:1",
																"nodeType": "YulLiteral",
																"src": "529:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "519:6:1",
															"nodeType": "YulIdentifier",
															"src": "519:6:1"
														},
														"nativeSrc": "519:12:1",
														"nodeType": "YulFunctionCall",
														"src": "519:12:1"
													},
													"nativeSrc": "519:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "519:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "483:5:1",
															"nodeType": "YulIdentifier",
															"src": "483:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "508:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "508:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "490:17:1",
																"nodeType": "YulIdentifier",
																"src": "490:17:1"
															},
															"nativeSrc": "490:24:1",
															"nodeType": "YulFunctionCall",
															"src": "490:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "480:2:1",
														"nodeType": "YulIdentifier",
														"src": "480:2:1"
													},
													"nativeSrc": "480:35:1",
													"nodeType": "YulFunctionCall",
													"src": "480:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "473:6:1",
												"nodeType": "YulIdentifier",
												"src": "473:6:1"
											},
											"nativeSrc": "473:43:1",
											"nodeType": "YulFunctionCall",
											"src": "473:43:1"
										},
										"nativeSrc": "470:63:1",
										"nodeType": "YulIf",
										"src": "470:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "417:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "453:5:1",
									"nodeType": "YulTypedName",
									"src": "453:5:1",
									"type": ""
								}
							],
							"src": "417:122:1"
						},
						{
							"body": {
								"nativeSrc": "608:80:1",
								"nodeType": "YulBlock",
								"src": "608:80:1",
								"statements": [
									{
										"nativeSrc": "618:22:1",
										"nodeType": "YulAssignment",
										"src": "618:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "633:6:1",
													"nodeType": "YulIdentifier",
													"src": "633:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "627:5:1",
												"nodeType": "YulIdentifier",
												"src": "627:5:1"
											},
											"nativeSrc": "627:13:1",
											"nodeType": "YulFunctionCall",
											"src": "627:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "618:5:1",
												"nodeType": "YulIdentifier",
												"src": "618:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "676:5:1",
													"nodeType": "YulIdentifier",
													"src": "676:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "649:26:1",
												"nodeType": "YulIdentifier",
												"src": "649:26:1"
											},
											"nativeSrc": "649:33:1",
											"nodeType": "YulFunctionCall",
											"src": "649:33:1"
										},
										"nativeSrc": "649:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "649:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256_fromMemory",
							"nativeSrc": "545:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "586:6:1",
									"nodeType": "YulTypedName",
									"src": "586:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "594:3:1",
									"nodeType": "YulTypedName",
									"src": "594:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "602:5:1",
									"nodeType": "YulTypedName",
									"src": "602:5:1",
									"type": ""
								}
							],
							"src": "545:143:1"
						},
						{
							"body": {
								"nativeSrc": "788:413:1",
								"nodeType": "YulBlock",
								"src": "788:413:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "834:83:1",
											"nodeType": "YulBlock",
											"src": "834:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "836:77:1",
															"nodeType": "YulIdentifier",
															"src": "836:77:1"
														},
														"nativeSrc": "836:79:1",
														"nodeType": "YulFunctionCall",
														"src": "836:79:1"
													},
													"nativeSrc": "836:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "836:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "809:7:1",
															"nodeType": "YulIdentifier",
															"src": "809:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "818:9:1",
															"nodeType": "YulIdentifier",
															"src": "818:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "805:3:1",
														"nodeType": "YulIdentifier",
														"src": "805:3:1"
													},
													"nativeSrc": "805:23:1",
													"nodeType": "YulFunctionCall",
													"src": "805:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "830:2:1",
													"nodeType": "YulLiteral",
													"src": "830:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "801:3:1",
												"nodeType": "YulIdentifier",
												"src": "801:3:1"
											},
											"nativeSrc": "801:32:1",
											"nodeType": "YulFunctionCall",
											"src": "801:32:1"
										},
										"nativeSrc": "798:119:1",
										"nodeType": "YulIf",
										"src": "798:119:1"
									},
									{
										"nativeSrc": "927:128:1",
										"nodeType": "YulBlock",
										"src": "927:128:1",
										"statements": [
											{
												"nativeSrc": "942:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "942:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "956:1:1",
													"nodeType": "YulLiteral",
													"src": "956:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "946:6:1",
														"nodeType": "YulTypedName",
														"src": "946:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "971:74:1",
												"nodeType": "YulAssignment",
												"src": "971:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1017:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1017:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1013:3:1",
																"nodeType": "YulIdentifier",
																"src": "1013:3:1"
															},
															"nativeSrc": "1013:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1013:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1037:7:1",
															"nodeType": "YulIdentifier",
															"src": "1037:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "981:31:1",
														"nodeType": "YulIdentifier",
														"src": "981:31:1"
													},
													"nativeSrc": "981:64:1",
													"nodeType": "YulFunctionCall",
													"src": "981:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "971:6:1",
														"nodeType": "YulIdentifier",
														"src": "971:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "1065:129:1",
										"nodeType": "YulBlock",
										"src": "1065:129:1",
										"statements": [
											{
												"nativeSrc": "1080:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1080:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1094:2:1",
													"nodeType": "YulLiteral",
													"src": "1094:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1084:6:1",
														"nodeType": "YulTypedName",
														"src": "1084:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1110:74:1",
												"nodeType": "YulAssignment",
												"src": "1110:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1156:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1156:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1152:3:1",
																"nodeType": "YulIdentifier",
																"src": "1152:3:1"
															},
															"nativeSrc": "1152:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1152:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1176:7:1",
															"nodeType": "YulIdentifier",
															"src": "1176:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "1120:31:1",
														"nodeType": "YulIdentifier",
														"src": "1120:31:1"
													},
													"nativeSrc": "1120:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1120:64:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "1110:6:1",
														"nodeType": "YulIdentifier",
														"src": "1110:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
							"nativeSrc": "694:507:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "750:9:1",
									"nodeType": "YulTypedName",
									"src": "750:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "761:7:1",
									"nodeType": "YulTypedName",
									"src": "761:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "773:6:1",
									"nodeType": "YulTypedName",
									"src": "773:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "781:6:1",
									"nodeType": "YulTypedName",
									"src": "781:6:1",
									"type": ""
								}
							],
							"src": "694:507:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "6080604052348015600e575f80fd5b506040516102603803806102608339818101604052810190602e91906073565b815f8190555080600181905550505060aa565b5f80fd5b5f819050919050565b6055816045565b8114605e575f80fd5b50565b5f81519050606d81604e565b92915050565b5f806040838503121560865760856041565b5b5f6091858286016061565b925050602060a0858286016061565b9150509250929050565b6101a9806100b75f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b60405161006391906100fa565b60405180910390f35b6100746100bb565b60405161008191906100fa565b60405180910390f35b6100926100c3565b005b61009c6100da565b6040516100a991906100fa565b60405180910390f35b5f600254905090565b5f8054905090565b6001545f546100d29190610140565b600281905550565b5f8054905090565b5f819050919050565b6100f4816100e2565b82525050565b5f60208201905061010d5f8301846100eb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014a826100e2565b9150610155836100e2565b925082820190508082111561016d5761016c610113565b5b9291505056fea2646970667358221220952728d0a3b21742815c1627660d2cf5816d9148c4f2d6eac6252d7933012ad164736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x260 CODESIZE SUB DUP1 PUSH2 0x260 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH1 0x2E SWAP2 SWAP1 PUSH1 0x73 JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH1 0xAA JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x55 DUP2 PUSH1 0x45 JUMP JUMPDEST DUP2 EQ PUSH1 0x5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH1 0x6D DUP2 PUSH1 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x86 JUMPI PUSH1 0x85 PUSH1 0x41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x91 DUP6 DUP3 DUP7 ADD PUSH1 0x61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH1 0xA0 DUP6 DUP3 DUP7 ADD PUSH1 0x61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9 DUP1 PUSH2 0xB7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x569C5F6D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA1C51915 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC2A970D1 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D PUSH0 DUP4 ADD DUP5 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A DUP3 PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP PUSH2 0x155 DUP4 PUSH2 0xE2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x113 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x27 0x28 0xD0 LOG3 0xB2 OR TIMESTAMP DUP2 TLOAD AND 0x27 PUSH7 0xD2CF5816D9148 0xC4 CALLCODE 0xD6 0xEA 0xC6 0x25 0x2D PUSH26 0x33012AD164736F6C634300081A00330000000000000000000000 ",
		"sourceMap": "33:471:0:-:0;;;129:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;179:2;175:1;:6;;;;195:2;191:1;:6;;;;129:75;;33:471;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;33:471:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_a",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_b",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "computeSum",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getA",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getB",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getSum",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 3,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "a",
				"offset": 0,
				"slot": "0",
				"type": "t_uint256"
			},
			{
				"astId": 5,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "b",
				"offset": 0,
				"slot": "1",
				"type": "t_uint256"
			},
			{
				"astId": 7,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "sum",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 9,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "processorUsed",
				"offset": 0,
				"slot": "3",
				"type": "t_bool"
			}
		],
		"types": {
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var _a = /* var of type uint256 here */ ;\nvar _b = /* var of type uint256 here */ ;\nvar storageContract = new web3.eth.Contract([{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"computeSum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar storage = storageContract.deploy({\n     data: '0x6080604052348015600e575f80fd5b506040516102603803806102608339818101604052810190602e91906073565b815f8190555080600181905550505060aa565b5f80fd5b5f819050919050565b6055816045565b8114605e575f80fd5b50565b5f81519050606d81604e565b92915050565b5f806040838503121560865760856041565b5b5f6091858286016061565b925050602060a0858286016061565b9150509250929050565b6101a9806100b75f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b60405161006391906100fa565b60405180910390f35b6100746100bb565b60405161008191906100fa565b60405180910390f35b6100926100c3565b005b61009c6100da565b6040516100a991906100fa565b60405180910390f35b5f600254905090565b5f8054905090565b6001545f546100d29190610140565b600281905550565b5f8054905090565b5f819050919050565b6100f4816100e2565b82525050565b5f60208201905061010d5f8301846100eb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014a826100e2565b9150610155836100e2565b925082820190508082111561016d5761016c610113565b5b9291505056fea2646970667358221220952728d0a3b21742815c1627660d2cf5816d9148c4f2d6eac6252d7933012ad164736f6c634300081a0033', \n     arguments: [\n          _a,\n          _b,\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"c2a970d1": "computeSum()",
		"d46300fd": "getA()",
		"a1c51915": "getB()",
		"569c5f6d": "getSum()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "85000",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"computeSum()": "infinite",
			"getA()": "2476",
			"getB()": "2432",
			"getSum()": "2410"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@computeSum_35": {
				"entryPoint": 195,
				"id": 35,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@getA_43": {
				"entryPoint": 218,
				"id": 43,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getB_51": {
				"entryPoint": 187,
				"id": 51,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getSum_59": {
				"entryPoint": 178,
				"id": 59,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 235,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 250,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 320,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 226,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 275,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:822:1",
					"nodeType": "YulBlock",
					"src": "0:822:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "52:32:1",
								"nodeType": "YulBlock",
								"src": "52:32:1",
								"statements": [
									{
										"nativeSrc": "62:16:1",
										"nodeType": "YulAssignment",
										"src": "62:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "73:5:1",
											"nodeType": "YulIdentifier",
											"src": "73:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "62:7:1",
												"nodeType": "YulIdentifier",
												"src": "62:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "7:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "34:5:1",
									"nodeType": "YulTypedName",
									"src": "34:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "44:7:1",
									"nodeType": "YulTypedName",
									"src": "44:7:1",
									"type": ""
								}
							],
							"src": "7:77:1"
						},
						{
							"body": {
								"nativeSrc": "155:53:1",
								"nodeType": "YulBlock",
								"src": "155:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "172:3:1",
													"nodeType": "YulIdentifier",
													"src": "172:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "195:5:1",
															"nodeType": "YulIdentifier",
															"src": "195:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "177:17:1",
														"nodeType": "YulIdentifier",
														"src": "177:17:1"
													},
													"nativeSrc": "177:24:1",
													"nodeType": "YulFunctionCall",
													"src": "177:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "165:6:1",
												"nodeType": "YulIdentifier",
												"src": "165:6:1"
											},
											"nativeSrc": "165:37:1",
											"nodeType": "YulFunctionCall",
											"src": "165:37:1"
										},
										"nativeSrc": "165:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "165:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "90:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "143:5:1",
									"nodeType": "YulTypedName",
									"src": "143:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "150:3:1",
									"nodeType": "YulTypedName",
									"src": "150:3:1",
									"type": ""
								}
							],
							"src": "90:118:1"
						},
						{
							"body": {
								"nativeSrc": "312:124:1",
								"nodeType": "YulBlock",
								"src": "312:124:1",
								"statements": [
									{
										"nativeSrc": "322:26:1",
										"nodeType": "YulAssignment",
										"src": "322:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "334:9:1",
													"nodeType": "YulIdentifier",
													"src": "334:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "345:2:1",
													"nodeType": "YulLiteral",
													"src": "345:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "330:3:1",
												"nodeType": "YulIdentifier",
												"src": "330:3:1"
											},
											"nativeSrc": "330:18:1",
											"nodeType": "YulFunctionCall",
											"src": "330:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "322:4:1",
												"nodeType": "YulIdentifier",
												"src": "322:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "402:6:1",
													"nodeType": "YulIdentifier",
													"src": "402:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "415:9:1",
															"nodeType": "YulIdentifier",
															"src": "415:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "426:1:1",
															"nodeType": "YulLiteral",
															"src": "426:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "411:3:1",
														"nodeType": "YulIdentifier",
														"src": "411:3:1"
													},
													"nativeSrc": "411:17:1",
													"nodeType": "YulFunctionCall",
													"src": "411:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "358:43:1",
												"nodeType": "YulIdentifier",
												"src": "358:43:1"
											},
											"nativeSrc": "358:71:1",
											"nodeType": "YulFunctionCall",
											"src": "358:71:1"
										},
										"nativeSrc": "358:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "358:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "214:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "284:9:1",
									"nodeType": "YulTypedName",
									"src": "284:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "296:6:1",
									"nodeType": "YulTypedName",
									"src": "296:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "307:4:1",
									"nodeType": "YulTypedName",
									"src": "307:4:1",
									"type": ""
								}
							],
							"src": "214:222:1"
						},
						{
							"body": {
								"nativeSrc": "470:152:1",
								"nodeType": "YulBlock",
								"src": "470:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "487:1:1",
													"nodeType": "YulLiteral",
													"src": "487:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "490:77:1",
													"nodeType": "YulLiteral",
													"src": "490:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "480:6:1",
												"nodeType": "YulIdentifier",
												"src": "480:6:1"
											},
											"nativeSrc": "480:88:1",
											"nodeType": "YulFunctionCall",
											"src": "480:88:1"
										},
										"nativeSrc": "480:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "480:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "584:1:1",
													"nodeType": "YulLiteral",
													"src": "584:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "587:4:1",
													"nodeType": "YulLiteral",
													"src": "587:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "577:6:1",
												"nodeType": "YulIdentifier",
												"src": "577:6:1"
											},
											"nativeSrc": "577:15:1",
											"nodeType": "YulFunctionCall",
											"src": "577:15:1"
										},
										"nativeSrc": "577:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "577:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "608:1:1",
													"nodeType": "YulLiteral",
													"src": "608:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "611:4:1",
													"nodeType": "YulLiteral",
													"src": "611:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "601:6:1",
												"nodeType": "YulIdentifier",
												"src": "601:6:1"
											},
											"nativeSrc": "601:15:1",
											"nodeType": "YulFunctionCall",
											"src": "601:15:1"
										},
										"nativeSrc": "601:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "601:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "442:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "442:180:1"
						},
						{
							"body": {
								"nativeSrc": "672:147:1",
								"nodeType": "YulBlock",
								"src": "672:147:1",
								"statements": [
									{
										"nativeSrc": "682:25:1",
										"nodeType": "YulAssignment",
										"src": "682:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "705:1:1",
													"nodeType": "YulIdentifier",
													"src": "705:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "687:17:1",
												"nodeType": "YulIdentifier",
												"src": "687:17:1"
											},
											"nativeSrc": "687:20:1",
											"nodeType": "YulFunctionCall",
											"src": "687:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "682:1:1",
												"nodeType": "YulIdentifier",
												"src": "682:1:1"
											}
										]
									},
									{
										"nativeSrc": "716:25:1",
										"nodeType": "YulAssignment",
										"src": "716:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "739:1:1",
													"nodeType": "YulIdentifier",
													"src": "739:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "721:17:1",
												"nodeType": "YulIdentifier",
												"src": "721:17:1"
											},
											"nativeSrc": "721:20:1",
											"nodeType": "YulFunctionCall",
											"src": "721:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "716:1:1",
												"nodeType": "YulIdentifier",
												"src": "716:1:1"
											}
										]
									},
									{
										"nativeSrc": "750:16:1",
										"nodeType": "YulAssignment",
										"src": "750:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "761:1:1",
													"nodeType": "YulIdentifier",
													"src": "761:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "764:1:1",
													"nodeType": "YulIdentifier",
													"src": "764:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "757:3:1",
												"nodeType": "YulIdentifier",
												"src": "757:3:1"
											},
											"nativeSrc": "757:9:1",
											"nodeType": "YulFunctionCall",
											"src": "757:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "750:3:1",
												"nodeType": "YulIdentifier",
												"src": "750:3:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "790:22:1",
											"nodeType": "YulBlock",
											"src": "790:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "792:16:1",
															"nodeType": "YulIdentifier",
															"src": "792:16:1"
														},
														"nativeSrc": "792:18:1",
														"nodeType": "YulFunctionCall",
														"src": "792:18:1"
													},
													"nativeSrc": "792:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "792:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "782:1:1",
													"nodeType": "YulIdentifier",
													"src": "782:1:1"
												},
												{
													"name": "sum",
													"nativeSrc": "785:3:1",
													"nodeType": "YulIdentifier",
													"src": "785:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "779:2:1",
												"nodeType": "YulIdentifier",
												"src": "779:2:1"
											},
											"nativeSrc": "779:10:1",
											"nodeType": "YulFunctionCall",
											"src": "779:10:1"
										},
										"nativeSrc": "776:36:1",
										"nodeType": "YulIf",
										"src": "776:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "628:191:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "659:1:1",
									"nodeType": "YulTypedName",
									"src": "659:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "662:1:1",
									"nodeType": "YulTypedName",
									"src": "662:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "668:3:1",
									"nodeType": "YulTypedName",
									"src": "668:3:1",
									"type": ""
								}
							],
							"src": "628:191:1"
						}
					]
				},
				"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b60405161006391906100fa565b60405180910390f35b6100746100bb565b60405161008191906100fa565b60405180910390f35b6100926100c3565b005b61009c6100da565b6040516100a991906100fa565b60405180910390f35b5f600254905090565b5f8054905090565b6001545f546100d29190610140565b600281905550565b5f8054905090565b5f819050919050565b6100f4816100e2565b82525050565b5f60208201905061010d5f8301846100eb565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014a826100e2565b9150610155836100e2565b925082820190508082111561016d5761016c610113565b5b9291505056fea2646970667358221220952728d0a3b21742815c1627660d2cf5816d9148c4f2d6eac6252d7933012ad164736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x569C5F6D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA1C51915 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC2A970D1 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D PUSH0 DUP4 ADD DUP5 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A DUP3 PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP PUSH2 0x155 DUP4 PUSH2 0xE2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x113 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x27 0x28 0xD0 LOG3 0xB2 OR TIMESTAMP DUP2 TLOAD AND 0x27 PUSH7 0xD2CF5816D9148 0xC4 CALLCODE 0xD6 0xEA 0xC6 0x25 0x2D PUSH26 0x33012AD164736F6C634300081A00330000000000000000000000 ",
		"sourceMap": "33:471:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;350:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;210:57;;;:::i;:::-;;273:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;427:75;466:7;492:3;;485:10;;427:75;:::o;350:71::-;387:7;413:1;;406:8;;350:71;:::o;210:57::-;259:1;;255;;:5;;;;:::i;:::-;249:3;:11;;;;210:57::o;273:71::-;310:7;336:1;;329:8;;273:71;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:191;668:3;687:20;705:1;687:20;:::i;:::-;682:25;;721:20;739:1;721:20;:::i;:::-;716:25;;764:1;761;757:9;750:16;;785:3;782:1;779:10;776:36;;;792:18;;:::i;:::-;776:36;628:191;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract Storage {\\n\\n    uint...\n  PUSH 40\t\t\tcontract Storage {\\n\\n    uint...\n  MSTORE \t\t\tcontract Storage {\\n\\n    uint...\n  CALLVALUE \t\t\tconstructor(uint256 _a, uint25...\n  DUP1 \t\t\tconstructor(uint256 _a, uint25...\n  ISZERO \t\t\tconstructor(uint256 _a, uint25...\n  PUSH [tag] 1\t\t\tconstructor(uint256 _a, uint25...\n  JUMPI \t\t\tconstructor(uint256 _a, uint25...\n  PUSH 0\t\t\tconstructor(uint256 _a, uint25...\n  DUP1 \t\t\tconstructor(uint256 _a, uint25...\n  REVERT \t\t\tconstructor(uint256 _a, uint25...\ntag 1\t\t\tconstructor(uint256 _a, uint25...\n  JUMPDEST \t\t\tconstructor(uint256 _a, uint25...\n  POP \t\t\tconstructor(uint256 _a, uint25...\n  PUSH 40\t\t\tconstructor(uint256 _a, uint25...\n  MLOAD \t\t\tconstructor(uint256 _a, uint25...\n  PUSHSIZE \t\t\tconstructor(uint256 _a, uint25...\n  CODESIZE \t\t\tconstructor(uint256 _a, uint25...\n  SUB \t\t\tconstructor(uint256 _a, uint25...\n  DUP1 \t\t\tconstructor(uint256 _a, uint25...\n  PUSHSIZE \t\t\tconstructor(uint256 _a, uint25...\n  DUP4 \t\t\tconstructor(uint256 _a, uint25...\n  CODECOPY \t\t\tconstructor(uint256 _a, uint25...\n  DUP2 \t\t\tconstructor(uint256 _a, uint25...\n  DUP2 \t\t\tconstructor(uint256 _a, uint25...\n  ADD \t\t\tconstructor(uint256 _a, uint25...\n  PUSH 40\t\t\tconstructor(uint256 _a, uint25...\n  MSTORE \t\t\tconstructor(uint256 _a, uint25...\n  DUP2 \t\t\tconstructor(uint256 _a, uint25...\n  ADD \t\t\tconstructor(uint256 _a, uint25...\n  SWAP1 \t\t\tconstructor(uint256 _a, uint25...\n  PUSH [tag] 2\t\t\tconstructor(uint256 _a, uint25...\n  SWAP2 \t\t\tconstructor(uint256 _a, uint25...\n  SWAP1 \t\t\tconstructor(uint256 _a, uint25...\n  PUSH [tag] 3\t\t\tconstructor(uint256 _a, uint25...\n  JUMP \t\t\tconstructor(uint256 _a, uint25...\ntag 2\t\t\tconstructor(uint256 _a, uint25...\n  JUMPDEST \t\t\tconstructor(uint256 _a, uint25...\n  DUP2 \t\t\t_a\n  PUSH 0\t\t\ta\n  DUP2 \t\t\ta = _a\n  SWAP1 \t\t\ta = _a\n  SSTORE \t\t\ta = _a\n  POP \t\t\ta = _a\n  DUP1 \t\t\t_b\n  PUSH 1\t\t\tb\n  DUP2 \t\t\tb = _b\n  SWAP1 \t\t\tb = _b\n  SSTORE \t\t\tb = _b\n  POP \t\t\tb = _b\n  POP \t\t\tconstructor(uint256 _a, uint25...\n  POP \t\t\tconstructor(uint256 _a, uint25...\n  PUSH [tag] 6\t\t\tcontract Storage {\\n\\n    uint...\n  JUMP \t\t\tcontract Storage {\\n\\n    uint...\ntag 8\t\t\tint256 sum;\\n    bool processo...\n  JUMPDEST \t\t\tint256 sum;\\n    bool processo...\n  PUSH 0\t\t\t;\n  DUP1 \t\t\t \n  REVERT \t\t\t    b = _b;\\n\ntag 10\t\t\tn a;\\n    }\\n\\n    function ge...\n  JUMPDEST \t\t\tn a;\\n    }\\n\\n    function ge...\n  PUSH 0\t\t\tc view \n  DUP2 \t\t\t     \n  SWAP1 \t\t\tnt256) {\\n       \n  POP \t\t\tnt256) {\\n       \n  SWAP2 \t\t\tn a;\\n    }\\n\\n    function ge...\n  SWAP1 \t\t\tn a;\\n    }\\n\\n    function ge...\n  POP \t\t\tn a;\\n    }\\n\\n    function ge...\n  JUMP \t\t\tn a;\\n    }\\n\\n    function ge...\ntag 11\t\t\t   }\\n\\n    function getSum() ...\n  JUMPDEST \t\t\t   }\\n\\n    function getSum() ...\n  PUSH [tag] 19\t\t\tn sum;\\n    }\\n}\n  DUP2 \t\t\t\n  PUSH [tag] 10\t\t\tn sum;\\n    }\\n}\n  JUMP \t\t\tn sum;\\n    }\\n}\ntag 19\t\t\tn sum;\\n    }\\n}\n  JUMPDEST \t\t\tn sum;\\n    }\\n}\n  DUP2 \t\t\t  ret\n  EQ \t\t\t     return sum;\\n    }\\n}\n  PUSH [tag] 20\t\t\t256) {\\n        return sum;\\n ...\n  JUMPI \t\t\t256) {\\n        return sum;\\n ...\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 20\t\t\t256) {\\n        return sum;\\n ...\n  JUMPDEST \t\t\t256) {\\n        return sum;\\n ...\n  POP \t\t\t   }\\n\\n    function getSum() ...\n  JUMP \t\t\t   }\\n\\n    function getSum() ...\ntag 12\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 22\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 11\t\t\t\n  JUMP \t\t\t\ntag 22\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 3\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  DUP4 \t\t\t\n  DUP6 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 24\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 25\t\t\t\n  PUSH [tag] 8\t\t\t\n  JUMP \t\t\t\ntag 25\t\t\t\n  JUMPDEST \t\t\t\ntag 24\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 26\t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  DUP7 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 26\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  PUSH [tag] 27\t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  DUP7 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 27\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 6\t\t\tcontract Storage {\\n\\n    uint...\n  JUMPDEST \t\t\tcontract Storage {\\n\\n    uint...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Storage {\\n\\n    uint...\n  DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Storage {\\n\\n    uint...\n  PUSH 0\t\t\tcontract Storage {\\n\\n    uint...\n  CODECOPY \t\t\tcontract Storage {\\n\\n    uint...\n  PUSH 0\t\t\tcontract Storage {\\n\\n    uint...\n  RETURN \t\t\tcontract Storage {\\n\\n    uint...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 40\t\t\tcontract Storage {\\n\\n    uint...\n      MSTORE \t\t\tcontract Storage {\\n\\n    uint...\n      CALLVALUE \t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      ISZERO \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 1\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      REVERT \t\t\tcontract Storage {\\n\\n    uint...\n    tag 1\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPDEST \t\t\tcontract Storage {\\n\\n    uint...\n      POP \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 4\t\t\tcontract Storage {\\n\\n    uint...\n      CALLDATASIZE \t\t\tcontract Storage {\\n\\n    uint...\n      LT \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 2\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    uint...\n      CALLDATALOAD \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH E0\t\t\tcontract Storage {\\n\\n    uint...\n      SHR \t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 569C5F6D\t\t\tcontract Storage {\\n\\n    uint...\n      EQ \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 3\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH A1C51915\t\t\tcontract Storage {\\n\\n    uint...\n      EQ \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 4\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH C2A970D1\t\t\tcontract Storage {\\n\\n    uint...\n      EQ \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 5\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH D46300FD\t\t\tcontract Storage {\\n\\n    uint...\n      EQ \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH [tag] 6\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPI \t\t\tcontract Storage {\\n\\n    uint...\n    tag 2\t\t\tcontract Storage {\\n\\n    uint...\n      JUMPDEST \t\t\tcontract Storage {\\n\\n    uint...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    uint...\n      DUP1 \t\t\tcontract Storage {\\n\\n    uint...\n      REVERT \t\t\tcontract Storage {\\n\\n    uint...\n    tag 3\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH [tag] 7\t\t\tfunction getSum() public view ...\n      PUSH [tag] 8\t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 7\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 40\t\t\tfunction getSum() public view ...\n      MLOAD \t\t\tfunction getSum() public view ...\n      PUSH [tag] 9\t\t\tfunction getSum() public view ...\n      SWAP2 \t\t\tfunction getSum() public view ...\n      SWAP1 \t\t\tfunction getSum() public view ...\n      PUSH [tag] 10\t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 9\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 40\t\t\tfunction getSum() public view ...\n      MLOAD \t\t\tfunction getSum() public view ...\n      DUP1 \t\t\tfunction getSum() public view ...\n      SWAP2 \t\t\tfunction getSum() public view ...\n      SUB \t\t\tfunction getSum() public view ...\n      SWAP1 \t\t\tfunction getSum() public view ...\n      RETURN \t\t\tfunction getSum() public view ...\n    tag 4\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH [tag] 11\t\t\tfunction getB() public view re...\n      PUSH [tag] 12\t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 11\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 40\t\t\tfunction getB() public view re...\n      MLOAD \t\t\tfunction getB() public view re...\n      PUSH [tag] 13\t\t\tfunction getB() public view re...\n      SWAP2 \t\t\tfunction getB() public view re...\n      SWAP1 \t\t\tfunction getB() public view re...\n      PUSH [tag] 10\t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 13\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 40\t\t\tfunction getB() public view re...\n      MLOAD \t\t\tfunction getB() public view re...\n      DUP1 \t\t\tfunction getB() public view re...\n      SWAP2 \t\t\tfunction getB() public view re...\n      SUB \t\t\tfunction getB() public view re...\n      SWAP1 \t\t\tfunction getB() public view re...\n      RETURN \t\t\tfunction getB() public view re...\n    tag 5\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      PUSH [tag] 14\t\t\tfunction computeSum() public {...\n      PUSH [tag] 15\t\t\tfunction computeSum() public {...\n      JUMP \t\t\tfunction computeSum() public {...\n    tag 14\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      STOP \t\t\tfunction computeSum() public {...\n    tag 6\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH [tag] 16\t\t\tfunction getA() public view re...\n      PUSH [tag] 17\t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 16\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 40\t\t\tfunction getA() public view re...\n      MLOAD \t\t\tfunction getA() public view re...\n      PUSH [tag] 18\t\t\tfunction getA() public view re...\n      SWAP2 \t\t\tfunction getA() public view re...\n      SWAP1 \t\t\tfunction getA() public view re...\n      PUSH [tag] 10\t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 18\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 40\t\t\tfunction getA() public view re...\n      MLOAD \t\t\tfunction getA() public view re...\n      DUP1 \t\t\tfunction getA() public view re...\n      SWAP2 \t\t\tfunction getA() public view re...\n      SUB \t\t\tfunction getA() public view re...\n      SWAP1 \t\t\tfunction getA() public view re...\n      RETURN \t\t\tfunction getA() public view re...\n    tag 8\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 0\t\t\tuint256\n      PUSH 2\t\t\tsum\n      SLOAD \t\t\tsum\n      SWAP1 \t\t\treturn sum\n      POP \t\t\treturn sum\n      SWAP1 \t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 12\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 0\t\t\tuint256\n      DUP1 \t\t\ta\n      SLOAD \t\t\ta\n      SWAP1 \t\t\treturn a\n      POP \t\t\treturn a\n      SWAP1 \t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 15\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      PUSH 1\t\t\tb\n      SLOAD \t\t\tb\n      PUSH 0\t\t\ta\n      SLOAD \t\t\ta\n      PUSH [tag] 22\t\t\ta + b\n      SWAP2 \t\t\ta + b\n      SWAP1 \t\t\ta + b\n      PUSH [tag] 23\t\t\ta + b\n      JUMP \t\t\ta + b\n    tag 22\t\t\ta + b\n      JUMPDEST \t\t\ta + b\n      PUSH 2\t\t\tsum\n      DUP2 \t\t\tsum = a + b\n      SWAP1 \t\t\tsum = a + b\n      SSTORE \t\t\tsum = a + b\n      POP \t\t\tsum = a + b\n      JUMP \t\t\tfunction computeSum() public {...\n    tag 17\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 0\t\t\tuint256\n      DUP1 \t\t\ta\n      SLOAD \t\t\ta\n      SWAP1 \t\t\treturn a\n      POP \t\t\treturn a\n      SWAP1 \t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 25\t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n      JUMPDEST \t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n      PUSH 0\t\t\torage {\n      DUP2 \t\t\tint25\n      SWAP1 \t\t\t56 a;\\n    uint25\n      POP \t\t\t56 a;\\n    uint25\n      SWAP2 \t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n      SWAP1 \t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n      POP \t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n      JUMP \t\t\tsolidity >=0.8.2 <0.9.0;\\n\\nco...\n    tag 26\t\t\tt256 sum;\\n    bool processorU...\n      JUMPDEST \t\t\tt256 sum;\\n    bool processorU...\n      PUSH [tag] 31\t\t\t= _a;\\n        b = _b;\\n  \n      DUP2 \t\t\t_b;\\n \n      PUSH [tag] 25\t\t\t= _a;\\n        b = _b;\\n  \n      JUMP \t\t\t= _a;\\n        b = _b;\\n  \n    tag 31\t\t\t= _a;\\n        b = _b;\\n  \n      JUMPDEST \t\t\t= _a;\\n        b = _b;\\n  \n      DUP3 \t\t\t   \n      MSTORE \t\t\t{\\n        a = _a;\\n        b ...\n      POP \t\t\tt256 sum;\\n    bool processorU...\n      POP \t\t\tt256 sum;\\n    bool processorU...\n      JUMP \t\t\tt256 sum;\\n    bool processorU...\n    tag 10\t\t\ttion computeSum() public {\\n  ...\n      JUMPDEST \t\t\ttion computeSum() public {\\n  ...\n      PUSH 0\t\t\ts (u\n      PUSH 20\t\t\t\\n \n      DUP3 \t\t\tn a;\\n    \n      ADD \t\t\teturn a;\\n    }\\n\\n  \n      SWAP1 \t\t\t       return a;\\n    }\\n\\n  \n      POP \t\t\t       return a;\\n    }\\n\\n  \n      PUSH [tag] 33\t\t\t getB() public view returns (u...\n      PUSH 0\t\t\t \n      DUP4 \t\t\t\\n    }\\n\\n \n      ADD \t\t\tn a;\\n    }\\n\\n    f\n      DUP5 \t\t\t    re\n      PUSH [tag] 26\t\t\t getB() public view returns (u...\n      JUMP \t\t\t getB() public view returns (u...\n    tag 33\t\t\t getB() public view returns (u...\n      JUMPDEST \t\t\t getB() public view returns (u...\n      SWAP3 \t\t\ttion computeSum() public {\\n  ...\n      SWAP2 \t\t\ttion computeSum() public {\\n  ...\n      POP \t\t\ttion computeSum() public {\\n  ...\n      POP \t\t\ttion computeSum() public {\\n  ...\n      JUMP \t\t\ttion computeSum() public {\\n  ...\n    tag 27\t\t\t() public view returns (uint25...\n      JUMPDEST \t\t\t() public view returns (uint25...\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\tn sum;\\n    }\\n}\n      PUSH 0\t\t\tt\n      MSTORE \t\t\t     return sum;\\n    }\\n}\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 36\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 37\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 25\t\t\t\n      JUMP \t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 38\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 39\t\t\t\n      PUSH [tag] 27\t\t\t\n      JUMP \t\t\t\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n    tag 38\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}
