{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"contracts/1_Storage.sol\":{\"content\":\"\\ncontract Storage {\\n\\n    address fluxProcessorAddr;\\n    uint256 a;\\n    uint256 b;\\n    uint256 sum;\\n    bool processorUsed;\\n\\n    constructor(address _fluxProcessorAddr, uint256 _a, uint256 _b) {\\n        fluxProcessorAddr = _fluxProcessorAddr;\\n        a = _a;\\n        b = _b;\\n    }\\n\\n    function computeSum() public {\\n        (bool success, bytes memory data) = fluxProcessorAddr.delegatecall(abi.encodeWithSignature(\\\"computeSum()\\\"));\\n        require(success, \\\"delegatecall failed\\\");\\n    }\\n\\n    function getA() public view returns (uint256) {\\n        return a;\\n    }\\n\\n    function getB() public view returns (uint256) {\\n        return a;\\n    }\\n\\n    function getSum() public view returns (uint256) {\\n        return sum;\\n    }\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "Storage",
	"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fluxProcessorAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"computeSum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0x2029d4cb6cb68567ddc062fb959fdcc20491d6e643ed5de4655714f55d41d375\",\"urls\":[\"bzz-raw://67cf3250e9f3dcbf133ad75556b9276adb0a8f9666d7e69559111d34d7fa1e5e\",\"dweb:/ipfs/QmZ3GqDwgmicqxKyJwczyVCnQxL4KKZsCP7uLroVk1wbyc\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_32": {
				"entryPoint": null,
				"id": 32,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"abi_decode_t_address_fromMemory": {
				"entryPoint": 208,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256_fromMemory": {
				"entryPoint": 259,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory": {
				"entryPoint": 279,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 169,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 138,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 228,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 134,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 186,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 237,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:1871:1",
					"nodeType": "YulBlock",
					"src": "0:1871:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "759:80:1",
								"nodeType": "YulBlock",
								"src": "759:80:1",
								"statements": [
									{
										"nativeSrc": "769:22:1",
										"nodeType": "YulAssignment",
										"src": "769:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "784:6:1",
													"nodeType": "YulIdentifier",
													"src": "784:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "778:5:1",
												"nodeType": "YulIdentifier",
												"src": "778:5:1"
											},
											"nativeSrc": "778:13:1",
											"nodeType": "YulFunctionCall",
											"src": "778:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "769:5:1",
												"nodeType": "YulIdentifier",
												"src": "769:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "827:5:1",
													"nodeType": "YulIdentifier",
													"src": "827:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "800:26:1",
												"nodeType": "YulIdentifier",
												"src": "800:26:1"
											},
											"nativeSrc": "800:33:1",
											"nodeType": "YulFunctionCall",
											"src": "800:33:1"
										},
										"nativeSrc": "800:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "800:33:1"
									}
								]
							},
							"name": "abi_decode_t_address_fromMemory",
							"nativeSrc": "696:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "737:6:1",
									"nodeType": "YulTypedName",
									"src": "737:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "745:3:1",
									"nodeType": "YulTypedName",
									"src": "745:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "753:5:1",
									"nodeType": "YulTypedName",
									"src": "753:5:1",
									"type": ""
								}
							],
							"src": "696:143:1"
						},
						{
							"body": {
								"nativeSrc": "890:32:1",
								"nodeType": "YulBlock",
								"src": "890:32:1",
								"statements": [
									{
										"nativeSrc": "900:16:1",
										"nodeType": "YulAssignment",
										"src": "900:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "911:5:1",
											"nodeType": "YulIdentifier",
											"src": "911:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "900:7:1",
												"nodeType": "YulIdentifier",
												"src": "900:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "845:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "872:5:1",
									"nodeType": "YulTypedName",
									"src": "872:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "882:7:1",
									"nodeType": "YulTypedName",
									"src": "882:7:1",
									"type": ""
								}
							],
							"src": "845:77:1"
						},
						{
							"body": {
								"nativeSrc": "971:79:1",
								"nodeType": "YulBlock",
								"src": "971:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1028:16:1",
											"nodeType": "YulBlock",
											"src": "1028:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1037:1:1",
																"nodeType": "YulLiteral",
																"src": "1037:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1040:1:1",
																"nodeType": "YulLiteral",
																"src": "1040:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1030:6:1",
															"nodeType": "YulIdentifier",
															"src": "1030:6:1"
														},
														"nativeSrc": "1030:12:1",
														"nodeType": "YulFunctionCall",
														"src": "1030:12:1"
													},
													"nativeSrc": "1030:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "1030:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "994:5:1",
															"nodeType": "YulIdentifier",
															"src": "994:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1019:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1019:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "1001:17:1",
																"nodeType": "YulIdentifier",
																"src": "1001:17:1"
															},
															"nativeSrc": "1001:24:1",
															"nodeType": "YulFunctionCall",
															"src": "1001:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "991:2:1",
														"nodeType": "YulIdentifier",
														"src": "991:2:1"
													},
													"nativeSrc": "991:35:1",
													"nodeType": "YulFunctionCall",
													"src": "991:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "984:6:1",
												"nodeType": "YulIdentifier",
												"src": "984:6:1"
											},
											"nativeSrc": "984:43:1",
											"nodeType": "YulFunctionCall",
											"src": "984:43:1"
										},
										"nativeSrc": "981:63:1",
										"nodeType": "YulIf",
										"src": "981:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "928:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "964:5:1",
									"nodeType": "YulTypedName",
									"src": "964:5:1",
									"type": ""
								}
							],
							"src": "928:122:1"
						},
						{
							"body": {
								"nativeSrc": "1119:80:1",
								"nodeType": "YulBlock",
								"src": "1119:80:1",
								"statements": [
									{
										"nativeSrc": "1129:22:1",
										"nodeType": "YulAssignment",
										"src": "1129:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "1144:6:1",
													"nodeType": "YulIdentifier",
													"src": "1144:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1138:5:1",
												"nodeType": "YulIdentifier",
												"src": "1138:5:1"
											},
											"nativeSrc": "1138:13:1",
											"nodeType": "YulFunctionCall",
											"src": "1138:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1129:5:1",
												"nodeType": "YulIdentifier",
												"src": "1129:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1187:5:1",
													"nodeType": "YulIdentifier",
													"src": "1187:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1160:26:1",
												"nodeType": "YulIdentifier",
												"src": "1160:26:1"
											},
											"nativeSrc": "1160:33:1",
											"nodeType": "YulFunctionCall",
											"src": "1160:33:1"
										},
										"nativeSrc": "1160:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "1160:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256_fromMemory",
							"nativeSrc": "1056:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1097:6:1",
									"nodeType": "YulTypedName",
									"src": "1097:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1105:3:1",
									"nodeType": "YulTypedName",
									"src": "1105:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1113:5:1",
									"nodeType": "YulTypedName",
									"src": "1113:5:1",
									"type": ""
								}
							],
							"src": "1056:143:1"
						},
						{
							"body": {
								"nativeSrc": "1316:552:1",
								"nodeType": "YulBlock",
								"src": "1316:552:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1362:83:1",
											"nodeType": "YulBlock",
											"src": "1362:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "1364:77:1",
															"nodeType": "YulIdentifier",
															"src": "1364:77:1"
														},
														"nativeSrc": "1364:79:1",
														"nodeType": "YulFunctionCall",
														"src": "1364:79:1"
													},
													"nativeSrc": "1364:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "1364:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1337:7:1",
															"nodeType": "YulIdentifier",
															"src": "1337:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1346:9:1",
															"nodeType": "YulIdentifier",
															"src": "1346:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1333:3:1",
														"nodeType": "YulIdentifier",
														"src": "1333:3:1"
													},
													"nativeSrc": "1333:23:1",
													"nodeType": "YulFunctionCall",
													"src": "1333:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1358:2:1",
													"nodeType": "YulLiteral",
													"src": "1358:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1329:3:1",
												"nodeType": "YulIdentifier",
												"src": "1329:3:1"
											},
											"nativeSrc": "1329:32:1",
											"nodeType": "YulFunctionCall",
											"src": "1329:32:1"
										},
										"nativeSrc": "1326:119:1",
										"nodeType": "YulIf",
										"src": "1326:119:1"
									},
									{
										"nativeSrc": "1455:128:1",
										"nodeType": "YulBlock",
										"src": "1455:128:1",
										"statements": [
											{
												"nativeSrc": "1470:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1470:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1484:1:1",
													"nodeType": "YulLiteral",
													"src": "1484:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1474:6:1",
														"nodeType": "YulTypedName",
														"src": "1474:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1499:74:1",
												"nodeType": "YulAssignment",
												"src": "1499:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1545:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1556:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1541:3:1",
																"nodeType": "YulIdentifier",
																"src": "1541:3:1"
															},
															"nativeSrc": "1541:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1541:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1565:7:1",
															"nodeType": "YulIdentifier",
															"src": "1565:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address_fromMemory",
														"nativeSrc": "1509:31:1",
														"nodeType": "YulIdentifier",
														"src": "1509:31:1"
													},
													"nativeSrc": "1509:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1509:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1499:6:1",
														"nodeType": "YulIdentifier",
														"src": "1499:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "1593:129:1",
										"nodeType": "YulBlock",
										"src": "1593:129:1",
										"statements": [
											{
												"nativeSrc": "1608:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1608:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1622:2:1",
													"nodeType": "YulLiteral",
													"src": "1622:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1612:6:1",
														"nodeType": "YulTypedName",
														"src": "1612:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1638:74:1",
												"nodeType": "YulAssignment",
												"src": "1638:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1684:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1684:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1695:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1680:3:1",
																"nodeType": "YulIdentifier",
																"src": "1680:3:1"
															},
															"nativeSrc": "1680:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1680:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1704:7:1",
															"nodeType": "YulIdentifier",
															"src": "1704:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "1648:31:1",
														"nodeType": "YulIdentifier",
														"src": "1648:31:1"
													},
													"nativeSrc": "1648:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1648:64:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "1638:6:1",
														"nodeType": "YulIdentifier",
														"src": "1638:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "1732:129:1",
										"nodeType": "YulBlock",
										"src": "1732:129:1",
										"statements": [
											{
												"nativeSrc": "1747:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1747:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1761:2:1",
													"nodeType": "YulLiteral",
													"src": "1761:2:1",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1751:6:1",
														"nodeType": "YulTypedName",
														"src": "1751:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1777:74:1",
												"nodeType": "YulAssignment",
												"src": "1777:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1823:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1823:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1834:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1819:3:1",
																"nodeType": "YulIdentifier",
																"src": "1819:3:1"
															},
															"nativeSrc": "1819:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1819:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1843:7:1",
															"nodeType": "YulIdentifier",
															"src": "1843:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "1787:31:1",
														"nodeType": "YulIdentifier",
														"src": "1787:31:1"
													},
													"nativeSrc": "1787:64:1",
													"nodeType": "YulFunctionCall",
													"src": "1787:64:1"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "1777:6:1",
														"nodeType": "YulIdentifier",
														"src": "1777:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory",
							"nativeSrc": "1205:663:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1270:9:1",
									"nodeType": "YulTypedName",
									"src": "1270:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1281:7:1",
									"nodeType": "YulTypedName",
									"src": "1281:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1293:6:1",
									"nodeType": "YulTypedName",
									"src": "1293:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "1301:6:1",
									"nodeType": "YulTypedName",
									"src": "1301:6:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "1309:6:1",
									"nodeType": "YulTypedName",
									"src": "1309:6:1",
									"type": ""
								}
							],
							"src": "1205:663:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506040516104d63803806104d683398181016040528101906100319190610117565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600281905550505050610167565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100b38261008a565b9050919050565b6100c3816100a9565b81146100cd575f80fd5b50565b5f815190506100de816100ba565b92915050565b5f819050919050565b6100f6816100e4565b8114610100575f80fd5b50565b5f81519050610111816100ed565b92915050565b5f805f6060848603121561012e5761012d610086565b5b5f61013b868287016100d0565b935050602061014c86828701610103565b925050604061015d86828701610103565b9150509250925092565b610362806101745f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b6040516100639190610233565b60405180910390f35b6100746100bb565b6040516100819190610233565b60405180910390f35b6100926100c4565b005b61009c610212565b6040516100a99190610233565b60405180910390f35b5f600354905090565b5f600154905090565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc2a970d1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161018c919061029e565b5f60405180830381855af49150503d805f81146101c4576040519150601f19603f3d011682016040523d82523d5f602084013e6101c9565b606091505b50915091508161020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061030e565b60405180910390fd5b5050565b5f600154905090565b5f819050919050565b61022d8161021b565b82525050565b5f6020820190506102465f830184610224565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102788261024c565b6102828185610256565b9350610292818560208601610260565b80840191505092915050565b5f6102a9828461026e565b915081905092915050565b5f82825260208201905092915050565b7f64656c656761746563616c6c206661696c6564000000000000000000000000005f82015250565b5f6102f86013836102b4565b9150610303826102c4565b602082019050919050565b5f6020820190508181035f830152610325816102ec565b905091905056fea2646970667358221220d6c8889b62dfb752170451cb5994eddc6f1a596d1a64f7f914e8f61510d3fcfe64736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4D6 CODESIZE SUB DUP1 PUSH2 0x4D6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x117 JUMP JUMPDEST DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x167 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB3 DUP3 PUSH2 0x8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDE DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0xE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x111 DUP2 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0x86 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B DUP7 DUP3 DUP8 ADD PUSH2 0xD0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14C DUP7 DUP3 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15D DUP7 DUP3 DUP8 ADD PUSH2 0x103 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x362 DUP1 PUSH2 0x174 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x569C5F6D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA1C51915 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC2A970D1 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xC2A970D100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x21B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH0 DUP4 ADD DUP5 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP3 PUSH2 0x24C JUMP JUMPDEST PUSH2 0x282 DUP2 DUP6 PUSH2 0x256 JUMP JUMPDEST SWAP4 POP PUSH2 0x292 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x260 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A9 DUP3 DUP5 PUSH2 0x26E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x64656C656761746563616C6C206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 PUSH1 0x13 DUP4 PUSH2 0x2B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x303 DUP3 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x325 DUP2 PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xC8 DUP9 SWAP12 PUSH3 0xDFB752 OR DIV MLOAD 0xCB MSIZE SWAP5 0xED 0xDC PUSH16 0x1A596D1A64F7F914E8F61510D3FCFE64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
		"sourceMap": "1:723:0:-:0;;;128:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;222:18;202:17;;:38;;;;;;;;;;;;;;;;;;254:2;250:1;:6;;;;270:2;266:1;:6;;;;128:151;;;1:723;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1:723:0:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_fluxProcessorAddr",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_a",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_b",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "computeSum",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getA",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getB",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getSum",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 2,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "fluxProcessorAddr",
				"offset": 0,
				"slot": "0",
				"type": "t_address"
			},
			{
				"astId": 4,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "a",
				"offset": 0,
				"slot": "1",
				"type": "t_uint256"
			},
			{
				"astId": 6,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "b",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 8,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "sum",
				"offset": 0,
				"slot": "3",
				"type": "t_uint256"
			},
			{
				"astId": 10,
				"contract": "contracts/1_Storage.sol:Storage",
				"label": "processorUsed",
				"offset": 0,
				"slot": "4",
				"type": "t_bool"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var _fluxProcessorAddr = /* var of type address here */ ;\nvar _a = /* var of type uint256 here */ ;\nvar _b = /* var of type uint256 here */ ;\nvar storageContract = new web3.eth.Contract([{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fluxProcessorAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"computeSum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar storage = storageContract.deploy({\n     data: '0x608060405234801561000f575f80fd5b506040516104d63803806104d683398181016040528101906100319190610117565b825f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160018190555080600281905550505050610167565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100b38261008a565b9050919050565b6100c3816100a9565b81146100cd575f80fd5b50565b5f815190506100de816100ba565b92915050565b5f819050919050565b6100f6816100e4565b8114610100575f80fd5b50565b5f81519050610111816100ed565b92915050565b5f805f6060848603121561012e5761012d610086565b5b5f61013b868287016100d0565b935050602061014c86828701610103565b925050604061015d86828701610103565b9150509250925092565b610362806101745f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b6040516100639190610233565b60405180910390f35b6100746100bb565b6040516100819190610233565b60405180910390f35b6100926100c4565b005b61009c610212565b6040516100a99190610233565b60405180910390f35b5f600354905090565b5f600154905090565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc2a970d1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161018c919061029e565b5f60405180830381855af49150503d805f81146101c4576040519150601f19603f3d011682016040523d82523d5f602084013e6101c9565b606091505b50915091508161020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061030e565b60405180910390fd5b5050565b5f600154905090565b5f819050919050565b61022d8161021b565b82525050565b5f6020820190506102465f830184610224565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102788261024c565b6102828185610256565b9350610292818560208601610260565b80840191505092915050565b5f6102a9828461026e565b915081905092915050565b5f82825260208201905092915050565b7f64656c656761746563616c6c206661696c6564000000000000000000000000005f82015250565b5f6102f86013836102b4565b9150610303826102c4565b602082019050919050565b5f6020820190508181035f830152610325816102ec565b905091905056fea2646970667358221220d6c8889b62dfb752170451cb5994eddc6f1a596d1a64f7f914e8f61510d3fcfe64736f6c634300081a0033', \n     arguments: [\n          _fluxProcessorAddr,\n          _a,\n          _b,\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"c2a970d1": "computeSum()",
		"d46300fd": "getA()",
		"a1c51915": "getB()",
		"569c5f6d": "getSum()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "173200",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"computeSum()": "infinite",
			"getA()": "2476",
			"getB()": "2432",
			"getSum()": "2410"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@computeSum_53": {
				"entryPoint": 196,
				"id": 53,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@getA_61": {
				"entryPoint": 530,
				"id": 61,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getB_69": {
				"entryPoint": 187,
				"id": 69,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getSum_77": {
				"entryPoint": 178,
				"id": 77,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
				"entryPoint": 622,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 748,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 548,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
				"entryPoint": 670,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 782,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 563,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_length_t_bytes_memory_ptr": {
				"entryPoint": 588,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
				"entryPoint": 598,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 692,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 539,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_memory_to_memory_with_cleanup": {
				"entryPoint": 608,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"store_literal_in_memory_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708": {
				"entryPoint": 708,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:2657:1",
					"nodeType": "YulBlock",
					"src": "0:2657:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "52:32:1",
								"nodeType": "YulBlock",
								"src": "52:32:1",
								"statements": [
									{
										"nativeSrc": "62:16:1",
										"nodeType": "YulAssignment",
										"src": "62:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "73:5:1",
											"nodeType": "YulIdentifier",
											"src": "73:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "62:7:1",
												"nodeType": "YulIdentifier",
												"src": "62:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "7:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "34:5:1",
									"nodeType": "YulTypedName",
									"src": "34:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "44:7:1",
									"nodeType": "YulTypedName",
									"src": "44:7:1",
									"type": ""
								}
							],
							"src": "7:77:1"
						},
						{
							"body": {
								"nativeSrc": "155:53:1",
								"nodeType": "YulBlock",
								"src": "155:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "172:3:1",
													"nodeType": "YulIdentifier",
													"src": "172:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "195:5:1",
															"nodeType": "YulIdentifier",
															"src": "195:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "177:17:1",
														"nodeType": "YulIdentifier",
														"src": "177:17:1"
													},
													"nativeSrc": "177:24:1",
													"nodeType": "YulFunctionCall",
													"src": "177:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "165:6:1",
												"nodeType": "YulIdentifier",
												"src": "165:6:1"
											},
											"nativeSrc": "165:37:1",
											"nodeType": "YulFunctionCall",
											"src": "165:37:1"
										},
										"nativeSrc": "165:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "165:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "90:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "143:5:1",
									"nodeType": "YulTypedName",
									"src": "143:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "150:3:1",
									"nodeType": "YulTypedName",
									"src": "150:3:1",
									"type": ""
								}
							],
							"src": "90:118:1"
						},
						{
							"body": {
								"nativeSrc": "312:124:1",
								"nodeType": "YulBlock",
								"src": "312:124:1",
								"statements": [
									{
										"nativeSrc": "322:26:1",
										"nodeType": "YulAssignment",
										"src": "322:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "334:9:1",
													"nodeType": "YulIdentifier",
													"src": "334:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "345:2:1",
													"nodeType": "YulLiteral",
													"src": "345:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "330:3:1",
												"nodeType": "YulIdentifier",
												"src": "330:3:1"
											},
											"nativeSrc": "330:18:1",
											"nodeType": "YulFunctionCall",
											"src": "330:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "322:4:1",
												"nodeType": "YulIdentifier",
												"src": "322:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "402:6:1",
													"nodeType": "YulIdentifier",
													"src": "402:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "415:9:1",
															"nodeType": "YulIdentifier",
															"src": "415:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "426:1:1",
															"nodeType": "YulLiteral",
															"src": "426:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "411:3:1",
														"nodeType": "YulIdentifier",
														"src": "411:3:1"
													},
													"nativeSrc": "411:17:1",
													"nodeType": "YulFunctionCall",
													"src": "411:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "358:43:1",
												"nodeType": "YulIdentifier",
												"src": "358:43:1"
											},
											"nativeSrc": "358:71:1",
											"nodeType": "YulFunctionCall",
											"src": "358:71:1"
										},
										"nativeSrc": "358:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "358:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "214:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "284:9:1",
									"nodeType": "YulTypedName",
									"src": "284:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "296:6:1",
									"nodeType": "YulTypedName",
									"src": "296:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "307:4:1",
									"nodeType": "YulTypedName",
									"src": "307:4:1",
									"type": ""
								}
							],
							"src": "214:222:1"
						},
						{
							"body": {
								"nativeSrc": "500:40:1",
								"nodeType": "YulBlock",
								"src": "500:40:1",
								"statements": [
									{
										"nativeSrc": "511:22:1",
										"nodeType": "YulAssignment",
										"src": "511:22:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "527:5:1",
													"nodeType": "YulIdentifier",
													"src": "527:5:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "521:5:1",
												"nodeType": "YulIdentifier",
												"src": "521:5:1"
											},
											"nativeSrc": "521:12:1",
											"nodeType": "YulFunctionCall",
											"src": "521:12:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "511:6:1",
												"nodeType": "YulIdentifier",
												"src": "511:6:1"
											}
										]
									}
								]
							},
							"name": "array_length_t_bytes_memory_ptr",
							"nativeSrc": "442:98:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "483:5:1",
									"nodeType": "YulTypedName",
									"src": "483:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "493:6:1",
									"nodeType": "YulTypedName",
									"src": "493:6:1",
									"type": ""
								}
							],
							"src": "442:98:1"
						},
						{
							"body": {
								"nativeSrc": "659:34:1",
								"nodeType": "YulBlock",
								"src": "659:34:1",
								"statements": [
									{
										"nativeSrc": "669:18:1",
										"nodeType": "YulAssignment",
										"src": "669:18:1",
										"value": {
											"name": "pos",
											"nativeSrc": "684:3:1",
											"nodeType": "YulIdentifier",
											"src": "684:3:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "669:11:1",
												"nodeType": "YulIdentifier",
												"src": "669:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
							"nativeSrc": "546:147:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "631:3:1",
									"nodeType": "YulTypedName",
									"src": "631:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "636:6:1",
									"nodeType": "YulTypedName",
									"src": "636:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "647:11:1",
									"nodeType": "YulTypedName",
									"src": "647:11:1",
									"type": ""
								}
							],
							"src": "546:147:1"
						},
						{
							"body": {
								"nativeSrc": "761:77:1",
								"nodeType": "YulBlock",
								"src": "761:77:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "dst",
													"nativeSrc": "778:3:1",
													"nodeType": "YulIdentifier",
													"src": "778:3:1"
												},
												{
													"name": "src",
													"nativeSrc": "783:3:1",
													"nodeType": "YulIdentifier",
													"src": "783:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "788:6:1",
													"nodeType": "YulIdentifier",
													"src": "788:6:1"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "772:5:1",
												"nodeType": "YulIdentifier",
												"src": "772:5:1"
											},
											"nativeSrc": "772:23:1",
											"nodeType": "YulFunctionCall",
											"src": "772:23:1"
										},
										"nativeSrc": "772:23:1",
										"nodeType": "YulExpressionStatement",
										"src": "772:23:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dst",
															"nativeSrc": "815:3:1",
															"nodeType": "YulIdentifier",
															"src": "815:3:1"
														},
														{
															"name": "length",
															"nativeSrc": "820:6:1",
															"nodeType": "YulIdentifier",
															"src": "820:6:1"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "811:3:1",
														"nodeType": "YulIdentifier",
														"src": "811:3:1"
													},
													"nativeSrc": "811:16:1",
													"nodeType": "YulFunctionCall",
													"src": "811:16:1"
												},
												{
													"kind": "number",
													"nativeSrc": "829:1:1",
													"nodeType": "YulLiteral",
													"src": "829:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "804:6:1",
												"nodeType": "YulIdentifier",
												"src": "804:6:1"
											},
											"nativeSrc": "804:27:1",
											"nodeType": "YulFunctionCall",
											"src": "804:27:1"
										},
										"nativeSrc": "804:27:1",
										"nodeType": "YulExpressionStatement",
										"src": "804:27:1"
									}
								]
							},
							"name": "copy_memory_to_memory_with_cleanup",
							"nativeSrc": "699:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "src",
									"nativeSrc": "743:3:1",
									"nodeType": "YulTypedName",
									"src": "743:3:1",
									"type": ""
								},
								{
									"name": "dst",
									"nativeSrc": "748:3:1",
									"nodeType": "YulTypedName",
									"src": "748:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "753:6:1",
									"nodeType": "YulTypedName",
									"src": "753:6:1",
									"type": ""
								}
							],
							"src": "699:139:1"
						},
						{
							"body": {
								"nativeSrc": "952:278:1",
								"nodeType": "YulBlock",
								"src": "952:278:1",
								"statements": [
									{
										"nativeSrc": "962:52:1",
										"nodeType": "YulVariableDeclaration",
										"src": "962:52:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1008:5:1",
													"nodeType": "YulIdentifier",
													"src": "1008:5:1"
												}
											],
											"functionName": {
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "976:31:1",
												"nodeType": "YulIdentifier",
												"src": "976:31:1"
											},
											"nativeSrc": "976:38:1",
											"nodeType": "YulFunctionCall",
											"src": "976:38:1"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "966:6:1",
												"nodeType": "YulTypedName",
												"src": "966:6:1",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1023:95:1",
										"nodeType": "YulAssignment",
										"src": "1023:95:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1106:3:1",
													"nodeType": "YulIdentifier",
													"src": "1106:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1111:6:1",
													"nodeType": "YulIdentifier",
													"src": "1111:6:1"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1030:75:1",
												"nodeType": "YulIdentifier",
												"src": "1030:75:1"
											},
											"nativeSrc": "1030:88:1",
											"nodeType": "YulFunctionCall",
											"src": "1030:88:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "1023:3:1",
												"nodeType": "YulIdentifier",
												"src": "1023:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1166:5:1",
															"nodeType": "YulIdentifier",
															"src": "1166:5:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1173:4:1",
															"nodeType": "YulLiteral",
															"src": "1173:4:1",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1162:3:1",
														"nodeType": "YulIdentifier",
														"src": "1162:3:1"
													},
													"nativeSrc": "1162:16:1",
													"nodeType": "YulFunctionCall",
													"src": "1162:16:1"
												},
												{
													"name": "pos",
													"nativeSrc": "1180:3:1",
													"nodeType": "YulIdentifier",
													"src": "1180:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1185:6:1",
													"nodeType": "YulIdentifier",
													"src": "1185:6:1"
												}
											],
											"functionName": {
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1127:34:1",
												"nodeType": "YulIdentifier",
												"src": "1127:34:1"
											},
											"nativeSrc": "1127:65:1",
											"nodeType": "YulFunctionCall",
											"src": "1127:65:1"
										},
										"nativeSrc": "1127:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "1127:65:1"
									},
									{
										"nativeSrc": "1201:23:1",
										"nodeType": "YulAssignment",
										"src": "1201:23:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1212:3:1",
													"nodeType": "YulIdentifier",
													"src": "1212:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1217:6:1",
													"nodeType": "YulIdentifier",
													"src": "1217:6:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1208:3:1",
												"nodeType": "YulIdentifier",
												"src": "1208:3:1"
											},
											"nativeSrc": "1208:16:1",
											"nodeType": "YulFunctionCall",
											"src": "1208:16:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "1201:3:1",
												"nodeType": "YulIdentifier",
												"src": "1201:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
							"nativeSrc": "844:386:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "933:5:1",
									"nodeType": "YulTypedName",
									"src": "933:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "940:3:1",
									"nodeType": "YulTypedName",
									"src": "940:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "948:3:1",
									"nodeType": "YulTypedName",
									"src": "948:3:1",
									"type": ""
								}
							],
							"src": "844:386:1"
						},
						{
							"body": {
								"nativeSrc": "1370:137:1",
								"nodeType": "YulBlock",
								"src": "1370:137:1",
								"statements": [
									{
										"nativeSrc": "1381:100:1",
										"nodeType": "YulAssignment",
										"src": "1381:100:1",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1468:6:1",
													"nodeType": "YulIdentifier",
													"src": "1468:6:1"
												},
												{
													"name": "pos",
													"nativeSrc": "1477:3:1",
													"nodeType": "YulIdentifier",
													"src": "1477:3:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1388:79:1",
												"nodeType": "YulIdentifier",
												"src": "1388:79:1"
											},
											"nativeSrc": "1388:93:1",
											"nodeType": "YulFunctionCall",
											"src": "1388:93:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "1381:3:1",
												"nodeType": "YulIdentifier",
												"src": "1381:3:1"
											}
										]
									},
									{
										"nativeSrc": "1491:10:1",
										"nodeType": "YulAssignment",
										"src": "1491:10:1",
										"value": {
											"name": "pos",
											"nativeSrc": "1498:3:1",
											"nodeType": "YulIdentifier",
											"src": "1498:3:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "1491:3:1",
												"nodeType": "YulIdentifier",
												"src": "1491:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
							"nativeSrc": "1236:271:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1349:3:1",
									"nodeType": "YulTypedName",
									"src": "1349:3:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1355:6:1",
									"nodeType": "YulTypedName",
									"src": "1355:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "1366:3:1",
									"nodeType": "YulTypedName",
									"src": "1366:3:1",
									"type": ""
								}
							],
							"src": "1236:271:1"
						},
						{
							"body": {
								"nativeSrc": "1609:73:1",
								"nodeType": "YulBlock",
								"src": "1609:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1626:3:1",
													"nodeType": "YulIdentifier",
													"src": "1626:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1631:6:1",
													"nodeType": "YulIdentifier",
													"src": "1631:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1619:6:1",
												"nodeType": "YulIdentifier",
												"src": "1619:6:1"
											},
											"nativeSrc": "1619:19:1",
											"nodeType": "YulFunctionCall",
											"src": "1619:19:1"
										},
										"nativeSrc": "1619:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "1619:19:1"
									},
									{
										"nativeSrc": "1647:29:1",
										"nodeType": "YulAssignment",
										"src": "1647:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1666:3:1",
													"nodeType": "YulIdentifier",
													"src": "1666:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1671:4:1",
													"nodeType": "YulLiteral",
													"src": "1671:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1662:3:1",
												"nodeType": "YulIdentifier",
												"src": "1662:3:1"
											},
											"nativeSrc": "1662:14:1",
											"nodeType": "YulFunctionCall",
											"src": "1662:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "1647:11:1",
												"nodeType": "YulIdentifier",
												"src": "1647:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "1513:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1581:3:1",
									"nodeType": "YulTypedName",
									"src": "1581:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "1586:6:1",
									"nodeType": "YulTypedName",
									"src": "1586:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "1597:11:1",
									"nodeType": "YulTypedName",
									"src": "1597:11:1",
									"type": ""
								}
							],
							"src": "1513:169:1"
						},
						{
							"body": {
								"nativeSrc": "1794:63:1",
								"nodeType": "YulBlock",
								"src": "1794:63:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "1816:6:1",
															"nodeType": "YulIdentifier",
															"src": "1816:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1824:1:1",
															"nodeType": "YulLiteral",
															"src": "1824:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1812:3:1",
														"nodeType": "YulIdentifier",
														"src": "1812:3:1"
													},
													"nativeSrc": "1812:14:1",
													"nodeType": "YulFunctionCall",
													"src": "1812:14:1"
												},
												{
													"hexValue": "64656c656761746563616c6c206661696c6564",
													"kind": "string",
													"nativeSrc": "1828:21:1",
													"nodeType": "YulLiteral",
													"src": "1828:21:1",
													"type": "",
													"value": "delegatecall failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1805:6:1",
												"nodeType": "YulIdentifier",
												"src": "1805:6:1"
											},
											"nativeSrc": "1805:45:1",
											"nodeType": "YulFunctionCall",
											"src": "1805:45:1"
										},
										"nativeSrc": "1805:45:1",
										"nodeType": "YulExpressionStatement",
										"src": "1805:45:1"
									}
								]
							},
							"name": "store_literal_in_memory_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708",
							"nativeSrc": "1688:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "1786:6:1",
									"nodeType": "YulTypedName",
									"src": "1786:6:1",
									"type": ""
								}
							],
							"src": "1688:169:1"
						},
						{
							"body": {
								"nativeSrc": "2009:220:1",
								"nodeType": "YulBlock",
								"src": "2009:220:1",
								"statements": [
									{
										"nativeSrc": "2019:74:1",
										"nodeType": "YulAssignment",
										"src": "2019:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2085:3:1",
													"nodeType": "YulIdentifier",
													"src": "2085:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2090:2:1",
													"nodeType": "YulLiteral",
													"src": "2090:2:1",
													"type": "",
													"value": "19"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2026:58:1",
												"nodeType": "YulIdentifier",
												"src": "2026:58:1"
											},
											"nativeSrc": "2026:67:1",
											"nodeType": "YulFunctionCall",
											"src": "2026:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "2019:3:1",
												"nodeType": "YulIdentifier",
												"src": "2019:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2191:3:1",
													"nodeType": "YulIdentifier",
													"src": "2191:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708",
												"nativeSrc": "2102:88:1",
												"nodeType": "YulIdentifier",
												"src": "2102:88:1"
											},
											"nativeSrc": "2102:93:1",
											"nodeType": "YulFunctionCall",
											"src": "2102:93:1"
										},
										"nativeSrc": "2102:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "2102:93:1"
									},
									{
										"nativeSrc": "2204:19:1",
										"nodeType": "YulAssignment",
										"src": "2204:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2215:3:1",
													"nodeType": "YulIdentifier",
													"src": "2215:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2220:2:1",
													"nodeType": "YulLiteral",
													"src": "2220:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2211:3:1",
												"nodeType": "YulIdentifier",
												"src": "2211:3:1"
											},
											"nativeSrc": "2211:12:1",
											"nodeType": "YulFunctionCall",
											"src": "2211:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "2204:3:1",
												"nodeType": "YulIdentifier",
												"src": "2204:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "1863:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1997:3:1",
									"nodeType": "YulTypedName",
									"src": "1997:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "2005:3:1",
									"nodeType": "YulTypedName",
									"src": "2005:3:1",
									"type": ""
								}
							],
							"src": "1863:366:1"
						},
						{
							"body": {
								"nativeSrc": "2406:248:1",
								"nodeType": "YulBlock",
								"src": "2406:248:1",
								"statements": [
									{
										"nativeSrc": "2416:26:1",
										"nodeType": "YulAssignment",
										"src": "2416:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2428:9:1",
													"nodeType": "YulIdentifier",
													"src": "2428:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2439:2:1",
													"nodeType": "YulLiteral",
													"src": "2439:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2424:3:1",
												"nodeType": "YulIdentifier",
												"src": "2424:3:1"
											},
											"nativeSrc": "2424:18:1",
											"nodeType": "YulFunctionCall",
											"src": "2424:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2416:4:1",
												"nodeType": "YulIdentifier",
												"src": "2416:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2463:9:1",
															"nodeType": "YulIdentifier",
															"src": "2463:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2474:1:1",
															"nodeType": "YulLiteral",
															"src": "2474:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2459:3:1",
														"nodeType": "YulIdentifier",
														"src": "2459:3:1"
													},
													"nativeSrc": "2459:17:1",
													"nodeType": "YulFunctionCall",
													"src": "2459:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "2482:4:1",
															"nodeType": "YulIdentifier",
															"src": "2482:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "2488:9:1",
															"nodeType": "YulIdentifier",
															"src": "2488:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2478:3:1",
														"nodeType": "YulIdentifier",
														"src": "2478:3:1"
													},
													"nativeSrc": "2478:20:1",
													"nodeType": "YulFunctionCall",
													"src": "2478:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2452:6:1",
												"nodeType": "YulIdentifier",
												"src": "2452:6:1"
											},
											"nativeSrc": "2452:47:1",
											"nodeType": "YulFunctionCall",
											"src": "2452:47:1"
										},
										"nativeSrc": "2452:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "2452:47:1"
									},
									{
										"nativeSrc": "2508:139:1",
										"nodeType": "YulAssignment",
										"src": "2508:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "2642:4:1",
													"nodeType": "YulIdentifier",
													"src": "2642:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2516:124:1",
												"nodeType": "YulIdentifier",
												"src": "2516:124:1"
											},
											"nativeSrc": "2516:131:1",
											"nodeType": "YulFunctionCall",
											"src": "2516:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2508:4:1",
												"nodeType": "YulIdentifier",
												"src": "2508:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "2235:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2386:9:1",
									"nodeType": "YulTypedName",
									"src": "2386:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2401:4:1",
									"nodeType": "YulTypedName",
									"src": "2401:4:1",
									"type": ""
								}
							],
							"src": "2235:419:1"
						}
					]
				},
				"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708(memPtr) {\n\n        mstore(add(memPtr, 0), \"delegatecall failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063569c5f6d1461004e578063a1c519151461006c578063c2a970d11461008a578063d46300fd14610094575b5f80fd5b6100566100b2565b6040516100639190610233565b60405180910390f35b6100746100bb565b6040516100819190610233565b60405180910390f35b6100926100c4565b005b61009c610212565b6040516100a99190610233565b60405180910390f35b5f600354905090565b5f600154905090565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc2a970d1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161018c919061029e565b5f60405180830381855af49150503d805f81146101c4576040519150601f19603f3d011682016040523d82523d5f602084013e6101c9565b606091505b50915091508161020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102059061030e565b60405180910390fd5b5050565b5f600154905090565b5f819050919050565b61022d8161021b565b82525050565b5f6020820190506102465f830184610224565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102788261024c565b6102828185610256565b9350610292818560208601610260565b80840191505092915050565b5f6102a9828461026e565b915081905092915050565b5f82825260208201905092915050565b7f64656c656761746563616c6c206661696c6564000000000000000000000000005f82015250565b5f6102f86013836102b4565b9150610303826102c4565b602082019050919050565b5f6020820190508181035f830152610325816102ec565b905091905056fea2646970667358221220d6c8889b62dfb752170451cb5994eddc6f1a596d1a64f7f914e8f61510d3fcfe64736f6c634300081a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x569C5F6D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA1C51915 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xC2A970D1 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xC2A970D100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x21B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH0 DUP4 ADD DUP5 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x278 DUP3 PUSH2 0x24C JUMP JUMPDEST PUSH2 0x282 DUP2 DUP6 PUSH2 0x256 JUMP JUMPDEST SWAP4 POP PUSH2 0x292 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x260 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A9 DUP3 DUP5 PUSH2 0x26E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x64656C656761746563616C6C206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8 PUSH1 0x13 DUP4 PUSH2 0x2B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x303 DUP3 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x325 DUP2 PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xC8 DUP9 SWAP12 PUSH3 0xDFB752 OR DIV MLOAD 0xCB MSIZE SWAP5 0xED 0xDC PUSH16 0x1A596D1A64F7F914E8F61510D3FCFE64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
		"sourceMap": "1:723:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;570:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:202;;;:::i;:::-;;493:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:75;686:7;712:3;;705:10;;647:75;:::o;570:71::-;607:7;633:1;;626:8;;570:71;:::o;285:202::-;325:12;339:17;360;;;;;;;;;;:30;;391:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:107;;;;449:7;441:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;314:173;;285:202::o;493:71::-;530:7;556:1;;549:8;;493:71;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:98::-;493:6;527:5;521:12;511:22;;442:98;;;:::o;546:147::-;647:11;684:3;669:18;;546:147;;;;:::o;699:139::-;788:6;783:3;778;772:23;829:1;820:6;815:3;811:16;804:27;699:139;;;:::o;844:386::-;948:3;976:38;1008:5;976:38;:::i;:::-;1030:88;1111:6;1106:3;1030:88;:::i;:::-;1023:95;;1127:65;1185:6;1180:3;1173:4;1166:5;1162:16;1127:65;:::i;:::-;1217:6;1212:3;1208:16;1201:23;;952:278;844:386;;;;:::o;1236:271::-;1366:3;1388:93;1477:3;1468:6;1388:93;:::i;:::-;1381:100;;1498:3;1491:10;;1236:271;;;;:::o;1513:169::-;1597:11;1631:6;1626:3;1619:19;1671:4;1666:3;1662:14;1647:29;;1513:169;;;;:::o;1688:::-;1828:21;1824:1;1816:6;1812:14;1805:45;1688:169;:::o;1863:366::-;2005:3;2026:67;2090:2;2085:3;2026:67;:::i;:::-;2019:74;;2102:93;2191:3;2102:93;:::i;:::-;2220:2;2215:3;2211:12;2204:19;;1863:366;;;:::o;2235:419::-;2401:4;2439:2;2428:9;2424:18;2416:26;;2488:9;2482:4;2478:20;2474:1;2463:9;2459:17;2452:47;2516:131;2642:4;2516:131;:::i;:::-;2508:139;;2235:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract Storage {\\n\\n    addr...\n  PUSH 40\t\t\tcontract Storage {\\n\\n    addr...\n  MSTORE \t\t\tcontract Storage {\\n\\n    addr...\n  CALLVALUE \t\t\tconstructor(address _fluxProce...\n  DUP1 \t\t\tconstructor(address _fluxProce...\n  ISZERO \t\t\tconstructor(address _fluxProce...\n  PUSH [tag] 1\t\t\tconstructor(address _fluxProce...\n  JUMPI \t\t\tconstructor(address _fluxProce...\n  PUSH 0\t\t\tconstructor(address _fluxProce...\n  DUP1 \t\t\tconstructor(address _fluxProce...\n  REVERT \t\t\tconstructor(address _fluxProce...\ntag 1\t\t\tconstructor(address _fluxProce...\n  JUMPDEST \t\t\tconstructor(address _fluxProce...\n  POP \t\t\tconstructor(address _fluxProce...\n  PUSH 40\t\t\tconstructor(address _fluxProce...\n  MLOAD \t\t\tconstructor(address _fluxProce...\n  PUSHSIZE \t\t\tconstructor(address _fluxProce...\n  CODESIZE \t\t\tconstructor(address _fluxProce...\n  SUB \t\t\tconstructor(address _fluxProce...\n  DUP1 \t\t\tconstructor(address _fluxProce...\n  PUSHSIZE \t\t\tconstructor(address _fluxProce...\n  DUP4 \t\t\tconstructor(address _fluxProce...\n  CODECOPY \t\t\tconstructor(address _fluxProce...\n  DUP2 \t\t\tconstructor(address _fluxProce...\n  DUP2 \t\t\tconstructor(address _fluxProce...\n  ADD \t\t\tconstructor(address _fluxProce...\n  PUSH 40\t\t\tconstructor(address _fluxProce...\n  MSTORE \t\t\tconstructor(address _fluxProce...\n  DUP2 \t\t\tconstructor(address _fluxProce...\n  ADD \t\t\tconstructor(address _fluxProce...\n  SWAP1 \t\t\tconstructor(address _fluxProce...\n  PUSH [tag] 2\t\t\tconstructor(address _fluxProce...\n  SWAP2 \t\t\tconstructor(address _fluxProce...\n  SWAP1 \t\t\tconstructor(address _fluxProce...\n  PUSH [tag] 3\t\t\tconstructor(address _fluxProce...\n  JUMP \t\t\tconstructor(address _fluxProce...\ntag 2\t\t\tconstructor(address _fluxProce...\n  JUMPDEST \t\t\tconstructor(address _fluxProce...\n  DUP3 \t\t\t_fluxProcessorAddr\n  PUSH 0\t\t\tfluxProcessorAddr\n  DUP1 \t\t\tfluxProcessorAddr\n  PUSH 100\t\t\tfluxProcessorAddr = _fluxProce...\n  EXP \t\t\tfluxProcessorAddr = _fluxProce...\n  DUP2 \t\t\tfluxProcessorAddr = _fluxProce...\n  SLOAD \t\t\tfluxProcessorAddr = _fluxProce...\n  DUP2 \t\t\tfluxProcessorAddr = _fluxProce...\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tfluxProcessorAddr = _fluxProce...\n  MUL \t\t\tfluxProcessorAddr = _fluxProce...\n  NOT \t\t\tfluxProcessorAddr = _fluxProce...\n  AND \t\t\tfluxProcessorAddr = _fluxProce...\n  SWAP1 \t\t\tfluxProcessorAddr = _fluxProce...\n  DUP4 \t\t\tfluxProcessorAddr = _fluxProce...\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tfluxProcessorAddr = _fluxProce...\n  AND \t\t\tfluxProcessorAddr = _fluxProce...\n  MUL \t\t\tfluxProcessorAddr = _fluxProce...\n  OR \t\t\tfluxProcessorAddr = _fluxProce...\n  SWAP1 \t\t\tfluxProcessorAddr = _fluxProce...\n  SSTORE \t\t\tfluxProcessorAddr = _fluxProce...\n  POP \t\t\tfluxProcessorAddr = _fluxProce...\n  DUP2 \t\t\t_a\n  PUSH 1\t\t\ta\n  DUP2 \t\t\ta = _a\n  SWAP1 \t\t\ta = _a\n  SSTORE \t\t\ta = _a\n  POP \t\t\ta = _a\n  DUP1 \t\t\t_b\n  PUSH 2\t\t\tb\n  DUP2 \t\t\tb = _b\n  SWAP1 \t\t\tb = _b\n  SSTORE \t\t\tb = _b\n  POP \t\t\tb = _b\n  POP \t\t\tconstructor(address _fluxProce...\n  POP \t\t\tconstructor(address _fluxProce...\n  POP \t\t\tconstructor(address _fluxProce...\n  PUSH [tag] 6\t\t\tcontract Storage {\\n\\n    addr...\n  JUMP \t\t\tcontract Storage {\\n\\n    addr...\ntag 8\t\t\tnt256 sum;\\n    bool processor...\n  JUMPDEST \t\t\tnt256 sum;\\n    bool processor...\n  PUSH 0\t\t\t \n  DUP1 \t\t\t \n  REVERT \t\t\t _b) {\\n     \ntag 10\t\t\tess, bytes memory data) = flux...\n  JUMPDEST \t\t\tess, bytes memory data) = flux...\n  PUSH 0\t\t\torAddr.\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ture(\"computeSum()\"));\\n       ...\n  DUP3 \t\t\thSign\n  AND \t\t\teWithSignature(\"computeSum()\")...\n  SWAP1 \t\t\tl(abi.encodeWithSignature(\"com...\n  POP \t\t\tl(abi.encodeWithSignature(\"com...\n  SWAP2 \t\t\tess, bytes memory data) = flux...\n  SWAP1 \t\t\tess, bytes memory data) = flux...\n  POP \t\t\tess, bytes memory data) = flux...\n  JUMP \t\t\tess, bytes memory data) = flux...\ntag 11\t\t\tecall failed\");\\n    }\\n\\n    ...\n  JUMPDEST \t\t\tecall failed\");\\n    }\\n\\n    ...\n  PUSH 0\t\t\tetA() p\n  PUSH [tag] 23\t\t\tnt256) {\\n        return \n  DUP3 \t\t\teturn\n  PUSH [tag] 10\t\t\tnt256) {\\n        return \n  JUMP \t\t\tnt256) {\\n        return \ntag 23\t\t\tnt256) {\\n        return \n  JUMPDEST \t\t\tnt256) {\\n        return \n  SWAP1 \t\t\treturns (uint256) {\\n        r...\n  POP \t\t\treturns (uint256) {\\n        r...\n  SWAP2 \t\t\tecall failed\");\\n    }\\n\\n    ...\n  SWAP1 \t\t\tecall failed\");\\n    }\\n\\n    ...\n  POP \t\t\tecall failed\");\\n    }\\n\\n    ...\n  JUMP \t\t\tecall failed\");\\n    }\\n\\n    ...\ntag 12\t\t\t  function getB() public view ...\n  JUMPDEST \t\t\t  function getB() public view ...\n  PUSH [tag] 25\t\t\t\\n\\n    function getSum() \n  DUP2 \t\t\tSum()\n  PUSH [tag] 11\t\t\t\\n\\n    function getSum() \n  JUMP \t\t\t\\n\\n    function getSum() \ntag 25\t\t\t\\n\\n    function getSum() \n  JUMPDEST \t\t\t\\n\\n    function getSum() \n  DUP2 \t\t\t;\\n   \n  EQ \t\t\tn a;\\n    }\\n\\n    function ge...\n  PUSH [tag] 26\t\t\t     return a;\\n    }\\n\\n    f...\n  JUMPI \t\t\t     return a;\\n    }\\n\\n    f...\n  PUSH 0\t\t\tu\n  DUP1 \t\t\tr\n  REVERT \t\t\tc view retur\ntag 26\t\t\t     return a;\\n    }\\n\\n    f...\n  JUMPDEST \t\t\t     return a;\\n    }\\n\\n    f...\n  POP \t\t\t  function getB() public view ...\n  JUMP \t\t\t  function getB() public view ...\ntag 13\t\t\t\\n        return sum;\\n    }\\n...\n  JUMPDEST \t\t\t\\n        return sum;\\n    }\\n...\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 28\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 28\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\\n        return sum;\\n    }\\n...\n  SWAP2 \t\t\t\\n        return sum;\\n    }\\n...\n  POP \t\t\t\\n        return sum;\\n    }\\n...\n  POP \t\t\t\\n        return sum;\\n    }\\n...\n  JUMP \t\t\t\\n        return sum;\\n    }\\n...\ntag 14\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 15\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 31\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 14\t\t\t\n  JUMP \t\t\t\ntag 31\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 32\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 32\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 16\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 34\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 15\t\t\t\n  JUMP \t\t\t\ntag 34\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 3\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  PUSH 0\t\t\t\n  PUSH 60\t\t\t\n  DUP5 \t\t\t\n  DUP7 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 36\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 37\t\t\t\n  PUSH [tag] 8\t\t\t\n  JUMP \t\t\t\ntag 37\t\t\t\n  JUMPDEST \t\t\t\ntag 36\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 38\t\t\t\n  DUP7 \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 13\t\t\t\n  JUMP \t\t\t\ntag 38\t\t\t\n  JUMPDEST \t\t\t\n  SWAP4 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  PUSH [tag] 39\t\t\t\n  DUP7 \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 16\t\t\t\n  JUMP \t\t\t\ntag 39\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  PUSH [tag] 40\t\t\t\n  DUP7 \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 16\t\t\t\n  JUMP \t\t\t\ntag 40\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  JUMP \t\t\t\ntag 6\t\t\tcontract Storage {\\n\\n    addr...\n  JUMPDEST \t\t\tcontract Storage {\\n\\n    addr...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Storage {\\n\\n    addr...\n  DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Storage {\\n\\n    addr...\n  PUSH 0\t\t\tcontract Storage {\\n\\n    addr...\n  CODECOPY \t\t\tcontract Storage {\\n\\n    addr...\n  PUSH 0\t\t\tcontract Storage {\\n\\n    addr...\n  RETURN \t\t\tcontract Storage {\\n\\n    addr...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 40\t\t\tcontract Storage {\\n\\n    addr...\n      MSTORE \t\t\tcontract Storage {\\n\\n    addr...\n      CALLVALUE \t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      ISZERO \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 1\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      REVERT \t\t\tcontract Storage {\\n\\n    addr...\n    tag 1\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPDEST \t\t\tcontract Storage {\\n\\n    addr...\n      POP \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 4\t\t\tcontract Storage {\\n\\n    addr...\n      CALLDATASIZE \t\t\tcontract Storage {\\n\\n    addr...\n      LT \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 2\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    addr...\n      CALLDATALOAD \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH E0\t\t\tcontract Storage {\\n\\n    addr...\n      SHR \t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 569C5F6D\t\t\tcontract Storage {\\n\\n    addr...\n      EQ \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 3\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH A1C51915\t\t\tcontract Storage {\\n\\n    addr...\n      EQ \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 4\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH C2A970D1\t\t\tcontract Storage {\\n\\n    addr...\n      EQ \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 5\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH D46300FD\t\t\tcontract Storage {\\n\\n    addr...\n      EQ \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH [tag] 6\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPI \t\t\tcontract Storage {\\n\\n    addr...\n    tag 2\t\t\tcontract Storage {\\n\\n    addr...\n      JUMPDEST \t\t\tcontract Storage {\\n\\n    addr...\n      PUSH 0\t\t\tcontract Storage {\\n\\n    addr...\n      DUP1 \t\t\tcontract Storage {\\n\\n    addr...\n      REVERT \t\t\tcontract Storage {\\n\\n    addr...\n    tag 3\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH [tag] 7\t\t\tfunction getSum() public view ...\n      PUSH [tag] 8\t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 7\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 40\t\t\tfunction getSum() public view ...\n      MLOAD \t\t\tfunction getSum() public view ...\n      PUSH [tag] 9\t\t\tfunction getSum() public view ...\n      SWAP2 \t\t\tfunction getSum() public view ...\n      SWAP1 \t\t\tfunction getSum() public view ...\n      PUSH [tag] 10\t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 9\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 40\t\t\tfunction getSum() public view ...\n      MLOAD \t\t\tfunction getSum() public view ...\n      DUP1 \t\t\tfunction getSum() public view ...\n      SWAP2 \t\t\tfunction getSum() public view ...\n      SUB \t\t\tfunction getSum() public view ...\n      SWAP1 \t\t\tfunction getSum() public view ...\n      RETURN \t\t\tfunction getSum() public view ...\n    tag 4\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH [tag] 11\t\t\tfunction getB() public view re...\n      PUSH [tag] 12\t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 11\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 40\t\t\tfunction getB() public view re...\n      MLOAD \t\t\tfunction getB() public view re...\n      PUSH [tag] 13\t\t\tfunction getB() public view re...\n      SWAP2 \t\t\tfunction getB() public view re...\n      SWAP1 \t\t\tfunction getB() public view re...\n      PUSH [tag] 10\t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 13\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 40\t\t\tfunction getB() public view re...\n      MLOAD \t\t\tfunction getB() public view re...\n      DUP1 \t\t\tfunction getB() public view re...\n      SWAP2 \t\t\tfunction getB() public view re...\n      SUB \t\t\tfunction getB() public view re...\n      SWAP1 \t\t\tfunction getB() public view re...\n      RETURN \t\t\tfunction getB() public view re...\n    tag 5\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      PUSH [tag] 14\t\t\tfunction computeSum() public {...\n      PUSH [tag] 15\t\t\tfunction computeSum() public {...\n      JUMP \t\t\tfunction computeSum() public {...\n    tag 14\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      STOP \t\t\tfunction computeSum() public {...\n    tag 6\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH [tag] 16\t\t\tfunction getA() public view re...\n      PUSH [tag] 17\t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 16\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 40\t\t\tfunction getA() public view re...\n      MLOAD \t\t\tfunction getA() public view re...\n      PUSH [tag] 18\t\t\tfunction getA() public view re...\n      SWAP2 \t\t\tfunction getA() public view re...\n      SWAP1 \t\t\tfunction getA() public view re...\n      PUSH [tag] 10\t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 18\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 40\t\t\tfunction getA() public view re...\n      MLOAD \t\t\tfunction getA() public view re...\n      DUP1 \t\t\tfunction getA() public view re...\n      SWAP2 \t\t\tfunction getA() public view re...\n      SUB \t\t\tfunction getA() public view re...\n      SWAP1 \t\t\tfunction getA() public view re...\n      RETURN \t\t\tfunction getA() public view re...\n    tag 8\t\t\tfunction getSum() public view ...\n      JUMPDEST \t\t\tfunction getSum() public view ...\n      PUSH 0\t\t\tuint256\n      PUSH 3\t\t\tsum\n      SLOAD \t\t\tsum\n      SWAP1 \t\t\treturn sum\n      POP \t\t\treturn sum\n      SWAP1 \t\t\tfunction getSum() public view ...\n      JUMP \t\t\tfunction getSum() public view ...\n    tag 12\t\t\tfunction getB() public view re...\n      JUMPDEST \t\t\tfunction getB() public view re...\n      PUSH 0\t\t\tuint256\n      PUSH 1\t\t\ta\n      SLOAD \t\t\ta\n      SWAP1 \t\t\treturn a\n      POP \t\t\treturn a\n      SWAP1 \t\t\tfunction getB() public view re...\n      JUMP \t\t\tfunction getB() public view re...\n    tag 15\t\t\tfunction computeSum() public {...\n      JUMPDEST \t\t\tfunction computeSum() public {...\n      PUSH 0\t\t\tbool success\n      DUP1 \t\t\tbytes memory data\n      PUSH 0\t\t\tfluxProcessorAddr\n      DUP1 \t\t\tfluxProcessorAddr\n      SLOAD \t\t\tfluxProcessorAddr\n      SWAP1 \t\t\tfluxProcessorAddr\n      PUSH 100\t\t\tfluxProcessorAddr\n      EXP \t\t\tfluxProcessorAddr\n      SWAP1 \t\t\tfluxProcessorAddr\n      DIV \t\t\tfluxProcessorAddr\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tfluxProcessorAddr\n      AND \t\t\tfluxProcessorAddr\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tfluxProcessorAddr.delegatecall\n      AND \t\t\tfluxProcessorAddr.delegatecall\n      PUSH 40\t\t\tabi.encodeWithSignature(\"compu...\n      MLOAD \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 24\t\t\tabi.encodeWithSignature(\"compu...\n      ADD \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 40\t\t\tabi.encodeWithSignature(\"compu...\n      MLOAD \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 20\t\t\tabi.encodeWithSignature(\"compu...\n      DUP2 \t\t\tabi.encodeWithSignature(\"compu...\n      DUP4 \t\t\tabi.encodeWithSignature(\"compu...\n      SUB \t\t\tabi.encodeWithSignature(\"compu...\n      SUB \t\t\tabi.encodeWithSignature(\"compu...\n      DUP2 \t\t\tabi.encodeWithSignature(\"compu...\n      MSTORE \t\t\tabi.encodeWithSignature(\"compu...\n      SWAP1 \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 40\t\t\tabi.encodeWithSignature(\"compu...\n      MSTORE \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH C2A970D100000000000000000000000000000000000000000000000000000000\t\t\tabi.encodeWithSignature(\"compu...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tabi.encodeWithSignature(\"compu...\n      NOT \t\t\tabi.encodeWithSignature(\"compu...\n      AND \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 20\t\t\tabi.encodeWithSignature(\"compu...\n      DUP3 \t\t\tabi.encodeWithSignature(\"compu...\n      ADD \t\t\tabi.encodeWithSignature(\"compu...\n      DUP1 \t\t\tabi.encodeWithSignature(\"compu...\n      MLOAD \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tabi.encodeWithSignature(\"compu...\n      DUP4 \t\t\tabi.encodeWithSignature(\"compu...\n      DUP2 \t\t\tabi.encodeWithSignature(\"compu...\n      DUP4 \t\t\tabi.encodeWithSignature(\"compu...\n      AND \t\t\tabi.encodeWithSignature(\"compu...\n      OR \t\t\tabi.encodeWithSignature(\"compu...\n      DUP4 \t\t\tabi.encodeWithSignature(\"compu...\n      MSTORE \t\t\tabi.encodeWithSignature(\"compu...\n      POP \t\t\tabi.encodeWithSignature(\"compu...\n      POP \t\t\tabi.encodeWithSignature(\"compu...\n      POP \t\t\tabi.encodeWithSignature(\"compu...\n      POP \t\t\tabi.encodeWithSignature(\"compu...\n      PUSH 40\t\t\tfluxProcessorAddr.delegatecall...\n      MLOAD \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH [tag] 22\t\t\tfluxProcessorAddr.delegatecall...\n      SWAP2 \t\t\tfluxProcessorAddr.delegatecall...\n      SWAP1 \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH [tag] 23\t\t\tfluxProcessorAddr.delegatecall...\n      JUMP \t\t\tfluxProcessorAddr.delegatecall...\n    tag 22\t\t\tfluxProcessorAddr.delegatecall...\n      JUMPDEST \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 0\t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 40\t\t\tfluxProcessorAddr.delegatecall...\n      MLOAD \t\t\tfluxProcessorAddr.delegatecall...\n      DUP1 \t\t\tfluxProcessorAddr.delegatecall...\n      DUP4 \t\t\tfluxProcessorAddr.delegatecall...\n      SUB \t\t\tfluxProcessorAddr.delegatecall...\n      DUP2 \t\t\tfluxProcessorAddr.delegatecall...\n      DUP6 \t\t\tfluxProcessorAddr.delegatecall...\n      GAS \t\t\tfluxProcessorAddr.delegatecall...\n      DELEGATECALL \t\t\tfluxProcessorAddr.delegatecall...\n      SWAP2 \t\t\tfluxProcessorAddr.delegatecall...\n      POP \t\t\tfluxProcessorAddr.delegatecall...\n      POP \t\t\tfluxProcessorAddr.delegatecall...\n      RETURNDATASIZE \t\t\tfluxProcessorAddr.delegatecall...\n      DUP1 \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 0\t\t\tfluxProcessorAddr.delegatecall...\n      DUP2 \t\t\tfluxProcessorAddr.delegatecall...\n      EQ \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH [tag] 26\t\t\tfluxProcessorAddr.delegatecall...\n      JUMPI \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 40\t\t\tfluxProcessorAddr.delegatecall...\n      MLOAD \t\t\tfluxProcessorAddr.delegatecall...\n      SWAP2 \t\t\tfluxProcessorAddr.delegatecall...\n      POP \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 1F\t\t\tfluxProcessorAddr.delegatecall...\n      NOT \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 3F\t\t\tfluxProcessorAddr.delegatecall...\n      RETURNDATASIZE \t\t\tfluxProcessorAddr.delegatecall...\n      ADD \t\t\tfluxProcessorAddr.delegatecall...\n      AND \t\t\tfluxProcessorAddr.delegatecall...\n      DUP3 \t\t\tfluxProcessorAddr.delegatecall...\n      ADD \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 40\t\t\tfluxProcessorAddr.delegatecall...\n      MSTORE \t\t\tfluxProcessorAddr.delegatecall...\n      RETURNDATASIZE \t\t\tfluxProcessorAddr.delegatecall...\n      DUP3 \t\t\tfluxProcessorAddr.delegatecall...\n      MSTORE \t\t\tfluxProcessorAddr.delegatecall...\n      RETURNDATASIZE \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 0\t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 20\t\t\tfluxProcessorAddr.delegatecall...\n      DUP5 \t\t\tfluxProcessorAddr.delegatecall...\n      ADD \t\t\tfluxProcessorAddr.delegatecall...\n      RETURNDATACOPY \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH [tag] 25\t\t\tfluxProcessorAddr.delegatecall...\n      JUMP \t\t\tfluxProcessorAddr.delegatecall...\n    tag 26\t\t\tfluxProcessorAddr.delegatecall...\n      JUMPDEST \t\t\tfluxProcessorAddr.delegatecall...\n      PUSH 60\t\t\tfluxProcessorAddr.delegatecall...\n      SWAP2 \t\t\tfluxProcessorAddr.delegatecall...\n      POP \t\t\tfluxProcessorAddr.delegatecall...\n    tag 25\t\t\tfluxProcessorAddr.delegatecall...\n      JUMPDEST \t\t\tfluxProcessorAddr.delegatecall...\n      POP \t\t\tfluxProcessorAddr.delegatecall...\n      SWAP2 \t\t\t(bool success, bytes memory da...\n      POP \t\t\t(bool success, bytes memory da...\n      SWAP2 \t\t\t(bool success, bytes memory da...\n      POP \t\t\t(bool success, bytes memory da...\n      DUP2 \t\t\tsuccess\n      PUSH [tag] 27\t\t\trequire(success, \"delegatecall...\n      JUMPI \t\t\trequire(success, \"delegatecall...\n      PUSH 40\t\t\trequire(success, \"delegatecall...\n      MLOAD \t\t\trequire(success, \"delegatecall...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(success, \"delegatecall...\n      DUP2 \t\t\trequire(success, \"delegatecall...\n      MSTORE \t\t\trequire(success, \"delegatecall...\n      PUSH 4\t\t\trequire(success, \"delegatecall...\n      ADD \t\t\trequire(success, \"delegatecall...\n      PUSH [tag] 28\t\t\trequire(success, \"delegatecall...\n      SWAP1 \t\t\trequire(success, \"delegatecall...\n      PUSH [tag] 29\t\t\trequire(success, \"delegatecall...\n      JUMP \t\t\trequire(success, \"delegatecall...\n    tag 28\t\t\trequire(success, \"delegatecall...\n      JUMPDEST \t\t\trequire(success, \"delegatecall...\n      PUSH 40\t\t\trequire(success, \"delegatecall...\n      MLOAD \t\t\trequire(success, \"delegatecall...\n      DUP1 \t\t\trequire(success, \"delegatecall...\n      SWAP2 \t\t\trequire(success, \"delegatecall...\n      SUB \t\t\trequire(success, \"delegatecall...\n      SWAP1 \t\t\trequire(success, \"delegatecall...\n      REVERT \t\t\trequire(success, \"delegatecall...\n    tag 27\t\t\trequire(success, \"delegatecall...\n      JUMPDEST \t\t\trequire(success, \"delegatecall...\n      POP \t\t\t{\\n        (bool success, byte...\n      POP \t\t\t{\\n        (bool success, byte...\n      JUMP \t\t\tfunction computeSum() public {...\n    tag 17\t\t\tfunction getA() public view re...\n      JUMPDEST \t\t\tfunction getA() public view re...\n      PUSH 0\t\t\tuint256\n      PUSH 1\t\t\ta\n      SLOAD \t\t\ta\n      SWAP1 \t\t\treturn a\n      POP \t\t\treturn a\n      SWAP1 \t\t\tfunction getA() public view re...\n      JUMP \t\t\tfunction getA() public view re...\n    tag 31\t\t\tct Storage {\\n\\n    address fl...\n      JUMPDEST \t\t\tct Storage {\\n\\n    address fl...\n      PUSH 0\t\t\torAddr;\n      DUP2 \t\t\tnt256\n      SWAP1 \t\t\t6 a;\\n    uint256\n      POP \t\t\t6 a;\\n    uint256\n      SWAP2 \t\t\tct Storage {\\n\\n    address fl...\n      SWAP1 \t\t\tct Storage {\\n\\n    address fl...\n      POP \t\t\tct Storage {\\n\\n    address fl...\n      JUMP \t\t\tct Storage {\\n\\n    address fl...\n    tag 32\t\t\t256 sum;\\n    bool processorUs...\n      JUMPDEST \t\t\t256 sum;\\n    bool processorUs...\n      PUSH [tag] 43\t\t\ta, uint256 _b) {\\n       \n      DUP2 \t\t\t     \n      PUSH [tag] 31\t\t\ta, uint256 _b) {\\n       \n      JUMP \t\t\ta, uint256 _b) {\\n       \n    tag 43\t\t\ta, uint256 _b) {\\n       \n      JUMPDEST \t\t\ta, uint256 _b) {\\n       \n      DUP3 \t\t\t256\n      MSTORE \t\t\tr, uint256 _a, uint256 _b) {\\n...\n      POP \t\t\t256 sum;\\n    bool processorUs...\n      POP \t\t\t256 sum;\\n    bool processorUs...\n      JUMP \t\t\t256 sum;\\n    bool processorUs...\n    tag 10\t\t\trAddr = _fluxProcessorAddr;\\n ...\n      JUMPDEST \t\t\trAddr = _fluxProcessorAddr;\\n ...\n      PUSH 0\t\t\tpubl\n      PUSH 20\t\t\tme\n      DUP3 \t\t\tess, byte\n      ADD \t\t\tsuccess, bytes mem\n      SWAP1 \t\t\t  (bool success, bytes mem\n      POP \t\t\t  (bool success, bytes mem\n      PUSH [tag] 45\t\t\t= fluxProcessorAddr.delegateca...\n      PUSH 0\t\t\t(\n      DUP4 \t\t\t\"computeS\n      ADD \t\t\ture(\"computeSum()\n      DUP5 \t\t\tithSig\n      PUSH [tag] 32\t\t\t= fluxProcessorAddr.delegateca...\n      JUMP \t\t\t= fluxProcessorAddr.delegateca...\n    tag 45\t\t\t= fluxProcessorAddr.delegateca...\n      JUMPDEST \t\t\t= fluxProcessorAddr.delegateca...\n      SWAP3 \t\t\trAddr = _fluxProcessorAddr;\\n ...\n      SWAP2 \t\t\trAddr = _fluxProcessorAddr;\\n ...\n      POP \t\t\trAddr = _fluxProcessorAddr;\\n ...\n      POP \t\t\trAddr = _fluxProcessorAddr;\\n ...\n      JUMP \t\t\trAddr = _fluxProcessorAddr;\\n ...\n    tag 33\t\t\tequire(success, \"delegatecall ...\n      JUMPDEST \t\t\tequire(success, \"delegatecall ...\n      PUSH 0\t\t\tfuncti\n      DUP2 \t\t\ts (ui\n      MLOAD \t\t\treturns (uin\n      SWAP1 \t\t\tblic view returns (uin\n      POP \t\t\tblic view returns (uin\n      SWAP2 \t\t\tequire(success, \"delegatecall ...\n      SWAP1 \t\t\tequire(success, \"delegatecall ...\n      POP \t\t\tequire(success, \"delegatecall ...\n      JUMP \t\t\tequire(success, \"delegatecall ...\n    tag 34\t\t\t   return a;\\n    }\\n\\n    fun...\n      JUMPDEST \t\t\t   return a;\\n    }\\n\\n    fun...\n      PUSH 0\t\t\tfunction ge\n      DUP2 \t\t\t (u\n      SWAP1 \t\t\tic view returns (u\n      POP \t\t\tic view returns (u\n      SWAP3 \t\t\t   return a;\\n    }\\n\\n    fun...\n      SWAP2 \t\t\t   return a;\\n    }\\n\\n    fun...\n      POP \t\t\t   return a;\\n    }\\n\\n    fun...\n      POP \t\t\t   return a;\\n    }\\n\\n    fun...\n      JUMP \t\t\t   return a;\\n    }\\n\\n    fun...\n    tag 35\t\t\t      return sum;\\n    }\\n}\n      JUMPDEST \t\t\t      return sum;\\n    }\\n}\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      MCOPY \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t      return sum;\\n    }\\n}\n      POP \t\t\t      return sum;\\n    }\\n}\n      POP \t\t\t      return sum;\\n    }\\n}\n      JUMP \t\t\t      return sum;\\n    }\\n}\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 50\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 33\t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 51\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 34\t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 52\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      PUSH 20\t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 35\t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 54\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 36\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 38\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 64656C656761746563616C6C206661696C656400000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 58\t\t\t\n      PUSH 13\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 37\t\t\t\n      JUMP \t\t\t\n    tag 58\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 59\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 38\t\t\t\n      JUMP \t\t\t\n    tag 59\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 29\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 61\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 39\t\t\t\n      JUMP \t\t\t\n    tag 61\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}
