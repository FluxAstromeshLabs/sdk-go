package main

import (
	"fmt"
	"os"
	"strings"

	evmtypes "github.com/FluxNFTLabs/sdk-go/chain/modules/evm/types"
	chaintypes "github.com/FluxNFTLabs/sdk-go/chain/types"
	"github.com/FluxNFTLabs/sdk-go/client/common"
	"github.com/cosmos/cosmos-sdk/crypto/keyring"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"

	chainclient "github.com/FluxNFTLabs/sdk-go/client/chain"
)

func main() {
	network := common.LoadNetwork("local", "")
	kr, err := keyring.New(
		"fluxd",
		"file",
		os.Getenv("HOME")+"/.fluxd",
		strings.NewReader("12345678"),
		chainclient.GetCryptoCodec(),
	)
	if err != nil {
		panic(err)
	}

	// init grpc connection
	cc, err := grpc.Dial("localhost:9900", grpc.WithTransportCredentials(insecure.NewCredentials()))
	if err != nil {
		panic(err)
	}

	// init client ctx
	clientCtx, senderAddress, err := chaintypes.NewClientContext(
		network.ChainId,
		"user1",
		kr,
	)
	if err != nil {
		panic(err)
	}
	clientCtx = clientCtx.WithGRPCClient(cc)

	// init chain client
	chainClient, err := chainclient.NewChainClient(
		clientCtx,
		common.OptionGasPrices("500000000lux"),
	)
	if err != nil {
		panic(err)
	}

	// prepare tx msg
	msg := &evmtypes.MsgDeployContract{
		Sender:   senderAddress.String(),
		Bytecode: []byte("608060405234801562000010575f80fd5b506040518060400160405280600581526020017f6f776e65720000000000000000000000000000000000000000000000000000008152505f6040516200005690620000d1565b908152602001604051809103902090816200007291906200034b565b506200042f565b5f81905092915050565b7f64656661756c74000000000000000000000000000000000000000000000000005f82015250565b5f620000b960078362000079565b9150620000c68262000083565b600782019050919050565b5f620000dd82620000ab565b9150819050919050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016357607f821691505b6020821081036200017957620001786200011e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a0565b620001e98683620001a0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002336200022d620002278462000201565b6200020a565b62000201565b9050919050565b5f819050919050565b6200024e8362000213565b620002666200025d826200023a565b848454620001ac565b825550505050565b5f90565b6200027c6200026e565b6200028981848462000243565b505050565b5b81811015620002b057620002a45f8262000272565b6001810190506200028f565b5050565b601f821115620002ff57620002c9816200017f565b620002d48462000191565b81016020851015620002e4578190505b620002fc620002f38562000191565b8301826200028e565b50505b505050565b5f82821c905092915050565b5f620003215f198460080262000304565b1980831691505092915050565b5f6200033b838362000310565b9150826002028217905092915050565b6200035682620000e7565b67ffffffffffffffff811115620003725762000371620000f1565b5b6200037e82546200014b565b6200038b828285620002b4565b5f60209050601f831160018114620003c1575f8415620003ac578287015190505b620003b885826200032e565b86555062000427565b601f198416620003d1866200017f565b5f5b82811015620003fa57848901518255600182019150602085019450602081019050620003d3565b868310156200041a578489015162000416601f89168262000310565b8355505b6001600288020188555050505b505050505050565b610849806200043d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063693ec85e14610043578063809bfab814610073578063e942b516146100a3575b5f80fd5b61005d6004803603810190610058919061039a565b6100bf565b60405161006a919061045b565b60405180910390f35b61008d6004803603810190610088919061039a565b61016c565b60405161009a919061045b565b60405180910390f35b6100bd60048036038101906100b8919061047b565b61021e565b005b60605f826040516100d0919061052b565b908152602001604051809103902080546100e99061056e565b80601f01602080910402602001604051908101604052809291908181526020018280546101159061056e565b80156101605780601f1061013757610100808354040283529160200191610160565b820191905f5260205f20905b81548152906001019060200180831161014357829003601f168201915b50505050509050919050565b5f818051602081018201805184825260208301602085012081835280955050505050505f91509050805461019f9061056e565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061056e565b80156102165780601f106101ed57610100808354040283529160200191610216565b820191905f5260205f20905b8154815290600101906020018083116101f957829003601f168201915b505050505081565b805f8360405161022e919061052b565b908152602001604051809103902090816102489190610744565b505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102ac82610266565b810181811067ffffffffffffffff821117156102cb576102ca610276565b5b80604052505050565b5f6102dd61024d565b90506102e982826102a3565b919050565b5f67ffffffffffffffff82111561030857610307610276565b5b61031182610266565b9050602081019050919050565b828183375f83830152505050565b5f61033e610339846102ee565b6102d4565b90508281526020810184848401111561035a57610359610262565b5b61036584828561031e565b509392505050565b5f82601f8301126103815761038061025e565b5b813561039184826020860161032c565b91505092915050565b5f602082840312156103af576103ae610256565b5b5f82013567ffffffffffffffff8111156103cc576103cb61025a565b5b6103d88482850161036d565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156104185780820151818401526020810190506103fd565b5f8484015250505050565b5f61042d826103e1565b61043781856103eb565b93506104478185602086016103fb565b61045081610266565b840191505092915050565b5f6020820190508181035f8301526104738184610423565b905092915050565b5f806040838503121561049157610490610256565b5b5f83013567ffffffffffffffff8111156104ae576104ad61025a565b5b6104ba8582860161036d565b925050602083013567ffffffffffffffff8111156104db576104da61025a565b5b6104e78582860161036d565b9150509250929050565b5f81905092915050565b5f610505826103e1565b61050f81856104f1565b935061051f8185602086016103fb565b80840191505092915050565b5f61053682846104fb565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061058557607f821691505b60208210810361059857610597610541565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105bf565b61060486836105bf565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61064861064361063e8461061c565b610625565b61061c565b9050919050565b5f819050919050565b6106618361062e565b61067561066d8261064f565b8484546105cb565b825550505050565b5f90565b61068961067d565b610694818484610658565b505050565b5b818110156106b7576106ac5f82610681565b60018101905061069a565b5050565b601f8211156106fc576106cd8161059e565b6106d6846105b0565b810160208510156106e5578190505b6106f96106f1856105b0565b830182610699565b50505b505050565b5f82821c905092915050565b5f61071c5f1984600802610701565b1980831691505092915050565b5f610734838361070d565b9150826002028217905092915050565b61074d826103e1565b67ffffffffffffffff81111561076657610765610276565b5b610770825461056e565b61077b8282856106bb565b5f60209050601f8311600181146107ac575f841561079a578287015190505b6107a48582610729565b86555061080b565b601f1984166107ba8661059e565b5f5b828110156107e1578489015182556001820191506020850194506020810190506107bc565b868310156107fe57848901516107fa601f89168261070d565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220c9dc9eedf0828438f813946a2cda47e3711f58766593e586042c742fdbaa150864736f6c63430008180033"),
	}

	txResp, err := chainClient.SyncBroadcastMsg(msg)
	if err != nil {
		panic(err)
	}
	fmt.Println("resp:", txResp)
}
