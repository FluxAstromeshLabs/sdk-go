{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "controllerGasLimit",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_TICK_SPACING",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "int24",
          "internalType": "int24"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MIN_TICK_SPACING",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "int24",
          "internalType": "int24"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectProtocolFees",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountCollected",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "donate",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "amount0",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount1",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "delta",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "slot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "startSlot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "nSlots",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "slots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        {
          "name": "slots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        {
          "name": "slot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "internalType": "uint160"
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "tick",
          "type": "int24",
          "internalType": "int24"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "modifyLiquidity",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "callerDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeeController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IProtocolFeeController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeesAccrued",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "newProtocolFee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFeeController",
      "inputs": [
        {
          "name": "controller",
          "type": "address",
          "internalType": "contract IProtocolFeeController"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        }
      ],
      "outputs": [
        {
          "name": "paid",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "swap",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.SwapParams",
          "components": [
            {
              "name": "zeroForOne",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "swapDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sync",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        }
      ],
      "outputs": [
        {
          "name": "balance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "take",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unlock",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "result",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateDynamicLPFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "newDynamicLPFee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialize",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": false,
          "internalType": "PoolId"
        },
        {
          "name": "currency0",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "currency1",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        },
        {
          "name": "tickSpacing",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "hooks",
          "type": "address",
          "indexed": false,
          "internalType": "contract IHooks"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModifyLiquidity",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tickLower",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "tickUpper",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "liquidityDelta",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeControllerUpdated",
      "inputs": [
        {
          "name": "protocolFeeController",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeUpdated",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "protocolFee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Swap",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "amount1",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "liquidity",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyUnlocked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrenciesOutOfOrderOrEqual",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrencyNotSettled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DelegateCallNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidProtocolFee",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ManagerLocked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonZeroNativeValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolNotInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProtocolFeeCannotBeFetched",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SwapAmountCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TickSpacingTooLarge",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TickSpacingTooSmall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnauthorizedDynamicLPFeeUpdate",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "4730:10632:36:-:0;;;;;;;;;;;;;-1:-1:-1;;4730:10632:36;;;;-1:-1:-1;;;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4730:10632:36;;-1:-1:-1;;;;;;4730:10632:36;1016:10:37;4730:10632:36;;;;;;;;;1075:40:27;-1:-1:-1;;1075:40:27;1038::37;;725:4:35;706:24;;4730:10632:36;;;;;;1038:40:37;4730:10632:36;;;;;706:24:35;4730:10632:36;;;;;;;-1:-1:-1;4730:10632:36;;;;;;-1:-1:-1;4730:10632:36;;;;;-1:-1:-1;4730:10632:36",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "4730:10632:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:666:33;4730:10632:36;653:666:33;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6727:13;4730:10632;6727:13;;;4730:10632;;;;;;;;;;;;;;;;;;;;;;;;;890:804:34;4730:10632:36;890:804:34;;;4730:10632:36;;;;;;;;;;1687:804:33;4730:10632:36;1687:804:33;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;2349:50:31;;4730:10632:36;;;;;;2015:10:31;;;:20;;:55;;;4730:10632:36;2011:237:31;;4730:10632:36;;;;;;;;;;;;;;;;;;2258:31:31;4730:10632:36;;;2258:31:31;:::i;:::-;4730:10632:36;;;;;;;;;;;;;;;;;;;;;2300:33:31;4730:10632:36;;;2300:33:31;:::i;:::-;4730:10632:36;;;;;2015:10:31;4730:10632:36;;;;;;;;;;;;;;;;;2349:50:31;;;;4730:10632:36;;;;;;;2011:237:31;4730:10632:36;;;2104:9:31;4730:10632:36;;;;;2015:10:31;;4730:10632:36;-1:-1:-1;4730:10632:36;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;2155:28:31;2166:17;2155:28;;2151:86;;2011:237;;;;;2151:86;2221:16;;;:::i;:::-;4730:10632:36;;;2104:9:31;4730:10632:36;;;;;2015:10:31;;4730:10632:36;-1:-1:-1;4730:10632:36;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;2151:86:31;;;;2015:55;4730:10632:36;;;;2040:10:31;4730:10632:36;;;;;2015:10:31;;4730:10632:36;-1:-1:-1;4730:10632:36;;;;;-1:-1:-1;4730:10632:36;;;2039:31:31;2015:55;;4730:10632:36;;;;;;;;;;;:::i;:::-;846:68:56;;;;;5600:18:36;5596:59;;3856:52:31;;4730:10632:36;;13894:17;13913:10;13894:17;;;:::i;:::-;13913:10;4730:10632;;;;13913:10;:::i;:::-;4730:10632;13913:10;;652:14:32;;;:43;;;4730:10632:36;648:269:32;;4730:10632:36;;;;;;;;;;;;;;;;;;3809:31:31;4730:10632:36;;;3809:31:31;:::i;3856:52::-;;;;4730:10632:36;648:269:32;4730:10632:36;;;737:9:32;4730:10632:36;;;;;;13913:10;4730:10632;;;;;;;;;;;;;;;;;782:36:32;801:17;782:36;;778:129;;648:269;;;;;778:129;868:24;;;:::i;:::-;4730:10632:36;;;737:9:32;4730:10632:36;;;;;;13913:10;4730:10632;;;;;;;;;;;;;;;;;778:129:32;;;;652:43;4730:10632:36;;;;671:10:32;4730:10632:36;;;;;;13913:10;4730:10632;;;;;;;;;;;670:25:32;652:43;;5596:59:36;5620:22;4730:10632;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;846:68:56;;;;;5600:18:36;5596:59;;4730:10632;9425:27;9421:77;;358:89:111;;4730:10632:36;358:89:111;;4730:10632:36;;;;15343:6;4730:10632;;;;;9588:25;;;;:::i;:::-;9797:9;;;4730:10632;;;;;;;;;9797:43;;;;:::i;:::-;10116:15;;;;4730:10632;10116:15;;4730:10632;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;10065:302;;4730:10632;;10065:302;;4730:10632;;10065:302;;4730:10632;;;9797:9;10065:302;;4730:10632;;;;;10385:49;;;11545:134;4730:10632;;11284:17;10883:10;10385:49;4730:10632;10385:49;;10541:70;10385:49;;;4730:10632;;;;11284:17;:::i;:::-;11360:18;;;;;;11356:74;;10385:49;11613:18;;4730:10632;;11613:18;;4730:10632;;11633:15;4730:10632;;;11633:15;;4730:10632;;11650:10;;4730:10632;;;;;;11567:10;;4730:10632;;1879:67:108;9797:9:36;1879:67:108;2052:73;4730:10632:36;;;;;2052:73:108;;;4730:10632:36;;;;;;;;9797:9;4730:10632;;;;;;;;;;;;11545:134;4730:10632;;;;;10541:70;:::i;:::-;1629:48:108;;;;10722:109:36;;10385:49;11567:10;;;;10883;;:::i;:::-;4730:10632;;;;;;10722:109;4730:10632;10812:18;4730:10632;;;10812:18;;;:::i;:::-;10722:109;;;;11356:74;4730:10632;;;;;;;;;;;;;;272:35:50;4730:10632:36;;11356:74;;;;10385:49;4730:10632;10421:13;4730:10632;;;;11284:17;:::i;9421:77::-;9454:31;4730:10632;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;756:44:27;4730:10632:36;;;764:10:27;:19;756:44;:::i;:::-;4730:10632:36;;;;;;;;764:10:27;1424:42;4730:10632:36;1424:42:27;;4730:10632:36;;;;;;;;;;;;;;423:99:34;4730:10632:36;423:99:34;4730:10632:36;;423:99:34;4730:10632:36;;;;;;;;;;;;;860:51:37;4730:10632:36;;;;;;;;;;;;;;;:::i;:::-;;;;1687:804:33;;;4730:10632:36;1687:804:33;;;;;4730:10632:36;1687:804:33;;;;;;;;;;;;;;;;;;;;;;;4730:10632:36;1687:804:33;4730:10632:36;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;1185:62:31;4730:10632:36;;;;;;1185:62:31;4730:10632:36;-1:-1:-1;4730:10632:36;;;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;890:804:34;;;4730:10632:36;890:804:34;;;;;4730:10632:36;890:804:34;;;;;;;;;;;;;;;;;;;;;4730:10632:36;;;;;;;;;;;;;;:::i;:::-;;;;789:64:37;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;1998:21:37;4730:10632:36;;1976:10:37;:44;1972:85;;4730:10632:36;;2237:15:37;;2087:11;;;4730:10632:36;;;;;;;;;;;;;2086:54:37;;;;4730:10632:36;;;;;;;;;;;2150:48:37;4730:10632:36;;;2150:48:37;:::i;:::-;4730:10632:36;;2237:15:37;:::i;2086:54::-;;;;;;1972:85;2022:22;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;1480:21:37;4730:10632:36;;1458:10:37;:44;1454:85;;944:221:61;;;;;;;;;1553:36:37;1549:82;;4730:10632:36;;1731:38:37;358:89:111;;4730:10632:36;;;;15343:6;4730:10632;;;;;4863:25:59;;;:::i;:::-;4730:10632:36;;2724:254:113;;;;;;;;;4730:10632:36;;;;;;;;;1731:38:37;4730:10632:36;1549:82:37;1591:27;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;:::i;:::-;846:68:56;;5600:18:36;5596:59;;4730:10632;;;12979:19;;4730:10632;13021:9;13342:10;13021:9;12975:316;;13325:15;;;:::i;:::-;13342:10;;;:::i;12975:316::-;13065:9;13061:59;;1321:145:62;4730:10632:36;1321:145:62;;4730:10632:36;1321:145:62;4730:10632:36;;1321:145:62;1062:52;1127:10;;;1123:58;;1195:21;552:17;4730:10632:36;1195:21:62;;1191:36;;12975:316:36;13252:28;13342:10;13217:14;;;;:::i;:::-;13252:28;:::i;:::-;12975:316;;;1191:36:62;-1:-1:-1;4730:10632:36;1191:36:62;;1123:58;1139:29;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;13061:59:36;13080:27;4730:10632;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1175:76:35;;:::i;:::-;6528:15:36;;;4730:10632;1285:15:68;4730:10632:36;;;;6528:34;6524:81;;4730:10632;;;;;6619:34;6615:81;;4730:10632;;;;6727:13;;;;4730:10632;;;;;-1:-1:-1;828:51:110;6706:85:36;;6806:9;;;4730:10632;;;;;6835:7;4730:10632;6835:7;;4730:10632;6806:37;4730:10632;;;;6806:37;;:::i;:::-;6805:38;6801:109;;4730:10632;6936:25;4730:10632;;;;6936:25;:::i;:::-;4730:10632;;;;;;8475:10:53;;;:27;8471:59;;4730:10632:36;358:89:111;;4730:10632:36;358:89:111;;7095:22:36;;;;:::i;:::-;4730:10632;;;;;;7135:6;6727:13;4730:10632;;;;;;;;1371:93:113;4481:80:59;;4579:41;;;:::i;:::-;3086:178:113;;;;;;;2447:157;;;4730:10632:36;2447:157:113;;;2724:254;;;;;;3086:178;;4730:10632:36;;;;;;;;8475:10:53;;;:27;;8471:59;7480:81:36;8471:59:53;6806:9:36;8471:59:53;6727:13:36;8471:59:53;;4730:10632:36;8471:59:53;4730:10632:36;8471:59:53;;;;;;;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6528:15;4730:10632;;;7480:81;4730:10632;;;;;;;;8471:59:53;4730:10632:36;16049:29:53;9277:219;;8471:59;;;;9277:219;1384:7;9369:102;4730:10632:36;9338:147:53;4730:10632:36;;;9369:102:53;6727:13:36;9369:102:53;9392:31;9369:102;;;;;8475:10;9369:102;;;4730:10632:36;1384:7:53;;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;1384:7;;;;4730:10632:36;;;1384:7:53;;;4730:10632:36;1384:7:53;;;;;;;;;;:::i;:::-;9369:102;;;;;;;;:::i;:::-;9338:147;:::i;:::-;;9277:219;;;;;;;4481:80:59;4517:31;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;8471:59:53;4730:10632:36;16049:29:53;8791:215;;8471:59;;;;8791:215;8853:142;4730:10632:36;;;8884:97:53;8907:32;6727:13:36;8884:97:53;;;8475:10;8884:97;;;4730:10632:36;1321:7:53;;;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;1321:7;;;;;4730:10632:36;1321:7:53;;;;;8884:97;1321:7;;;;;;;;:::i;8853:142::-;;8791:215;;;6801:109:36;6845:34;4730:10632;938:127:49;4730:10632:36;938:127:49;;4730:10632:36;938:127:49;6706:85:36;6742:36;4730:10632;668:96:49;4730:10632:36;;668:96:49;6615:81:36;6655:28;4730:10632;668:96:49;4730:10632:36;;668:96:49;6524:81:36;6564:28;4730:10632;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;;;;;;;1285:15:68;4730:10632:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;846:68:56;;;5600:18:36;5596:59;;4730:10632;358:89:111;;4730:10632:36;;;;15343:6;4730:10632;;;;;7943:25;;;;:::i;:::-;4730:10632;7981:9;;4730:10632;;;;;8475:10:53;;;:27;8471:59;;4730:10632:36;;;;;;;;;;;;;;;8335:32;4730:10632;;;;8335:32;:::i;:::-;8398:15;4730:10632;8398:15;;4730:10632;;;;;;;;;;;:::i;:::-;8475:10:53;4730:10632:36;;8149:314;4730:10632;8149:314;;4730:10632;8149:314;4730:10632;8149:314;;4730:10632;;;;;8149:314;;4730:10632;;8149:314;;4730:10632;;8149:314;;4730:10632;;4039:22:59;;;;;4035:85;;766:7:68;4134:29:59;;4130:86;;926:6:68;4230:29:59;;4226:86;;4730:10632:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6675:1188:59;;4730:10632:36;;21830:10:59;;:21;4730:10632:36;;;;;;;;;;;21886:21:59;4730:10632:36;;;;;;;;;;;;;1551:98:113;4730:10632:36;1551:98:113;21993:23:59;;;21989:800;21993:23;;;22059:27;4730:10632:36;22059:27:59;4730:10632:36;22059:27:59;;4730:10632:36;;22089:27:59;;4730:10632:36;;;22157:27:59;;4730:10632:36;22187:27:59;;4730:10632:36;;;21989:800:59;;4730:10632:36;;;;;8149:314;;4730:10632;1780:349:60;;;15343:6:36;1780:349:60;;;;4730:10632:36;1780:349:60;;;;4730:10632:36;1780:349:60;;4730:10632:36;;15343:6;8076:14:59;;4730:10632:36;;;;;;;;;;;;;;6679:19:59;3080:270:60;4730:10632:36;;;3179:14:60;;3175:67;;8446:20:59;4730:10632:36;3080:270:60;8812:66:36;3080:270:60;8424:20:59;3080:270:60;9152:10:36;3080:270:60;;4730:10632:36;3544:29:60;;4730:10632:36;3647:100:60;4730:10632:36;3505:100:60;4730:10632:36;;;;;3505:100:60;:::i;:::-;3686:29;;4730:10632:36;;;;;3647:100:60;:::i;:::-;4730:10632:36;;;8424:20:59;:::i;:::-;8446;;:::i;:::-;4730:10632:36;554:99:108;;4730:10632:36;554:99:108;;4730:10632:36;;;;;8560:18:59;8556:255;;3080:270:60;4730:10632:36;;;;8831:1774:59;;3080:270:60;770:204:108;;;;1018:15;1001;770:204;4730:10632:36;770:204:108;;4730:10632:36;770:204:108;;1001:15;:::i;:::-;770:204;;4730:10632:36;770:204:108;;4730:10632:36;770:204:108;;1018:15;:::i;:::-;4730:10632:36;554:99:108;;4730:10632:36;554:99:108;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8652:90;4730:10632;8475:10:53;8652:90:36;;7981:9;4730:10632;;7981:9;;4730:10632;;8812:66;:::i;:::-;1629:48:108;;;;8989:109:36;;3080:270:60;8475:10:53;;;9152::36;;:::i;:::-;4730:10632;;;;;;;;;;8989:109;9079:18;7981:9;4730:10632;;7981:9;;4730:10632;;9079:18;;;:::i;:::-;8989:109;;;8831:1774:59;4730:10632:36;;;;;;;1551:98:113;4730:10632:36;1551:98:113;4730:10632:36;1551:98:113;1371:93;4730:10632:36;1371:93:113;9002:16:59;;;;8998:1597;9002:16;;;9369:38;;;;9314:171;9369:38;9409;9369;9314:182;9369:38;;:::i;:::-;4730:10632:36;;;9409:38:59;;:::i;:::-;9314:171;;:::i;:::-;:182;:::i;:::-;4730:10632:36;554:99:108;8998:1597:59;8831:1774;;;;;;8998:1597;9562:16;;;;;;;9558:1037;4730:10632:36;;;;;9799:135:59;:99;9988:54;4730:10632:36;9642:135:59;:99;1780:349:60;4730:10632:36;9686:38:59;4730:10632:36;;;9686:38:59;;:::i;:::-;9642:99;;:::i;:135::-;4730:10632:36;9829:38:59;4730:10632:36;;;9829:38:59;;:::i;:::-;9799:99;:::i;:135::-;554:99:108;;;4730:10632:36;554:99:108;;10011:14:59;;4730:10632:36;;;;;;;9988:54:59;:::i;:::-;4730:10632:36;;;;;;;;8998:1597:59;;9558:1037;10435:38;;10380:182;10435:38;;;10475;10435;10380:171;10435:38;;:::i;10475:::-;10380:171;;:::i;:182::-;4730:10632:36;554:99:108;8998:1597:59;;8556:255;4730:10632:36;;;;8598:91:59;;8556:255;4730:10632:36;;8706:91:59;;8556:255;;;;8706:91;8768:9;;;27582:10;27505:100;4730:10632:36;;-1:-1:-1;4730:10632:36;27582:10:59;4730:10632:36;;27575:23:59;4730:10632:36;;;;;;;;;;;;;;27505:100:59;8768:9;8706:91;;8598;8660:9;;;27582:10;27505:100;4730:10632:36;;-1:-1:-1;4730:10632:36;27582:10:59;4730:10632:36;;27575:23:59;4730:10632:36;;;;;;;;;;;;;;27505:100:59;8660:9;8598:91;;3175:67:60;3195:34;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;3080:270:60;8446:20:59;4730:10632:36;;8812:66;4730:10632;8424:20:59;4730:10632:36;9152:10;4730:10632;;3290:49:60;4730:10632:36;;;3290:49:60;;:::i;:::-;4730:10632:36;;;;;;;;3080:270:60;;21989:800:59;22239:24;;;;-1:-1:-1;4730:10632:36;;;22306:27:59;4730:10632:36;22306:27:59;;4730:10632:36;;22336:27:59;;4730:10632:36;;;22404:27:59;;4730:10632:36;22434:27:59;;4730:10632:36;;;22235:554:59;21989:800;;22235:554;22543:25;4730:10632:36;;22543:25:59;;4730:10632:36;;22571:27:59;;4730:10632:36;;;;22601:27:59;;4730:10632:36;;;22689:25:59;;;;;4730:10632:36;22717:27:59;;4730:10632:36;;;22747:27:59;;4730:10632:36;;;22235:554:59;21989:800;;6675:1188;4730:10632:36;;;;;;23746:10:59;;4730:10632:36;;;23846:538:59;4730:10632:36;;;23846:538:59;;;25115:35;23846:538;;;4730:10632:36;;24416:60:59;4730:10632:36;;;24416:60:59;;:::i;:::-;24528:25;;4730:10632:36;;;;;24498:24:59;24497:57;;24565:357;;;6675:1188;25069:81;;4730:10632:36;;;23846:538:59;4730:10632:36;23846:538:59;25115:35;:::i;:::-;4730:10632:36;25160:639:59;;;;;4730:10632:36;;;;;;;;;;;;;23746:10:59;;4730:10632:36;;;;;23846:538:59;;;;;;24416:60;4730:10632:36;;;24416:60:59;;:::i;:::-;24528:25;;4730:10632:36;;23846:538:59;4730:10632:36;;24498:24:59;24497:57;;24565:357;;;6675:1188;4730:10632:36;;;23846:538:59;4730:10632:36;23846:538:59;4730:10632:36;;;;;;;;;;;;;25069:81:59;23846:538;25069:81;25160:639;4730:10632:36;25160:639:59;;;;;4730:10632:36;;;;;;;;;;;;;;;7070:19:59;;7066:508;;6675:1188;4730:10632:36;;7592:120:59;;6675:1188;4730:10632:36;;;;7729:120:59;6675:1188;7729:120;7811:18;4730:10632:36;8149:314;;4730:10632;;;7775:15:59;;;;7811:18;:::i;:::-;6675:1188;;7592:120;7674:18;4730:10632:36;8149:314;;4730:10632;;;7638:15:59;;;;7674:18;:::i;:::-;7592:120;;7066:508;4730:10632:36;23846:538:59;4730:10632:36;;8149:314;;;4730:10632;;;;;;;26782:300:59;;;766:7:68;26782:300:59;;;;926:6:68;26782:300:59;;;;;;;4730:10632:36;7221:52:59;;;7217:159;;23846:538;4730:10632:36;;;;;7401:52:59;7397:159;;7066:508;;;;7397:159;938:127:49;7481:30:59;4730:10632:36;938:127:49;4730:10632:36;938:127:49;;4730:10632:36;938:127:49;7217:159:59;938:127:49;7301:30:59;4730:10632:36;938:127:49;4730:10632:36;938:127:49;;4730:10632:36;938:127:49;4730:10632:36;;;;;;;;;;24565:357:59;4730:10632:36;;;1551:98:113;4730:10632:36;1551:98:113;24726:25:59;;24565:357;24722:190;4730:10632:36;24800:25:59;;4730:10632:36;;24771:26:59;;4730:10632:36;;24872:25:59;;4730:10632:36;;24843:26:59;;4730:10632:36;24565:357:59;;;4730:10632:36;;;1551:98:113;4730:10632:36;1551:98:113;-1:-1:-1;24726:25:59;24722:190;;24565:357;;;;24722:190;24800:25;4730:10632:36;;24800:25:59;;4730:10632:36;;24771:26:59;;4730:10632:36;24872:25:59;4730:10632:36;;24843:26:59;;4730:10632:36;24722:190:59;;;4226:86;4261:29;4730:10632:36;938:127:49;4730:10632:36;938:127:49;;4730:10632:36;938:127:49;4130:86:59;938:127:49;4165:29:59;4730:10632:36;938:127:49;4730:10632:36;938:127:49;;4730:10632:36;938:127:49;4035:85:59;1833:162:49;4063:24:59;4730:10632:36;1833:162:49;4730:10632:36;1833:162:49;;;;4730:10632:36;1833:162:49;8471:59:53;4730:10632:36;;;;;9817:25:53;;;:74;;;8471:59;9813:469;;;4730:10632:36;;9907:108:53;4730:10632:36;9921:93:53;4730:10632:36;9921:93:53;4730:10632:36;;;;9921:93:53;;;9944:34;4730:10632:36;9921:93:53;;;8475:10;9921:93;;;;:::i;9907:108::-;;9813:469;8471:59;;;;;9813:469;10036:26;:78;;;;9813:469;10032:250;;;9813:469;;;;;10032:250;10130:141;4730:10632:36;10161:96:53;4730:10632:36;10161:96:53;4730:10632:36;;;;10161:96:53;;;10184:37;4730:10632:36;10161:96:53;;;8475:10;10161:96;;;;:::i;10130:141::-;;10032:250;;;;10036:78;4730:10632:36;10066:48:53;;16049:29;:34;;10036:78;;;9817:74;9846:45;4730:10632:36;16049:29:53;;:34;;9817:74;;4730:10632:36;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;1325:84:31;4730:10632:36;;;;;;1325:84:31;4730:10632:36;-1:-1:-1;4730:10632:36;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2776:10:31;;4730:10632:36;;2765:10:31;4730:10632:36;;;;;;;;-1:-1:-1;4730:10632:36;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;;;;;;;;2776:10:31;2824:43;4730:10632:36;2776:10:31;2824:43;;4730:10632:36;;;2885:4:31;4730:10632:36;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;14103:7;531:8:54;4730:10632:36;;14103:7;;4730:10632;;1246:24:54;14102:23:36;;:59;;;4730:10632;14098:142;;4730:10632;14249:24;;;;:::i;:::-;358:89:111;4730:10632:36;;14317:6;4730:10632;;;;;5097:25:59;;;;:::i;:::-;4730:10632:36;;3086:178:113;;;;;;;;;;4730:10632:36;;;14098:142;14177:39;4730:10632;668:96:49;4730:10632:36;;668:96:49;14102:59:36;14151:9;4730:10632;14151:9;;;4730:10632;;14129:10;:32;;14102:59;;4730:10632;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1175:76:35;;:::i;:::-;846:68:56;;5822:60:36;;4730:10632;568:85:56;4730:10632:36;568:85:56;;846:68;568:85;4730:10632:36;;6033:48;;;;;4730:10632;6033:48;;4730:10632;;6033:48;;4730:10632;;;;;;:::i;:::-;6033:48;6049:10;;;6033:48;;;;;;;4730:10632;6033:48;;;4730:10632;655:73:57;;;6092:75:36;;4730:10632;;700:64:56;;846:68;700:64;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6092:75;6127:27;4730:10632;668:96:49;4730:10632:36;;668:96:49;6033:48:36;;;;;4730:10632;6033:48;;;;;;:::i;:::-;;;4730:10632;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6033:48;;;;4730:10632;;;;;;;;;5822:60;5845:24;4730:10632;668:96:49;4730:10632:36;;668:96:49;4730:10632:36;;;;;;;;:::i;:::-;2546:10:31;;;;;4730:10632:36;;2536:9:31;4730:10632:36;;;;;;;;-1:-1:-1;4730:10632:36;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;;;;;;;;2546:10:31;2595:41;4730:10632:36;2546:10:31;2595:41;;4730:10632:36;;;2654:4:31;4730:10632:36;;;;;;;;;;;;;;;;;;653:666:33;4730:10632:36;;653:666:33;;;4730:10632:36;653:666:33;4730:10632:36;653:666:33;;;4730:10632:36;;;653:666:33;;;;;;;;;;;;;;;4730:10632:36;;653:666:33;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;1272:49:37;4730:10632:36;756:44:27;4730:10632:36;;;;764:10:27;:19;756:44;:::i;:::-;4730:10632:36;;1223:34:37;4730:10632:36;;;1223:34:37;4730:10632:36;;;;;;1272:49:37;4730:10632:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;846:68:56;;;;;5600:18:36;5596:59;;4730:10632;358:89:111;;4730:10632:36;;15343:6;4730:10632;;;;;12009:25;;;;:::i;:::-;12047:9;;;4730:10632;;;;;;8475:10:53;;;:27;8471:59;;4730:10632:36;20538:15:59;;4730:10632:36;20538:15:59;;;4730:10632:36;;20567:14:59;;;20563:66;;4730:10632:36;20760:18:59;;;;:::i;:::-;4730:10632:36;;20783:18:59;;;:::i;:::-;4730:10632:36;;;554:99:108;;12047:9:36;554:99:108;;20821:11:59;;20817:135;;4730:10632:36;20969:11:59;20965:135;;4730:10632:36;8475:10:53;;12198::36;8475::53;12198::36;;;:::i;:::-;4730:10632;;;;;8475:10:53;;;:27;8471:59;;4730:10632:36;;;;;;;;;8471:59:53;4730:10632:36;16049:29:53;15732:209;;8471:59;;;;15732:209;15789:141;4730:10632:36;15820:96:53;4730:10632:36;15820:96:53;4730:10632:36;;;15820:96:53;;;15843:27;15820:96;;;;8475:10;15820:96;;;;:::i;15789:141::-;;15732:209;;;;;;;;20965:135:59;21030:55;21000:26;21030:55;;;:::i;:::-;21000:26;;4730:10632:36;;;272:35:50;4730:10632:36;;20965:135:59;;;;20817;20882:55;;;;:::i;:::-;4730:10632:36;20852:26:59;;4730:10632:36;;;272:35:50;4730:10632:36;;20817:135:59;;20563:66;20583:33;4730:10632:36;668:96:49;4730:10632:36;;668:96:49;8471:59:53;4730:10632:36;16049:29:53;15258:211;;8471:59;;;;15258:211;4730:10632:36;;15370:28:53;4730:10632:36;15347:97:53;;;15316:142;;15347:97;4730:10632:36;15347:97:53;8475:10;;;;;;15347:97;;;;:::i;15316:142::-;;15258:211;;;4730:10632:36;;;;;;;;;;;;;412:99:33;4730:10632:36;412:99:33;4730:10632:36;;412:99:33;4730:10632:36;;;;;;;:::i;:::-;846:68:56;;;;5600:18:36;5596:59;;3656:54:31;;4730:10632:36;;13629:17;13649:10;13629:17;;;:::i;:::-;4730:10632;;;;13649:10;4730:10632;;;;13649:10;:::i;:::-;4730:10632;;;;;;;;;;;;;;;;;;;3607:33:31;4730:10632:36;;;3607:33:31;:::i;4730:10632:36:-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;846:68:56;;;5600:18:36;5596:59;;12801:6;12734:17;12754:10;12734:17;;;:::i;:::-;4730:10632;;;;12754:10;;;;:::i;:::-;12801:6;:::i;:::-;4730:10632;;;;;;;;;:::i;:::-;1713:10:31;;;;;4730:10632:36;;;;;;;;;;;;;;;;1703:35:31;4730:10632:36;;;1703:35:31;:::i;:::-;4730:10632:36;;;;;;;;;;;;;;;;;;;;;1749:33:31;4730:10632:36;;;1749:33:31;:::i;:::-;4730:10632:36;;;;;1713:10:31;4730:10632:36;;;;;;;;;;1798:54:31;;4730:10632:36;;;;1798:54:31;4730:10632:36;;;;;;;;;;;;;;;1120:1:68;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;3183:25:31;4730:10632:36;;3183:25:31;;:100;;;;;4730:10632:36;;;;;;;;;;3183:100:31;4730:10632:36;3258:25:31;;;3183:100;;;4730:10632:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;4730:10632:36;;;;;;;;;;;:::o;12320:156::-;;12406:24;;;:::i;:::-;12461:7;;787:10:62;;;783:36;;12320:156:36;1321:145:62;796:1;1321:145;;;;796:1;1321:145;870:51;12320:156:36:o;783:36:62:-;552:17;;-1:-1:-1;783:36:62;;1985:147:63;2064:8;2059:13;;;2055:36;;4730:10632:36;;1985:147:63;:::o;2055:36::-;269:215;;;;;;4730:10632:36;;;;;;;;;;;;;;;;;;;;;;;;:::o;14438:411::-;;4730:10632;;14533:10;;;14529:23;;547:141:48;14542:1:36;547:141:48;;;;14628:15:36;547:141:48;14542:1:36;547:141:48;1222:57;14628:15:36;;;:::i;:::-;14658:9;;;;1187:164:57;;;;;;;14654:147:36;14542:1;547:141:48;;;;14542:1:36;547:141:48;920:56;14438:411:36:o;14654:147::-;;14729:72;780:164:57;;;;;;14654:147:36;;14529:23;14545:7;;;:::o;1269:1687:110:-;4730:10632:36;;;1538:19:110;;1573:308;;;;;;;;;;;;1269:1687::o;1573:308::-;;;;;;;1534:1416;1911:1029;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:1687::o;1911:1029::-;;;;;;;27161:157:59;4730:10632:36;1371:93:113;;27239:30:59;27235:76;;27161:157::o;27235:76::-;27271:27;-1:-1:-1;668:96:49;;-1:-1:-1;668:96:49;1831:6:53;;;;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;;1831:6:53;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;;;;;:::i;:::-;;:::o;14927:232:36:-;;4730:10632;15113:13;15145:6;14927:232;;15082:6;4730:10632;;;;;1879:67:108;;;15082:6:36;;:::i;:::-;15113:13;4730:10632;;2052:73:108;;;15145:6:36;;:::i;:::-;14927:232::o;969:137:35:-;4730:10632:36;1045:8:35;4730:10632:36;1036:4:35;1028:25;1024:75;;969:137::o;1024:75::-;1055:31;668:96:49;;;;;1578:116:54;4730:10632:36;1063:7:54;1578:116;4730:10632:36;1452:18:54;1633:54;;1578:116::o;1633:54::-;1654:20;-1:-1:-1;668:96:49;;-1:-1:-1;668:96:49;1589:6:53;;;;;;;;4730:10632:36;1589:6:53;;4730:10632:36;;;1589:6:53;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;1589;;;4730:10632:36;;;;1589:6:53;;;4730:10632:36;1589:6:53;;;;4730:10632:36;;1589:6:53;;;4730:10632:36;1589:6:53;;;;;;;4730:10632:36;1589:6:53;;;;;;4730:10632:36;1589:6:53;;;;;;;;;;:::i;1302:209:63:-;272:35:50;1401:8:63;272:35:50;1428:3:63;4730:10632:36;1399:46:63;1395:68;;269:215;4730:10632:36;269:215:63;;;;1395:68;4730:10632:36;;1447:16:63;:::o;1657:6:53:-;;;;;;;4730:10632:36;1657:6:53;;;;4730:10632:36;;;1657:6:53;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;1657;1589;;4730:10632:36;;;;1657:6:53;;;4730:10632:36;1589:6:53;;;;4730:10632:36;;1589:6:53;;;4730:10632:36;1589:6:53;;;;;;;4730:10632:36;1589:6:53;;;;;;4730:10632:36;1589:6:53;1657;;;;4730:10632:36;1657:6:53;;;;;;;;:::i;10385:1403::-;;;;;4730:10632:36;;;;;10671:10:53;:27;10667:79;;10757:19;4730:10632:36;10790:21:53;;;4730:10632:36;10790:25:53;10786:996;4730:10632:36;;;;16049:29:53;;10831:451;;10786:996;;;;;;;10385:1403::o;10831:451::-;11244:23;4730:10632:36;;;;11004:84:53;4730:10632:36;10950:244:53;4730:10632:36;;;;11004:84:53;4730:10632:36;10790:21:53;4730:10632:36;11004:84:53;;;;;;;;10671:10;11004:84;;;;:::i;:::-;;;;;;;;;:::i;:::-;4730:10632:36;16049:29:53;;:34;;10950:244;;:::i;:::-;11244:23;;;:::i;:::-;10831:451;;;;;;;;;10786:996;11316:47;;;;;4730:10632:36;16049:29:53;;11312:460;;10786:996;;;;;;10385:1403::o;11312:460::-;11734:23;4730:10632:36;;;;;;11488:87:53;4730:10632:36;;11488:87:53;4730:10632:36;11434:250:53;4730:10632:36;10790:21:53;4730:10632:36;11488:87:53;;;;;;;;10671:10;11488:87;;;;:::i;:::-;4730:10632:36;16049:29:53;;:34;;11434:250;;:::i;10667:79::-;-1:-1:-1;4730:10632:36;;-1:-1:-1;;;;;10700:46:53:o;5309:1119::-;4730:10632:36;16049:29:53;;:34;;5527:91;;5309:1119;5523:109;;4730:10632:36;16049:29:53;;:34;;5646:89;;5309:1119;5642:107;;4730:10632:36;16049:29:53;;:34;;5763:107;;5309:1119;5759:158;;4730:10632:36;16049:29:53;;:34;;5943:129;;5309:1119;5926:169;;4730:10632:36;;;;;-1:-1:-1;4730:10632:36;;531:8:54;1246:24;6321:19:53;;5309:1119::o;6279:142::-;1249:13;6356:38;:42;;;;:64;;;6279:142;5309:1119;:::o;6356:64::-;531:8:54;4730:10632:36;;;;1246:24:54;5309:1119:53;:::o;5926:169::-;6083:12;;4730:10632:36;6083:12:53;:::o;5943:129::-;6011:61;4730:10632:36;16049:29:53;;:34;;5943:129;;5763:107;5812:58;4730:10632:36;16049:29:53;;:34;;5763:107;;5646:89;5686:49;4730:10632:36;16049:29:53;;:34;;5646:89;;5527:91;5568:50;4730:10632:36;16049:29:53;;:34;;5527:91;;1936:220:54;531:8;4730:10632:36;;;1246:24:54;2070:33;;2113:13;;;:::i;2070:33::-;2095:8;4730:10632:36;2095:8:54;:::o;2972:1278:37:-;4730:10632:36;3051:18:37;4730:10632:36;;;3093:21:37;4730:10632:36;;3085:44:37;3081:1163;;2972:1278;;:::o;3081:1163::-;3375:9;;;;;;3387:18;3375:30;;;3371:84;;4730:10632:36;;;;;;;;3586:64:37;;;;;;;;;;4730:10632:36;;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;4730:10632:36;3586:64:37;;;;;;;:::i;:::-;3508:156;;;4730:10632:36;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3586:64:37;4730:10632:36;;;;3744:9:37;4730:10632:36;;3744:30:37;;4730:10632:36;3740:53:37;;3586:64;3840:94;;4730:10632:36;;;4083:32:37;;;;4082:77;;;;4730:10632:36;-1:-1:-1;4082:151:37;;;4179:4;3081:1163;2972:1278::o;4082:151::-;;4730:10632:36;;3081:1163:37;2972:1278::o;4082:77::-;944:221:61;;;;;;;;;;;4082:77:37;;;3740:53;3776:17;4730:10632:36;3776:17:37;4730:10632:36;3776:17:37;:::o;3744:30::-;4730:10632:36;3586:64:37;4730:10632:36;;3757:17:37;3744:30;;4730:10632:36;;;;;3371:84:37;3407:35;4730:10632:36;668:96:49;;4730:10632:36;668:96:49;2962:271:110;4730:10632:36;;3594:52:110;3050:19;;3092:21;;3085:28;:::o;3046:181::-;4730:10632:36;3151:65:110;4730:10632:36;;;3151:65:110;;;;4730:10632:36;3151:65:110;;3210:4;3151:65;;;4730:10632:36;3151:65:110;;;;;;;4730:10632:36;3151:65:110;;;3144:72;;:::o;3151:65::-;;;4730:10632:36;3151:65:110;;4730:10632:36;3151:65:110;;;;;;4730:10632:36;3151:65:110;;;:::i;:::-;;;4730:10632:36;;;;;3144:72:110;:::o;3151:65::-;;;-1:-1:-1;3151:65:110;;11875:1687:53;;;;;4730:10632:36;12075:20:53;4730:10632:36;12126:22:53;;;;4730:10632:36;;;;;12162:10:53;:27;12158:104;;4730:10632:36;16049:29:53;;12273:1283;;11875:1687;;;;;;:::o;12273:1283::-;12351:86;722:23:109;12366:70:53;4730:10632:36;722:23:109;4730:10632:36;;531:8:54;4730:10632:36;722:23:109;4730:10632:36;;;;12366:70:53;;;;12126:22;12366:70;;;12162:10;12366:70;;;4730:10632:36;722:23:109;;;;4730:10632:36;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;722:23:109;;;4730:10632:36;;722:23:109;;;4730:10632:36;722:23:109;;;;;;;4730:10632:36;722:23:109;;;4730:10632:36;;722:23:109;;;4730:10632:36;722:23:109;;;;;;;;;;;;:::i;12366:70:53:-;12351:86;;:::i;:::-;12599:7;;4730:10632:36;;1246:24:54;12595:61:53;;12273:1283;4730:10632:36;16049:29:53;12742:804;;12273:1283;;;;;;;12742:804;4730:10632:36;1118:87:58;;;-1:-1:-1;1715:6:53;1879:67:108;;;4730:10632:36;;13200:332:53;;12742:804;13200:332;13307:34;13269:16;4730:10632:36;13269:16:53;;13307:34;;:::i;:::-;13367:48;;;;4730:10632:36;13380:16:53;;13367:48;13363:151;;13200:332;12742:804;;13363:151;13443:35;4730:10632:36;668:96:49;;4730:10632:36;668:96:49;13367:48:53;4730:10632:36;13399:16:53;;13367:48;;12595:61;842:82:58;;;;;-1:-1:-1;12595:61:53;;12158:104;-1:-1:-1;4730:10632:36;;-1:-1:-1;4730:10632:36;;-1:-1:-1;;;;;12191:71:53:o;4730:10632:36:-;;;;;;;;;;;;;;;;;;:::o;13648:1351:53:-;;;;;;;;4730:10632:36;;;13940:10:53;:27;13936:83;;1879:67:108;;;2052:73;;;14195:35:53;16049:29;4730:10632:36;16049:29:53;;14191:308;;13648:1351;14509:22;;;;;4730:10632:36;;;2052:73:108;4730:10632:36;14545:25:53;;;:52;;;13648:1351;14541:413;;13648:1351;14963:29;;;;13648:1351;:::o;14541:413::-;14922:21;14626:22;;;4730:10632:36;14626:22:53;;;4730:10632:36;14626:26:53;4730:10632:36;;;;14626:47:53;14625:199;;;;554:99:108;;;1879:67;554:99;;14625:199:53;14613:211;14922:21;;:::i;:::-;14541:413;;;;;14625:199;554:99:108;;;;1879:67;554:99;;14625:199:53;;14545:52;4730:10632:36;;2052:73:108;4730:10632:36;14574:23:53;;14545:52;;14191:308;14316:80;14270:218;4730:10632:36;;14270:207:53;4730:10632:36;14246:242:53;4730:10632:36;;;;;;1771:6:53;4730:10632:36;14316:80:53;;;;;;;;13940:10;14316:80;;;4730:10632:36;;;;;;1831:6:53;;;;;;4730:10632:36;;;1831:6:53;;;;;4730:10632:36;1831:6:53;;;4730:10632:36;;1831:6:53;;;;4730:10632:36;1831:6:53;;;4730:10632:36;1831:6:53;;;;4730:10632:36;;1831:6:53;;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;;4730:10632:36;1831:6:53;4730:10632:36;;;;;;;;;;;;;;;;:::i;14316:80:53:-;4730:10632:36;16049:29:53;;:34;;14270:207;;:::i;:218::-;14246:242;;:::i;:::-;14191:308;;;;;;;13936:83;13969:50;;;;;;;;;4730:10632:36;13969:50:53;:::o;6603:1251::-;6702:978;6603:1251;;;;;6702:978;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:10632:36;6702:978:53;;;;;;;;;577:85:58;;;4730:10632:36;;;7758:46:53;7754:93;;6603:1251::o;7754:93::-;7806:28;6702:978;668:96:49;;6702:978:53;668:96:49;6702:978:53;;;;;;;;;;;;;;;;;;;742:4029:52;;4730:10632:36;;;1348:131:52;;272:35:50;1348:131:52;;;;;;;;;;;;;1604:19;;;;4730:10632:36;;;1705:10:52;1701:161;;272:35:50;2193:79:52;;;4730:10632:36;;;;2653:31:52;2748:78;;;3665:1;4730:10632:36;3646:1:52;4730:10632:36;3645:21:52;4730:10632:36;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;3159:80:52;;;;4730:10632:36;3159:80:52;;;2344:129;;;;;;4730:10632:36;2344:129:52;;2898:66;3252:21;4730:10632:36;742:4029:52;:::o;1701:161::-;1735:82;;;;1834:13;:::o;742:4029::-;;4730:10632:36;;;1348:131:52;;;;;;;;;;;;;;;;1604:19;;272:35:50;1604:19:52;4730:10632:36;;;1705:10:52;1701:161;;272:35:50;2193:79:52;;2344:129;;;;;;2898:66;4730:10632:36;2344:129:52;;2898:66;;3252:21;742:4029;:::o;1701:161::-;1735:82;;;;;1834:13;:::o;742:4029::-;;4730:10632:36;;;1348:131:52;;;;;;;;;;;;;;;;1604:19;;349:27:51;1604:19:52;4730:10632:36;;;1705:10:52;1701:161;;349:27:51;2193:79:52;;2344:129;;;;;;4730:10632:36;;2344:129:52;;2898:66;;3252:21;742:4029;:::o;1701:161::-;1735:82;;;;;1834:13;:::o;742:4029::-;4730:10632:36;;;1348:131:52;;;;;;;;;;;;;;;;1604:19;;489:9:61;1604:19:52;4730:10632:36;;;1705:10:52;1701:161;;4730:10632:36;2193:79:52;489:9:61;2193:79:52;;2344:129;;;;;;4730:10632:36;;2344:129:52;;2898:66;;3252:21;4730:10632:36;742:4029:52;:::o;1701:161::-;1735:82;;489:9:61;1735:82:52;;;1834:13;:::o;742:4029::-;;4730:10632:36;;;1348:131:52;;349:27:51;1348:131:52;;;;;;;;;;;;;1604:19;;;;4730:10632:36;;;1705:10:52;1701:161;;349:27:51;2193:79:52;;;4730:10632:36;;;;2653:31:52;2748:78;;;3665:1;4730:10632:36;3646:1:52;4730:10632:36;3645:21:52;4730:10632:36;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;3159:80:52;;;;4730:10632:36;3159:80:52;;;2344:129;;;;;;4730:10632:36;2344:129:52;;2898:66;3252:21;4730:10632:36;742:4029:52;:::o;:::-;;4730:10632:36;;;1348:131:52;;;;;;;;;;;;;;;;1604:19;;;;4730:10632:36;;;1705:10:52;1701:161;;2193:79;;;;4730:10632:36;;;;2653:31:52;2748:78;;;3665:1;4730:10632:36;3646:1:52;4730:10632:36;3645:21:52;4730:10632:36;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;;;;3665:1:52;4730:10632:36;;3159:80:52;;;;4730:10632:36;3159:80:52;;;2344:129;;;;;;4730:10632:36;2344:129:52;;2898:66;3252:21;4730:10632:36;742:4029:52;:::o;1701:161::-;1735:82;;;;;1834:13;:::o;1968:1269:67:-;;;2393:838;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:1269::o;2393:838::-;;;;;;;;;;;2758:3937:68;2906:399;;;;;;;3391:269;;;;;5968:711;3916:13;3943:144;;;;;;;4104:13;4114:3;4104:13;;4100:83;;2758:3937;4211:3;4201:13;;4197:83;;2758:3937;4308:3;4298:13;;4294:83;;2758:3937;4405:4;4395:14;;4391:84;;2758:3937;4503:4;4493:14;;4489:84;;2758:3937;4601:4;4591:14;;4587:84;;2758:3937;3943:144;4689:14;;4685:84;;2758:3937;4797:5;4787:15;;4783:85;;2758:3937;4896:5;4886:15;;4882:85;;2758:3937;4995:5;4985:15;;4981:85;;2758:3937;5094:5;5084:15;;5080:85;;2758:3937;5193:6;5183:16;;5179:86;;2758:3937;5293:6;5283:16;;5279:86;;2758:3937;5393:6;5383:16;;5379:86;;2758:3937;5493:6;5483:16;;5479:86;;2758:3937;5593:7;5583:17;;5579:86;;2758:3937;5693:7;5683:17;;5679:85;;2758:3937;5792:7;5782:17;;5778:83;;2758:3937;5889:7;5879:17;5875:78;;2758:3937;-1:-1:-1;;5968:711:68;;2758:3937;5968:711;4503:4;5968:711;2758:3937;:::o;5968:711::-;;;;;5875:78;5920:25;4730:10632:36;;;3943:144:68;4730:10632:36;;5875:78:68;;5778:83;5823:30;4730:10632:36;;;3943:144:68;4730:10632:36;;5778:83:68;;5679:85;4730:10632:36;5724:32:68;4730:10632:36;3943:144:68;4730:10632:36;5679:85:68;;;5579:86;4730:10632:36;5624:33:68;4730:10632:36;3943:144:68;4730:10632:36;5579:86:68;;;5479;4730:10632:36;5523:34:68;4730:10632:36;3943:144:68;4730:10632:36;5479:86:68;;;5379;4730:10632:36;5423:34:68;4730:10632:36;3943:144:68;4730:10632:36;5379:86:68;;;5279;4730:10632:36;5323:34:68;4730:10632:36;3943:144:68;4730:10632:36;5279:86:68;;;5179;4730:10632:36;5223:34:68;4730:10632:36;3943:144:68;4730:10632:36;5179:86:68;;;5080:85;4730:10632:36;5123:34:68;4730:10632:36;3943:144:68;4730:10632:36;5080:85:68;;;4981;4730:10632:36;5024:34:68;4730:10632:36;3943:144:68;4730:10632:36;4981:85:68;;;4882;4730:10632:36;4925:34:68;4730:10632:36;3943:144:68;4730:10632:36;4882:85:68;;;4783;4730:10632:36;4826:34:68;4730:10632:36;3943:144:68;4730:10632:36;4783:85:68;;;4685:84;4730:10632:36;4727:34:68;4730:10632:36;3943:144:68;4730:10632:36;4685:84:68;;;4587;4730:10632:36;4629:34:68;4730:10632:36;3943:144:68;4730:10632:36;4587:84:68;;;4489;4730:10632:36;4531:34:68;4730:10632:36;3943:144:68;4730:10632:36;4489:84:68;;;4391;4730:10632:36;4433:34:68;4730:10632:36;3943:144:68;4730:10632:36;4391:84:68;;;4294:83;4730:10632:36;4335:34:68;4730:10632:36;3943:144:68;4730:10632:36;4294:83:68;;;4197;4730:10632:36;4238:34:68;4730:10632:36;3943:144:68;4730:10632:36;4197:83:68;;;4100;4730:10632:36;4141:34:68;4730:10632:36;3943:144:68;4730:10632:36;4100:83:68;;;3391:269;;-1:-1:-1;3391:269:68;;;;13091:432:64;13300:1;4730:10632:36;;;13288:13:64;:218;13300:1;;;10090:400;11771:51;10090:400;13320:84;10090:400;;;;;;;;;4730:10632:36;13300:1:64;4730:10632:36;;;11771:51:64;:::i;:::-;13320:84;:::i;13288:218::-;4730:10632:36;349:27:51;13490:4:64;4730:10632:36;13424:82:64;4730:10632:36;;;10090:400:64;;;;;;;;;11771:51;;;;:::i;:::-;11832:121;;;;;;13424:82;:::i;:::-;13300:1;4730:10632:36;13091:432:64;:::o;12309:::-;;12518:1;4730:10632:36;;;12506:13:64;:218;12518:1;;;4730:10632:36;12538:73:64;4730:10632:36;12538:84:64;4730:10632:36;12518:1:64;4730:10632:36;;;12538:73:64;;:::i;12506:218::-;4730:10632:36;12642:71:64;4730:10632:36;12642:82:64;4730:10632:36;;;12642:71:64;;:::i;383:313:55:-;466:224;;;;;;;383:313::o;7993:349:53:-;;8160:20;7993:349;8160:20;:::i;:::-;8271:12;;8267:26;;1118:87:58;;;7993:349:53;:::o;1039:380:108:-;1400:15;1039:380;1383:15;1152:204;;;;;;;1383:15;:::i;:::-;1152:204;;;;;;;1400:15;:::i;:::-;554:99;;;1152:204;554:99;;1039:380;:::o;7114:5443:68:-;7459:550;;;;;;;4730:10632:36;;8064:2:68;4730:10632:36;;;8142:164:68;;;;;;;;8319:148;;;;;;;;8480:140;;;;;;;;8633:136;;;;;;;;8782:134;4730:10632:36;8782:134:68;;;;;;;8929:133;;;;;;;;;9075;;8782:134;9075:133;;;;;;;9221:94;8319:148;;8480:140;8633:136;8782:134;8929:133;9075;9221:94;9333:10;9340:3;9333:10;;;9329:83;9340:3;;;4730:10632:36;;;;9329:83:68;9482:180;;;;;;4730:10632:36;9482:180:68;;9675;;;9482;9675;;4730:10632:36;9675:180:68;;9868;;;9482;9868;;4730:10632:36;9868:180:68;;10061;;;9482;10061;;4730:10632:36;10061:180:68;;10254;;;9482;10254;;4730:10632:36;10254:180:68;;10447;;;9482;10447;;4730:10632:36;10447:180:68;;10640;;;;9482;10640;;4730:10632:36;10640:180:68;;10833;;;;9482;10833;;4730:10632:36;10833:180:68;;11026;;;;9482;11026;;4730:10632:36;11026:180:68;;11219;;;;9482;11219;;4730:10632:36;11219:180:68;;11412;;;;9482;11412;;4730:10632:36;11412:180:68;;11605;;;;9482;11605;;4730:10632:36;11605:180:68;;11798;;;;;9482;11798;;4730:10632:36;11798:180:68;;11991:149;;;;;;11798:180;;;;;11605;;;;;11412;;;;;11219;;;;;11026;;;;;10833;;;;;10640;;;;;10447;;;;;10254;;;;;10061;;;;;9868;;;;;9675;;;;;9482;;;;;4730:10632:36;;;9465:2:68;4730:10632:36;9482:180:68;9675;9868;10061;10254;10447;10640;10833;11026;11219;11412;11605;11798;11991:149;12185:24;4730:10632:36;;;;9340:3:68;4730:10632:36;8929:133:68;4730:10632:36;;12379:39:68;4730:10632:36;9340:3:68;4730:10632:36;8929:133:68;4730:10632:36;12449:91:68;:17;;;:91;4730:10632:36;;;12449:91:68;;;7114:5443;:::o;12449:91::-;4730:10632:36;;;12479:26:68;;;:::i;:::-;4730:10632:36;12479:42:68;:61;;;7114:5443;:::o;12479:61::-;;;1831:6:53;:::o;9329:83:68:-;4730:10632:36;9402:3:68;4730:10632:36;;9329:83:68;;7459:550;;;;;;;489:9:61;;;;;;;:::o;:::-;;;;;;;;;;12207:8106:59;;4730:10632:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12362:22:59;4730:10632:36;;;12457:17:59;4730:10632:36;12457:17:59;;4730:10632:36;;12510:14:59;4730:10632:36;12510:14:59;;;4730:10632:36;;12568:102:59;4730:10632:36;;12568:102:59;4730:10632:36;;;;606:5:61;1751:117:113;;;599:12:61;12568:102:59;;4730:10632:36;12714:22:59;;4730:10632:36;;;;1371:93:113;;;4730:10632:36;;1551:98:113;4730:10632:36;1551:98:113;;;4730:10632:36;;;;12906:66:59;4730:10632:36;;;12919:25:59;;;4730:10632:36;12906:66:59;;4730:10632:36;;;;;;;;13171:20:59;;4730:10632:36;789:8:54;2331:24;;:29;789:8;;936;2523:27;2799:12;;;:::i;:::-;4730:10632:36;;;;;13337:70:59;;13327:80;12714:22;4730:10632:36;;12714:22:59;;4730:10632:36;13446:26:59;13487:11;;;;;;:51;;;13337:70;13483:125;;4730:10632:36;12714:22:59;;4730:10632:36;13622:27:59;13618:91;;-1:-1:-1;;4730:10632:36;;;;13754:24:59;;1371:93:113;4730:10632:36;;;1371:93:113;;;13754:53:59;;;13750:190;;-1:-1:-1;4730:10632:36;1371:93:113;4730:10632:36;1471:10:68;13957:51:59;;;13953:157;;13720:790;;4730:10632:36;;;;1471:10:68;4730:10632:36;;;;;;;;;;;;;;;;1471:10:68;;;4730:10632:36;;1471:10:68;;;;4730:10632:36;;1471:10:68;;;;4730:10632:36;;1471:10:68;;;;4730:10632:36;;1471:10:68;;;;4730:10632:36;;1471:10:68;;;;4730:10632:36;;1471:10:68;;;;14675:4675:59;4730:10632:36;;14684:35:59;:85;;;;14675:4675;14682:88;;1371:93:113;4730:10632:36;14811:18:59;;4730:10632:36;;;;;;14945:10:59;;4730:10632:36;1551:98:113;4730:10632:36;;;1551:98:113;4730:10632:36;14896:92:59;847:286:67;4730:10632:36;847:286:67;;;;;;;4730:10632:36;;;4284:1659:67;4730:10632:36;;;1567:139:67;4730:10632:36;1567:139:67;;4730:10632:36;;14896:15:59;4468:1:67;4730:10632:36;;4535:13:67;1567:139;;;4730:10632:36;;-1:-1:-1;4730:10632:36;14896:15:59;4730:10632:36;;;;-1:-1:-1;4730:10632:36;272:35:50;;;;4730:10632:36;;4535:20:67;4710:11;;;;;;4860:194;;;;;;4930:34;;4730:10632:36;;;;766:7:68;805:40:47;;810:35;4730:10632:36;805:40:47;;;801:114;;4860:194:67;932:24:47;;937:19;1551:98:113;932:24:47;;;928:96;;4860:194:67;1046:11:47;1041:16;;;1037:88;;4860:194:67;1147:7:47;1142:12;;;1138:84;;4860:194:67;1244:5:47;1239:10;;;1235:80;;4860:194:67;1337:4:47;1332:9;;;1328:79;;4860:194:67;1429:3:47;1424:8;;;1420:78;;4860:194:67;1515:8:47;;1511:20;;4860:194:67;4730:10632:36;;1551:98:113;4730:10632:36;489:9:61;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;4860:194:67;4284:1659;;4730:10632:36;;;1471:10:68;;;4730:10632:36;1551:98:113;4730:10632:36;1471:10:68;4730:10632:36;1471:10:68;;;4730:10632:36;15120:34:59;;15116:106;;4284:1659:67;926:6:68;4730:10632:36;1471:10:68;;;4730:10632:36;1551:98:113;4730:10632:36;15239:34:59;;15235:106;;4284:1659:67;1471:10:68;1371:93:113;4730:10632:36;1471:10:68;15426:42:59;4730:10632:36;1471:10:68;;;4730:10632:36;1551:98:113;4730:10632:36;15426:42:59;:::i;:::-;4730:10632:36;1471:10:68;;4730:10632:36;1471:10:68;;;4730:10632:36;14811:18:59;4730:10632:36;;15813:24:59;1371:93:113;4730:10632:36;15813:24:59;;4730:10632:36;;;;;;1166:695:66;;;;;;;;15856:15:59;;4730:10632:36;;15856:15:59;;4730:10632:36;;;;15672:286:59;4730:10632:36;;;;1371:93:113;4730:10632:36;;3397:41:66;;;3467:19;4730:10632:36;3467:19:66;;3501:2982;4730:10632:36;;;;489:9:61;4730:10632:36;3585:81:66;4730:10632:36;;;;3585:81:66;:::i;:::-;3695:230;;;;;3728:87;;;;;:::i;:::-;3695:230;;3947:34;;;;;-1:-1:-1;1371:93:113;;-1:-1:-1;4140:156:66;;;489:9:61;4140:24:66;;489:9:61;;4140:156:66;;;;3943:1029;;5001:228;;;10090:400:64;11771:51;10090:400;;;4730:10632:36;10090:400:64;;;;;11771:51;;:::i;:::-;3501:2982:66;;4730:10632:36;1471:10:68;;;4730:10632:36;;1471:10:68;;;4730:10632:36;;1471:10:68;;;4730:10632:36;;;14811:18:59;;4730:10632:36;15973:625:59;;;;;16074:25;4730:10632:36;1471:10:68;;;;16074:25:59;:::i;:::-;4730:10632:36;;;;;;16160:22:59;;4730:10632:36;;1471:10:68;16185:43:59;16186:30;4730:10632:36;1471:10:68;;;;4730:10632:36;1471:10:68;;;;16186:30:59;;:::i;16185:43::-;1471:10:68;4730:10632:36;1471:10:68;;;;;;;;;;;;;;;;;;;4730:10632:36;15973:625:59;4730:10632:36;;;16729:613:59;;15973:625;4730:10632:36;;15856:15:59;;4730:10632:36;;17401:19:59;17397:205;;15973:625;14811:18;1371:93:113;4730:10632:36;14811:18:59;;4730:10632:36;;1371:93:113;4730:10632:36;1471:10:68;;;4730:10632:36;;17675:43:59;;17671:1669;1371:93:113;;;1471:10:68;4730:10632:36;1471:10:68;;;4730:10632:36;17809:835:59;;17671:1669;4730:10632:36;;;1471:10:68;;;4730:10632:36;1551:98:113;4730:10632:36;489:9:61;1551:98:113;4730:10632:36;;14945:10:59;;4730:10632:36;14675:4675:59;;17809:835;4730:10632:36;;;;18572:53:59;17954:25;;4730:10632:36;17954:25:59;;1471:10:68;17981:25:59;28339:10;1551:98:113;17981:25:59;;4730:10632:36;17916:172:59;;4730:10632:36;1471:10:68;;;4730:10632:36;1551:98:113;4730:10632:36;;;-1:-1:-1;4730:10632:36;28339:10:59;4730:10632:36;;;-1:-1:-1;4730:10632:36;28421:26:59;;;;4730:10632:36;;;;;;;1551:98:113;28513:26:59;;4730:10632:36;;;;;;;;;;;;;18465:44:59;;17916:172;4730:10632:36;15856:15:59;4730:10632:36;;;18572:53:59;:::i;:::-;4730:10632:36;;15856:15:59;;4730:10632:36;17809:835:59;;18465:44;4730:10632:36;;;;;;;;18465:44:59;;17916:172;4730:10632:36;18572:53:59;18035:25;;;;;4730:10632:36;18062:25:59;28339:10;4730:10632:36;18062:25:59;;1471:10:68;17916:172:59;;;17671:1669;1371:93:113;19103:22:59;;4730:10632:36;;19081:44:59;;19077:263;;17671:1669;;14675:4675;;19077:263;19278:47;;;:::i;:::-;1551:98:113;4730:10632:36;;14945:10:59;;4730:10632:36;19077:263:59;;;17397:205;17501:68;1471:10:68;4730:10632:36;1471:10:68;;;;17501:68:59;:::i;:::-;4730:10632:36;17472:25:59;;1471:10:68;;;272:35:50;4730:10632:36;;17397:205:59;;;16729:613;1471:10:68;489:9:61;4730:10632:36;1471:10:68;;;;4730:10632:36;;;1471:10:68;4730:10632:36;1471:10:68;;;;272:35:50;4730:10632:36;489:9:61;1471:10:68;;4730:10632:36;1471:10:68;;;;4730:10632:36;;1471:10:68;;;4730:10632:36;272:35:50;16729:613:59;;;15973:625;16429:43;4730:10632:36;1471:10:68;;;;4730:10632:36;1471:10:68;;;;272:35:50;16429:43:59;:::i;:::-;4730:10632:36;;272:35:50;4730:10632:36;;;16533:22:59;;:50;4730:10632:36;;16558:25:59;4730:10632:36;1471:10:68;;;;16558:25:59;:::i;:::-;16533:50;;:::i;:::-;4730:10632:36;;15973:625:59;;5001:228:66;5143:86;;;:::i;:::-;5001:228;;4140:156;4226:70;;;;:::i;:::-;4140:156;;3943:1029;6529:222:64;;;;;;;;;;;;;1371:93:113;;6834:190:64;;;;6859:74;;;;;:::i;:::-;6834:190;;4343:172:66;;4548:234;;;;;;4585:85;;;:::i;:::-;4537:245;4730:10632:36;;;;3943:1029:66;;;4548:234;10090:400:64;;;;4730:10632:36;10090:400:64;;;;;4777:4:66;349:27:51;11771:51:64;;;;:::i;:::-;11832:121;;;;;;;4548:234:66;;6834:190:64;4879:42;;4880:28;;4671:27;;;4730:10632:36;;4721:47:64;4730:10632:36;;;;;309:2:51;4730:10632:36;4721:47:64;:::i;:::-;4730:10632:36;;;4880:28:64;:::i;:::-;4879:42;:::i;:::-;6834:190;;;4671:172;4791:52;4730:10632:36;;;;4791:52:64;;:::i;:::-;4671:172;;6529:222;;4730:10632:36;6529:222:64;;;;3695:230:66;10090:400:64;;;;4730:10632:36;10090:400:64;;;;;3920:4:66;349:27:51;11771:51:64;;;;:::i;:::-;11832:121;;;;;;;3695:230:66;;;3501:2982;5280:232;;;;;;;;;;11771:51:64;10090:400;;;;4730:10632:36;10090:400:64;;;;;11771:51;;:::i;:::-;5280:232:66;;5534:37;;;;;5660;;1371:93:113;5660:37:66;6398:70;5660:37;5530:516;;;6074:226;;;6107:85;;;;;:::i;:::-;6063:237;4730:10632:36;;489:9:61;4730:10632:36;6398:70:66;;:::i;:::-;3501:2982;;6074:226;349:27:51;10090:400:64;6295:4:66;10090:400:64;;;4730:10632:36;10090:400:64;;;;;11771:51;;;;:::i;:::-;11832:121;;;;;;6074:226:66;;5530:516;5831:36;;;;7883:222:64;;;;;;;8182:194;;;;4730:10632:36;4989:27:64;;4730:10632:36;;309:2:51;4730:10632:36;;;;605:78:70;;;;;;;;4989:205:64;;5305:228;;;;;;4730:10632:36;;6398:70:66;4730:10632:36;;;;;;;8182:194:64;5530:516:66;;;;5305:228:64;;4730:10632:36;5305:228:64;;;;4989:205;4730:10632:36;;;5204:25:52;;349:27:51;5204:25:52;;:::i;:::-;5247;;;;;349:27:51;5247:25:52;;5243:90;;4989:205:64;;;;5243:90:52;4730:10632:36;;5305:12:52;5243:90;4730:10632:36;;;;8182:194:64;8300:76;;;6398:70:66;8300:76:64;;1371:93:113;8300:76:64;;:::i;:::-;8182:194;;5280:232:66;5424:88;;;;;:::i;:::-;5280:232;;;15235:106:59;926:6:68;4730:10632:36;1471:10:68;;;4730:10632:36;15235:106:59;;15116;766:7:68;4730:10632:36;1471:10:68;;;4730:10632:36;15116:106:59;;1511:20:47;4730:10632:36;4468:1:67;4730:10632:36;;;;1511:20:47;;;1420:78;4730:10632:36;;;;;;;;1420:78:47;;1328:79;1367:1;4730:10632:36;;;;;;;1328:79:47;;1235:80;1567:139:67;4730:10632:36;;;;;;;1235:80:47;;1138:84;1180:2;4730:10632:36;;;;;;;1138:84:47;;1037:88;4730:10632:36;;;;;;;;1037:88:47;;928:96;4730:10632:36;;;;;;;;928:96:47;;801:114;4730:10632:36;;-1:-1:-1;4730:10632:36;;;-1:-1:-1;1551:98:113;801:114:47;;4860:194:67;4730:10632:36;;766:7:68;4730:10632:36;1551:98:113;4730:10632:36;489:9:61;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;4860:194:67;;4284:1659;4730:10632:36;;;;;1551:98:113;4730:10632:36;1567:139:67;14896:15:59;1567:139:67;4730:10632:36;1567:139:67;5398:13;1567:139;;;4730:10632:36;;;;14896:15:59;4730:10632:36;;;;;;;;;;;;5343:20:67;4730:10632:36;;5398:20:67;5565:11;;;;;;5715:213;;;;;;5776:35;;4730:10632:36;;766:7:68;;4730:10632:36;;;;;2195:21:47;;:25;4730:10632:36;;2240:8:47;;4730:10632:36;2191:120:47;4730:10632:36;2328:20:47;;:24;4730:10632:36;;;;;;2324:117:47;4730:10632:36;2458:20:47;;:24;4730:10632:36;;;;;;2454:117:47;4730:10632:36;2588:20:47;;:24;4730:10632:36;;;;;;2584:117:47;2718:19;;;:23;4730:10632:36;;;;;;2714:114:47;2849:3;2845:7;;:11;2849:3;;4730:10632:36;;;;2841:102:47;12510:14:59;2960:7:47;;:11;12510:14:59;;4730:10632:36;;;;;;2956:102:47;;3075:7;3071:23;;2956:102;4730:10632:36;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;5715:213:67;4284:1659;;;3071:23:47;4730:10632:36;;;;3071:23:47;;2956:102;4730:10632:36;;;1551:98:113;4730:10632:36;2956:102:47;;2841;4730:10632:36;2927:1:47;4730:10632:36;2841:102:47;;;2714:114;4730:10632:36;1567:139:67;4730:10632:36;2714:114:47;;;2584:117;4730:10632:36;2684:2:47;4730:10632:36;2584:117:47;;;2454;4730:10632:36;;;2454:117:47;;;2324;4730:10632:36;;;2324:117:47;;;2191:120;4730:10632:36;;;-1:-1:-1;2191:120:47;;5715:213:67;766:7:68;4730:10632:36;;;;;;;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;;1551:98:113;4730:10632:36;5715:213:67;;14682:88:59;;;;;;;;;;;;;;4730:10632:36;19392:10:59;;4730:10632:36;;2447:157:113;;;2211:131;1371:93;4730:10632:36;19420:18:59;;4730:10632:36;;2211:131:113;;;;4730:10632:36;;;;19514:15:59;;4730:10632:36;;19496:33:59;;;19492:71;;14675:4675;-1:-1:-1;4730:10632:36;;;;1551:98:113;4730:10632:36;19669:25:59;;1471:10:68;19641:25:59;;4730:10632:36;19610:179:59;4730:10632:36;19827:24:59;4730:10632:36;;19971:68:59;4730:10632:36;19916:33:59;4730:10632:36;19916:22:59;;4730:10632:36;19916:33:59;:::i;:::-;12714:22;;4730:10632:36;;;;;19971:68:59;:::i;:::-;4730:10632:36;554:99:108;;4730:10632:36;554:99:108;;19823:474:59;12207:8106::o;19823:474::-;4730:10632:36;12714:22:59;4730:10632:36;;;20141:68:59;;4730:10632:36;20141:68:59;:::i;:::-;20231:33;4730:10632:36;20231:22:59;;4730:10632:36;20231:33:59;:::i;19610:179::-;19725:25;4730:10632:36;19753:25:59;;1471:10:68;19725:25:59;;4730:10632:36;19610:179:59;;19492:71;4730:10632:36;;;12510:14:59;;;4730:10632:36;;;12510:14:59;;;4730:10632:36;19492:71:59;;;14684:85;14723:18;1371:93:113;4730:10632:36;14723:18:59;;4730:10632:36;;1371:93:113;4730:10632:36;14745:24:59;;4730:10632:36;;14723:46:59;14684:85;;13953:157;14028:30;4730:10632:36;938:127:49;;;;4730:10632:36;938:127:49;13750:190:59;1833:162:49;13827:34:59;4730:10632:36;1833:162:49;1371:93:113;;1833:162:49;;;;;4730:10632:36;1833:162:49;13720:790:59;4730:10632:36;14144:24:59;;1371:93:113;4730:10632:36;;;1371:93:113;;;14144:53:59;;;14140:190;;-1:-1:-1;4730:10632:36;1371:93:113;4730:10632:36;1651:49:68;14347:51:59;;;14343:157;;13720:790;;;13618:91;13651:58;;;;;;;;;;;;;;4730:10632:36;13651:58:59;4730:10632:36;13651:58:59;;;:::o;13483:125::-;13554:30;4730:10632:36;668:96:49;;4730:10632:36;668:96:49;13487:51:59;4730:10632:36;1063:7:54;4730:10632:36;;;13503:34:59;13487:51;;13337:70;4730:10632:36;;;;1618:238:61;;;;;;;;;;4730:10632:36;;;;1618:238:61;;13337:70:59;;;13171:141;1958:105:113;;;;4730:10632:36;1958:105:113;13171:141:59;;12906:66;1551:98:113;12947:25:59;;4730:10632:36;12906:66:59;;;12568:102;4730:10632:36;;;;;;12568:102:59;;;1674:140:63;4730:10632:36;1748:14:63;;;1744:36;;269:215;4730:10632:36;269:215:63;;;;8934:1009:64;;4730:10632:36;;;;;;9144:29:64;9140:98;;8934:1009;9327:213;;;;4730:10632:36;9706:220:64;9757:64;9706:220;4730:10632:36;;;;;;309:2:51;;4730:10632:36;;309:2:51;4730:10632:36;;9757:64:64;:::i;:::-;4730:10632:36;;605:78:70;;;;;;;;8934:1009:64;:::o;9327:213::-;;;;;;;9140:98;9208:30;9175:63;9140:98;;;8934:1009;;4730:10632:36;;;;;;9144:29:64;9140:98;;8934:1009;9327:213;;;;9856:54;4730:10632:36;9706:220:64;9856:70;9706:220;4730:10632:36;;;;;;309:2:51;;4730:10632:36;;309:2:51;4730:10632:36;;9856:54:64;:::i;:::-;4730:10632:36;;9856:70:64;;:::i;9140:98::-;;;;5053:296:52;;;;5204:25;;;;;:::i;:::-;5247;;;;;;5243:90;;5053:296::o;5243:90::-;4730:10632:36;;;5305:12:52;;;4730:10632:36;;5053:296:52:o;1549:1888:64:-;;1845:11;;1841:32;;4730:10632:36;;309:2:51;4730:10632:36;;;;;;;;;2965:285:64;;;;;;;;;;;;3334:72;4730:10632:36;3334:60:64;4730:10632:36;;;3334:60:64;;:::i;2965:285::-;;1960:1471;2965:285;;;;1841:32;1858:15;;;;:::o;1549:1888::-;;;1845:11;;1841:32;;4730:10632:36;;;;309:2:51;4730:10632:36;;;;;;;2068:16:64;;;;;:::i;:::-;:28;2064:345;;1549:1888;2540:21;;;2539:32;2540:21;;;:::i;:::-;2539:32;:::i;:::-;605:78:70;;;;;;;;4730:10632:36;1549:1888:64;:::o;2064:345::-;272:35:50;;2188:25:64;;;2064:345;2184:207;2307:60;;;;;:::i;:::-;4730:10632:36;2292:76:64;:::o;663:142:63:-;744:8;739:13;;;735:36;;4730:10632:36;;663:142:63;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "48493": [
        {
          "start": 13038,
          "length": 32
        }
      ],
      "49681": [
        {
          "start": 14203,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_TICK_SPACING()": "60460f06",
    "MIN_TICK_SPACING()": "07eff0dd",
    "allowance(address,address,uint256)": "598af9e7",
    "approve(address,uint256,uint256)": "426a8493",
    "balanceOf(address,uint256)": "00fdd58e",
    "burn(address,uint256,uint256)": "f5298aca",
    "collectProtocolFees(address,address,uint256)": "8161b874",
    "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
    "extsload(bytes32)": "1e2eaeaf",
    "extsload(bytes32,uint256)": "35fd631a",
    "extsload(bytes32[])": "dbd035ff",
    "exttload(bytes32)": "f135baaa",
    "exttload(bytes32[])": "9bf6645f",
    "initialize((address,address,uint24,int24,address),uint160,bytes)": "695c5bf5",
    "isOperator(address,address)": "b6363cf2",
    "mint(address,uint256,uint256)": "156e29f6",
    "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
    "owner()": "8da5cb5b",
    "protocolFeeController()": "f02de3b2",
    "protocolFeesAccrued(address)": "97e8cd4e",
    "setOperator(address,bool)": "558a7297",
    "setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
    "setProtocolFeeController(address)": "2d771389",
    "settle(address)": "6a256b29",
    "supportsInterface(bytes4)": "01ffc9a7",
    "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
    "sync(address)": "a5841194",
    "take(address,address,uint256)": "0b0d9c09",
    "transfer(address,uint256,uint256)": "095bcdb6",
    "transferFrom(address,address,uint256,uint256)": "fe99049a",
    "transferOwnership(address)": "f2fde38b",
    "unlock(bytes)": "48c89491",
    "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"controllerGasLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProtocolFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCannotBeFetched\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"slot\":\"Key of slot to start sloading from\"},\"returns\":{\"_0\":\"The value of the sload-ed slots concatenated as dynamic bytes\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"_0\":\"List of loaded values\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDelta\",\"params\":{\"hookData\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal and fee deltas.\",\"feesAccrued\":\"feeDelta The balance delta of the fees generated in the liquidity range. Returned for informational purposes.\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract.\"},\"take(address,address,uint256)\":{\"details\":\"Can also be used as a mechanism for _free_ flash loans\"},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"}},\"unlock(bytes)\":{\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"result\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}}},\"title\":\"PoolManager\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual()\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"InvalidProtocolFee()\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"NonZeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCannotBeFetched()\":[{\"notice\":\"Thrown when not enough gas is provided to look up the protocol fee\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge()\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall()\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"MAX_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the maximum tickSpacing for an initialized pool key\"},\"MIN_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the minimum tickSpacing for an initialized pool key\"},\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the pool with the given pool key\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160,bytes)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle(address)\":{\"notice\":\"Called by the user to pay what is owed\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All operations go through this function\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Holds the state for all pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":44444444},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"src/ERC6909.sol\":{\"keccak256\":\"0x2dc84b92157a72aec9774eab7c3736167b3be615e1bbe099472ad0f79c29a434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://313db602f0966d9baeebb63b7fe1b0c03bf18ce3d17c12cde55d8e4f432173b8\",\"dweb:/ipfs/QmdkPfEwejJurAtprzw5gFchsVQnbEnZoAYsAwbzTy1Jzc\"]},\"src/ERC6909Claims.sol\":{\"keccak256\":\"0x01e60843bb613a97c4ad83eec2a6f93c8358164d5aff9c1c49620cdb7e3211e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8001f8cdffac6a8ba47867716417932df0e7445df71a8be600ef6cf35f898b5\",\"dweb:/ipfs/QmXXbPXkuRtccUc14hhSA5AYci3XK4xrfQMr6Y9FCKikXb\"]},\"src/Extsload.sol\":{\"keccak256\":\"0x6b79a1d2a9c5a771c0be1e45f7996e14112025f62e136b94e36b3d69cc41053e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06a9eb434c55c7b5ab3830ec65bf12f5395dd000612f5fc9aaf63d8207d8053d\",\"dweb:/ipfs/QmVq8Z4MgQ9xwGP25ivHPxNsCL4D1DcojZtSF7rCbzwrR7\"]},\"src/Exttload.sol\":{\"keccak256\":\"0x50e053b1bdca8dc083ddba68a77bbd84700a917ce8c51444dbfdce8f33a9f142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03d75c7eb3e3310f2c1e34711c848abef07384e7aaa910fa80f7ebf37e596c85\",\"dweb:/ipfs/QmZE4agCboEXkpT6ckGJzqiJUsjRKNy86WmC2i6qyNWV9X\"]},\"src/NoDelegateCall.sol\":{\"keccak256\":\"0x4f7c0ba314f43027e0ec628eaf921512da16c2156122f0de0f6624c1a09be5c2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d419fdf56d18844bf1e0a004e883b4b2bb327ae0c14f5246d6b31df9b0b1db28\",\"dweb:/ipfs/QmWiNPDSNop6Wpkdzs7JCkzdCmayWZfK7Zhxixqi7n5dnR\"]},\"src/PoolManager.sol\":{\"keccak256\":\"0xa8292e20ff413be4951717f36a6e96f4f21a556fef8636aca6cfb6a987772cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0dda3973cb22e5454d75d9fa958698d7c7c901ddb59c387de4768f44eac37ee5\",\"dweb:/ipfs/QmbKwrBJ82C4rKd8pZj8r6uWYR3cEegnijM7Hq2m3vJTan\"]},\"src/ProtocolFees.sol\":{\"keccak256\":\"0xf68b9a041074b2517e7a775ffa6468818b34e8f479b29de1ae946f37e91f6df4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ddb19dcfecee21ddd2b4ffc15eded251fe1a67428affccade423fc1c78e1fe2\",\"dweb:/ipfs/QmRq5Qw4LMiRZwMGKgHdX6d4Mbmi74xmoL7prLCQ1T113g\"]},\"src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x5457e68d4c21dd247bf5e3bea59df3372b197afb1856130b3512e101269742c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7ebfb1bea371ec76f2d8d9cdb5729176cd56432f20284042c8bd303c9b6221\",\"dweb:/ipfs/QmaP2NLoyYmB1nxEU3RAEP7Q6AJBdLvjaGgfihLVXcuWgz\"]},\"src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc70fcba06b34aa85a53476b251c60a72272ebf83784e39fd9f0a3a75977585a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b20481fe84db25f9bb896bb7afd1e6a6dfc70b6d4a67d9d1f282fb1214bd2f10\",\"dweb:/ipfs/QmNhDbqgSdhx9Bbtifk5YX6Dpj8yKKKJf75y7JijYPDrF1\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x8751728dcb4923b86dbd7523e7a5a515177255bf64d6d95daaa00d510e97fb75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92e9a4932961ec52fbca3fc3dd1704ac9c30541cfea7884c1d00a44632102bca\",\"dweb:/ipfs/QmZWFtusFQLK9kXJLGWEMEHgV8LtvX9cKomqncF2mscJro\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xcfc4084f2519a4768a974a2b3a577866949674e76e10cc55f0e00ec6a910d38d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://769a40fded9d60d41a1443ad7a33b92972d7d0de8e93325ee90de6a35e2d85de\",\"dweb:/ipfs/Qmbp5sPXTBDaRTJq5cggW7JpPGvNp3REkFUAS2dxh4xcwn\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x0a48b2b660ef63aa520640bd7a80fdf7cf1fd19a268f155b029e5ca31b8ae4a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2a74397cc05a7c32347c2bc63ab7dd4a7b436c7bb48b7e1910bc33a550f8116\",\"dweb:/ipfs/QmXd91nmFT87pZc5DkZD4wQ6E2exLNAMkm2qCrCBN12de3\"]},\"src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x78eb297b0e978d1b8217292a818d69ecfc403b4a3562d2eb9dfd7f1b781dc38b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9abdc8e151e8bceb40d3667fc0345cd69b7379725f720490401ad3775527bf68\",\"dweb:/ipfs/QmNoHFjChTCoC4a2TvomtGssddq7j2Rga4mrSwFm1VQ6My\"]},\"src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0xe413ff595dadedfeff672247031151c309f15a104b7ed03a51400e50c337d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1558caec33b3af1e3b8080973cd1f7f2e4f1483b06c31dbb84cdc2414b1f5a1e\",\"dweb:/ipfs/QmYgQXpMTvb3ZJex1s61QKZQ9WRRqFg6HRiYndgPh7yKT1\"]},\"src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0x1d53aa307e997fd73e1a31abe1052aad574994627958399375f760b8a750afbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c308d1aba00f3f834357cea75e03a64eba3da425eb31ed6bd4a9e56ada606b79\",\"dweb:/ipfs/Qmb8fuGxpw1JRRFdXUF9U2Una6msqYFTXMvw6ULPHpJ4ow\"]},\"src/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"src/libraries/CurrencyDelta.sol\":{\"keccak256\":\"0x3dc9a88b6a4dd6b13be2104018cfc147a04306ec33fc0a0bede908075f87f77e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://10560109fac2964b3216c1e050a50b7809cd71ea0f3ef8908f2738d02f729972\",\"dweb:/ipfs/QmPVapqjwitBYx4gMTdpU74hqyr4qCC4g4WG57hLkdqizq\"]},\"src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x6145de1be2f003010ee01c6a757df5ca7478d1e52e813be72f9fcbc085aaee7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0d3909cfdb0760c949923ec21e4e84ec69a9cd3ed442a3d1de1c52e759a1941\",\"dweb:/ipfs/QmUMULa3nPjXRHM6WvB99s1MovpxjViqCYMGqfYdBAygJt\"]},\"src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x480e1e2741db0d1d5843c81d25576f182f64db9b92788ccbfc321a05d726f5e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5c9606989f6487189a70e383f88ec0b203f8232c6e901e51e421113008959fd\",\"dweb:/ipfs/QmeHAmfavKjLtcd1J53Bs9WbknH3jLZfmU9NeaUZCHCJwY\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xd3ea568983da6839d990f7a16d6dd550af453e2e1648520b3e90f4f943bc5fc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66cda3b273e0076bb56db1b6e2bd77dacab2698d93ee4f2e58b375d29311d136\",\"dweb:/ipfs/QmWnuYKy4yNPFPqzTYMBTP8LZ6qjo2HSW8i28kHHq6MsgB\"]},\"src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0x33f69b500fd414cdb9856d9e623d085f8a15a8d3a9570ac6339514c800d077bf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c45ed697cee974ecd23cdd1995fb837cf6e8a9b18a57c1d5edfbd0e60a61e68c\",\"dweb:/ipfs/QmTNrppHysZU3WLt4TtFJmQ9CRbVUbk2Nfu6qoKiVCom2P\"]},\"src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xbc2517423ae0689a1474a18598f9ec3406e511c45edf7886c64bf2f79af02904\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ca4c718964675bba2d30215d5e1a23575c5265c856474feaad2895fe908a755\",\"dweb:/ipfs/Qmc6TqHB5zxtk1EFeqVXu6BaZy7MwcWQz6n8tT1U6QMHDE\"]},\"src/libraries/Lock.sol\":{\"keccak256\":\"0x81ac57403e171199195c129934b49313f5f37a23f0295f435c673bbf5b326d13\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f985a2256c4e8011f0a717fc8829c4b40f8513363d031ca0e4e92f0d998080e3\",\"dweb:/ipfs/Qmb8Lb2LcbguFXqsiv546L22ewqRrFncuJVNY771L5NG9F\"]},\"src/libraries/NonZeroDeltaCount.sol\":{\"keccak256\":\"0x6658cd1b79b5018a21e79c3dfb80af3651b0f3d432dbc88798df327b1ac720d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cee26426d2f60d6df169dac1a14189ef24ae0cf2d8be2363c2f86fc0b61f3d34\",\"dweb:/ipfs/QmbyghFMioEw1hdNMGovjYJBsCVJ3hCG2ghTEDRR55vtLF\"]},\"src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x4ebd68d279f329cb8fa090b106c02828a536d21329af65aa6ca3e2eb039664da\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4095e7aa0baf5a0a15acc7232628f49205de9c34962d2fa4b88ecc5c29d09de1\",\"dweb:/ipfs/QmVKAAr8eRGJ9EA4TXLATBbfh7SKEaLgVfBGeni93SZHGP\"]},\"src/libraries/Pool.sol\":{\"keccak256\":\"0x5872d9930358dba79a19efacdf3993b541be408fbd8c301c23f0e4b344d2cec2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db6532f4eb1052a9df508d90ff070f67581c83be13e2e4a03062392ff22559a1\",\"dweb:/ipfs/QmSJX5Xzh38Zq1pGVmmS2239LocRdeYMmxi7TiEdeLzpUo\"]},\"src/libraries/Position.sol\":{\"keccak256\":\"0x3c7a61e8249fed5e3d6cb13a5648e1bd13b93b74fa2ebf6d0c08cefb1248e499\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://628fc59ba05b4f2427ae7c7d0882f2b89c1375aa4eef1854d5965682aeab475b\",\"dweb:/ipfs/QmTbBsaDRosy72UBcxpUWkFVeRW5CzuDBt8ufvPyUkA3Kn\"]},\"src/libraries/ProtocolFeeLibrary.sol\":{\"keccak256\":\"0xfe57793436b42e73edaf9281dbf170a03169e17123916dcaedc6bf6c63ed85cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://be1430384e13155a63ae88732b6f562fe482b3d182bba352f5ae2d17d2edd382\",\"dweb:/ipfs/QmeKZZNByL2Z6f1mJYZeztjkFKYddYpTQKkPuMMj9M67e2\"]},\"src/libraries/Reserves.sol\":{\"keccak256\":\"0xf761387927a68d8ea63bed6d648579534271fcf6eb8f3d8d3dc4f251053e0a10\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://04d839d44cf2898063547ba4ecdeb32c0683bb0ac570a42479caed0d1b3f9457\",\"dweb:/ipfs/Qmenf3yDkNy8ZiKwGVDZyh4JKsBb5XgTH6xFfxXMw4Ce24\"]},\"src/libraries/SafeCast.sol\":{\"keccak256\":\"0x4876713bb40c7cc68c66d1a09d5dd0a2725fda7bc803e6c29417363b61fff61d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://812a44f15aeecf2b374d7cd5a1cc35f87ca9c7694e85cfebf9e3c50c35ae4cd5\",\"dweb:/ipfs/QmTMmrTj3XZDHVHQHGE1S6961vfvWsgwrxp4JEXCfpy7wM\"]},\"src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xbdb51515e1335ec4553f179d1b6d598b456ec238cd33a31da1c1f5dbeb1e2f15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58f704ea0ab4fb4acea00ef78e91e9bba4d8f6840ee2be0833938e2966cbb9e7\",\"dweb:/ipfs/QmWmDPEsxjWHKNyHjNBANULPxLqACqY8hQdY5pEQv8NNVy\"]},\"src/libraries/SwapMath.sol\":{\"keccak256\":\"0xf0fc6e250b4f3d77d91ca2cb7ad26d0c4753656a5f567db53a602fbbe7fd1b19\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9624972f1c1a2465ff0ae8499cb5dbb80f97e3b669b1735fd84f7d587a9d8701\",\"dweb:/ipfs/QmXyDscxpznmg1AXhQap1ZWarv8XikPHpB2VBXWCJybuv4\"]},\"src/libraries/TickBitmap.sol\":{\"keccak256\":\"0xda36bb40752429644753ce775fc3042712c1f672e7c19bedbf9a79562ce70496\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2699acca300cb9801a143994a2e041cb1cb820b6c02120025ef89839e9902df\",\"dweb:/ipfs/QmUhAg7xC3EbU78iXaEftbd5n6ZqrBNcEdUD7nxm3BTTN3\"]},\"src/libraries/TickMath.sol\":{\"keccak256\":\"0x7f2a8a40ed3a631d86123607c57d1a8a4dfb39d9aadb6f8870afc5d7bdaa7263\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5988514744881b2f6259cb5e3ee0df197d5445e283338bef2edfd50b36362200\",\"dweb:/ipfs/Qmf9hSHNz3juAL1STmnLFBQecJDz51xhhkMbQQ1JLMk3wE\"]},\"src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"src/types/BalanceDelta.sol\":{\"keccak256\":\"0x9de918225b8c63a400c2ab6cf1fd28556a627f526e9254a73165c970b5366d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412d06a31961e198704dcd54a3a01c9ab72e5b5c3e8bd871a8a077e4c078a71b\",\"dweb:/ipfs/QmYFit1qnFhf9jmcTP2VjkH44Ea2ENgwsVmDuAf2UVeEnZ\"]},\"src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x37c9332a55efbfa9f3b8756e5b47c92022894516f616daac4e550abcb4ea05ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbdeebfefffafc77c9348ba02b6f53e595695aa9ba48f0b312b3d68752320fb9\",\"dweb:/ipfs/QmWi3kbWcQJWRyV9jNVYczojDrX97bbgwUxumA9vUzPfrH\"]},\"src/types/Currency.sol\":{\"keccak256\":\"0x0530be0ce9ff2d5e47ecf5e22c3f60c560d182b927f36d129a28e6eea4b9847b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a368133c7ba837956e099abfec1512d60eb1dc2a5d70c4aedac10b9f3e1efd9d\",\"dweb:/ipfs/QmV7EnJEPMCJZDP15ghdwLrhXZF1XVLZzHLa9wNvF5KQyQ\"]},\"src/types/PoolId.sol\":{\"keccak256\":\"0x00c5a72f3826a07e3b71ad90b17ace3575989a2f0ef4c04cb5f1cde4b22dde1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://238d98d8b516f04cd027423abcff62e9014da95439ba28f3f7f1a25dc478e888\",\"dweb:/ipfs/QmYeF8zqmrSxvhLq75iDkdvDjGK7uAGhLz3315yW3Huus4\"]},\"src/types/PoolKey.sol\":{\"keccak256\":\"0xc51b7d99ae4067ff1697bacf6edb2d9722359c3e7780517b076eaefc786f5b8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efbee019e87c1c8f4d7ab2de16cd63e55e45518e098e5339e0bb91e97cd98aa\",\"dweb:/ipfs/QmaNGMHWdUygghK1YWNV1g1Gwkj969whgqD8ZA8NsqxksJ\"]},\"src/types/Slot0.sol\":{\"keccak256\":\"0x8161426407963c57004d552a4497f498ff4371a34948b55effe66ea610df2657\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e302e04080a16fb84baa6a70dbe53b1cfbc569d12939e474933e707f7b4f7de\",\"dweb:/ipfs/QmcEbztSqg8EJx5Qdr6r3Ztoywn1GBVDj1T7GLh4xo63HB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "controllerGasLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyUnlocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrenciesOutOfOrderOrEqual"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyNotSettled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DelegateCallNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProtocolFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ManagerLocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroNativeValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolNotInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolFeeCannotBeFetched"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapAmountCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TickSpacingTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TickSpacingTooSmall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedDynamicLPFeeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "protocolFee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount0",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount1",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_TICK_SPACING",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_TICK_SPACING",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocolFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "donate",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "slot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "startSlot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "nSlots",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "slot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyLiquidity",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "callerDelta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "feesAccrued",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeController",
          "outputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeesAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newProtocolFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "settle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "paid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "swapDelta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sync",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "take"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlock",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newDynamicLPFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDynamicLPFee"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "spender": "The address of the spender."
            }
          },
          "extsload(bytes32)": {
            "params": {
              "slot": "Key of slot to sload"
            },
            "returns": {
              "_0": "The value of the slot as bytes32"
            }
          },
          "extsload(bytes32,uint256)": {
            "params": {
              "nSlots": "Number of slots to load into return value",
              "slot": "Key of slot to start sloading from"
            },
            "returns": {
              "_0": "The value of the sload-ed slots concatenated as dynamic bytes"
            }
          },
          "extsload(bytes32[])": {
            "params": {
              "slots": "List of slots to SLOAD from."
            },
            "returns": {
              "_0": "List of loaded values."
            }
          },
          "exttload(bytes32)": {
            "params": {
              "slot": "Key of slot to tload"
            },
            "returns": {
              "_0": "The value of the slot as bytes32"
            }
          },
          "exttload(bytes32[])": {
            "params": {
              "slots": "List of slots to tload"
            },
            "returns": {
              "_0": "List of loaded values"
            }
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "details": "Poke by calling with a zero liquidityDelta",
            "params": {
              "hookData": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`",
              "key": "The pool to modify liquidity in",
              "params": "The parameters for modifying the liquidity"
            },
            "returns": {
              "callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal and fee deltas.",
              "feesAccrued": "feeDelta The balance delta of the fees generated in the liquidity range. Returned for informational purposes."
            }
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
            "params": {
              "hookData": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`",
              "key": "The pool to swap in",
              "params": "The parameters for swapping"
            },
            "returns": {
              "swapDelta": "The balance delta of the address swapping"
            }
          },
          "sync(address)": {
            "details": "This MUST be called before any ERC20 tokens are sent into the contract."
          },
          "take(address,address,uint256)": {
            "details": "Can also be used as a mechanism for _free_ flash loans"
          },
          "transfer(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver."
            }
          },
          "transferFrom(address,address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver.",
              "sender": "The address of the sender."
            }
          },
          "unlock(bytes)": {
            "params": {
              "data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
            },
            "returns": {
              "result": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_TICK_SPACING()": {
            "notice": "Returns the constant representing the maximum tickSpacing for an initialized pool key"
          },
          "MIN_TICK_SPACING()": {
            "notice": "Returns the constant representing the minimum tickSpacing for an initialized pool key"
          },
          "allowance(address,address,uint256)": {
            "notice": "Spender allowance of an id."
          },
          "approve(address,uint256,uint256)": {
            "notice": "Approves an amount of an id to a spender."
          },
          "balanceOf(address,uint256)": {
            "notice": "Owner balance of an id."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Called by the user to move value from ERC6909 balance"
          },
          "collectProtocolFees(address,address,uint256)": {
            "notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "Donate the given currency amounts to the pool with the given pool key"
          },
          "extsload(bytes32)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32,uint256)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32[])": {
            "notice": "Called by external contracts to access sparse pool state"
          },
          "exttload(bytes32)": {
            "notice": "Called by external contracts to access transient storage of the contract"
          },
          "exttload(bytes32[])": {
            "notice": "Called by external contracts to access sparse transient pool state"
          },
          "initialize((address,address,uint24,int24,address),uint160,bytes)": {
            "notice": "Initialize the state for a given pool ID"
          },
          "isOperator(address,address)": {
            "notice": "Checks if a spender is approved by an owner as an operator"
          },
          "mint(address,uint256,uint256)": {
            "notice": "Called by the user to move value into ERC6909 balance"
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "Modify the liquidity for the given pool"
          },
          "protocolFeesAccrued(address)": {
            "notice": "Given a currency address, returns the protocol fees accrued in that currency"
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Sets the protocol fee for the given pool"
          },
          "setProtocolFeeController(address)": {
            "notice": "Sets the protocol fee controller"
          },
          "settle(address)": {
            "notice": "Called by the user to pay what is owed"
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "notice": "Swap against the given pool"
          },
          "sync(address)": {
            "notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
          },
          "take(address,address,uint256)": {
            "notice": "Called by the user to net out some value owed to the user"
          },
          "transfer(address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from the caller to a receiver."
          },
          "transferFrom(address,address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from a sender to a receiver."
          },
          "unlock(bytes)": {
            "notice": "All operations go through this function"
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 44444444
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PoolManager.sol": "PoolManager"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/ERC6909.sol": {
        "keccak256": "0x2dc84b92157a72aec9774eab7c3736167b3be615e1bbe099472ad0f79c29a434",
        "urls": [
          "bzz-raw://313db602f0966d9baeebb63b7fe1b0c03bf18ce3d17c12cde55d8e4f432173b8",
          "dweb:/ipfs/QmdkPfEwejJurAtprzw5gFchsVQnbEnZoAYsAwbzTy1Jzc"
        ],
        "license": "MIT"
      },
      "src/ERC6909Claims.sol": {
        "keccak256": "0x01e60843bb613a97c4ad83eec2a6f93c8358164d5aff9c1c49620cdb7e3211e5",
        "urls": [
          "bzz-raw://d8001f8cdffac6a8ba47867716417932df0e7445df71a8be600ef6cf35f898b5",
          "dweb:/ipfs/QmXXbPXkuRtccUc14hhSA5AYci3XK4xrfQMr6Y9FCKikXb"
        ],
        "license": "MIT"
      },
      "src/Extsload.sol": {
        "keccak256": "0x6b79a1d2a9c5a771c0be1e45f7996e14112025f62e136b94e36b3d69cc41053e",
        "urls": [
          "bzz-raw://06a9eb434c55c7b5ab3830ec65bf12f5395dd000612f5fc9aaf63d8207d8053d",
          "dweb:/ipfs/QmVq8Z4MgQ9xwGP25ivHPxNsCL4D1DcojZtSF7rCbzwrR7"
        ],
        "license": "MIT"
      },
      "src/Exttload.sol": {
        "keccak256": "0x50e053b1bdca8dc083ddba68a77bbd84700a917ce8c51444dbfdce8f33a9f142",
        "urls": [
          "bzz-raw://03d75c7eb3e3310f2c1e34711c848abef07384e7aaa910fa80f7ebf37e596c85",
          "dweb:/ipfs/QmZE4agCboEXkpT6ckGJzqiJUsjRKNy86WmC2i6qyNWV9X"
        ],
        "license": "MIT"
      },
      "src/NoDelegateCall.sol": {
        "keccak256": "0x4f7c0ba314f43027e0ec628eaf921512da16c2156122f0de0f6624c1a09be5c2",
        "urls": [
          "bzz-raw://d419fdf56d18844bf1e0a004e883b4b2bb327ae0c14f5246d6b31df9b0b1db28",
          "dweb:/ipfs/QmWiNPDSNop6Wpkdzs7JCkzdCmayWZfK7Zhxixqi7n5dnR"
        ],
        "license": "BUSL-1.1"
      },
      "src/PoolManager.sol": {
        "keccak256": "0xa8292e20ff413be4951717f36a6e96f4f21a556fef8636aca6cfb6a987772cb9",
        "urls": [
          "bzz-raw://0dda3973cb22e5454d75d9fa958698d7c7c901ddb59c387de4768f44eac37ee5",
          "dweb:/ipfs/QmbKwrBJ82C4rKd8pZj8r6uWYR3cEegnijM7Hq2m3vJTan"
        ],
        "license": "BUSL-1.1"
      },
      "src/ProtocolFees.sol": {
        "keccak256": "0xf68b9a041074b2517e7a775ffa6468818b34e8f479b29de1ae946f37e91f6df4",
        "urls": [
          "bzz-raw://8ddb19dcfecee21ddd2b4ffc15eded251fe1a67428affccade423fc1c78e1fe2",
          "dweb:/ipfs/QmRq5Qw4LMiRZwMGKgHdX6d4Mbmi74xmoL7prLCQ1T113g"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IExtsload.sol": {
        "keccak256": "0x5457e68d4c21dd247bf5e3bea59df3372b197afb1856130b3512e101269742c9",
        "urls": [
          "bzz-raw://ec7ebfb1bea371ec76f2d8d9cdb5729176cd56432f20284042c8bd303c9b6221",
          "dweb:/ipfs/QmaP2NLoyYmB1nxEU3RAEP7Q6AJBdLvjaGgfihLVXcuWgz"
        ],
        "license": "MIT"
      },
      "src/interfaces/IExttload.sol": {
        "keccak256": "0xc70fcba06b34aa85a53476b251c60a72272ebf83784e39fd9f0a3a75977585a3",
        "urls": [
          "bzz-raw://b20481fe84db25f9bb896bb7afd1e6a6dfc70b6d4a67d9d1f282fb1214bd2f10",
          "dweb:/ipfs/QmNhDbqgSdhx9Bbtifk5YX6Dpj8yKKKJf75y7JijYPDrF1"
        ],
        "license": "MIT"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x8751728dcb4923b86dbd7523e7a5a515177255bf64d6d95daaa00d510e97fb75",
        "urls": [
          "bzz-raw://92e9a4932961ec52fbca3fc3dd1704ac9c30541cfea7884c1d00a44632102bca",
          "dweb:/ipfs/QmZWFtusFQLK9kXJLGWEMEHgV8LtvX9cKomqncF2mscJro"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0xcfc4084f2519a4768a974a2b3a577866949674e76e10cc55f0e00ec6a910d38d",
        "urls": [
          "bzz-raw://769a40fded9d60d41a1443ad7a33b92972d7d0de8e93325ee90de6a35e2d85de",
          "dweb:/ipfs/Qmbp5sPXTBDaRTJq5cggW7JpPGvNp3REkFUAS2dxh4xcwn"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x0a48b2b660ef63aa520640bd7a80fdf7cf1fd19a268f155b029e5ca31b8ae4a6",
        "urls": [
          "bzz-raw://a2a74397cc05a7c32347c2bc63ab7dd4a7b436c7bb48b7e1910bc33a550f8116",
          "dweb:/ipfs/QmXd91nmFT87pZc5DkZD4wQ6E2exLNAMkm2qCrCBN12de3"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolFees.sol": {
        "keccak256": "0x78eb297b0e978d1b8217292a818d69ecfc403b4a3562d2eb9dfd7f1b781dc38b",
        "urls": [
          "bzz-raw://9abdc8e151e8bceb40d3667fc0345cd69b7379725f720490401ad3775527bf68",
          "dweb:/ipfs/QmNoHFjChTCoC4a2TvomtGssddq7j2Rga4mrSwFm1VQ6My"
        ],
        "license": "MIT"
      },
      "src/interfaces/callback/IUnlockCallback.sol": {
        "keccak256": "0xe413ff595dadedfeff672247031151c309f15a104b7ed03a51400e50c337d373",
        "urls": [
          "bzz-raw://1558caec33b3af1e3b8080973cd1f7f2e4f1483b06c31dbb84cdc2414b1f5a1e",
          "dweb:/ipfs/QmYgQXpMTvb3ZJex1s61QKZQ9WRRqFg6HRiYndgPh7yKT1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/IERC6909Claims.sol": {
        "keccak256": "0x1d53aa307e997fd73e1a31abe1052aad574994627958399375f760b8a750afbc",
        "urls": [
          "bzz-raw://c308d1aba00f3f834357cea75e03a64eba3da425eb31ed6bd4a9e56ada606b79",
          "dweb:/ipfs/Qmb8fuGxpw1JRRFdXUF9U2Una6msqYFTXMvw6ULPHpJ4ow"
        ],
        "license": "MIT"
      },
      "src/libraries/BitMath.sol": {
        "keccak256": "0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9",
        "urls": [
          "bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be",
          "dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/CurrencyDelta.sol": {
        "keccak256": "0x3dc9a88b6a4dd6b13be2104018cfc147a04306ec33fc0a0bede908075f87f77e",
        "urls": [
          "bzz-raw://10560109fac2964b3216c1e050a50b7809cd71ea0f3ef8908f2738d02f729972",
          "dweb:/ipfs/QmPVapqjwitBYx4gMTdpU74hqyr4qCC4g4WG57hLkdqizq"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/CustomRevert.sol": {
        "keccak256": "0x6145de1be2f003010ee01c6a757df5ca7478d1e52e813be72f9fcbc085aaee7b",
        "urls": [
          "bzz-raw://c0d3909cfdb0760c949923ec21e4e84ec69a9cd3ed442a3d1de1c52e759a1941",
          "dweb:/ipfs/QmUMULa3nPjXRHM6WvB99s1MovpxjViqCYMGqfYdBAygJt"
        ],
        "license": "MIT"
      },
      "src/libraries/FixedPoint128.sol": {
        "keccak256": "0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69",
        "urls": [
          "bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a",
          "dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint96.sol": {
        "keccak256": "0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e",
        "urls": [
          "bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9",
          "dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x480e1e2741db0d1d5843c81d25576f182f64db9b92788ccbfc321a05d726f5e3",
        "urls": [
          "bzz-raw://f5c9606989f6487189a70e383f88ec0b203f8232c6e901e51e421113008959fd",
          "dweb:/ipfs/QmeHAmfavKjLtcd1J53Bs9WbknH3jLZfmU9NeaUZCHCJwY"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xd3ea568983da6839d990f7a16d6dd550af453e2e1648520b3e90f4f943bc5fc8",
        "urls": [
          "bzz-raw://66cda3b273e0076bb56db1b6e2bd77dacab2698d93ee4f2e58b375d29311d136",
          "dweb:/ipfs/QmWnuYKy4yNPFPqzTYMBTP8LZ6qjo2HSW8i28kHHq6MsgB"
        ],
        "license": "MIT"
      },
      "src/libraries/LPFeeLibrary.sol": {
        "keccak256": "0x33f69b500fd414cdb9856d9e623d085f8a15a8d3a9570ac6339514c800d077bf",
        "urls": [
          "bzz-raw://c45ed697cee974ecd23cdd1995fb837cf6e8a9b18a57c1d5edfbd0e60a61e68c",
          "dweb:/ipfs/QmTNrppHysZU3WLt4TtFJmQ9CRbVUbk2Nfu6qoKiVCom2P"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/LiquidityMath.sol": {
        "keccak256": "0xbc2517423ae0689a1474a18598f9ec3406e511c45edf7886c64bf2f79af02904",
        "urls": [
          "bzz-raw://5ca4c718964675bba2d30215d5e1a23575c5265c856474feaad2895fe908a755",
          "dweb:/ipfs/Qmc6TqHB5zxtk1EFeqVXu6BaZy7MwcWQz6n8tT1U6QMHDE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/Lock.sol": {
        "keccak256": "0x81ac57403e171199195c129934b49313f5f37a23f0295f435c673bbf5b326d13",
        "urls": [
          "bzz-raw://f985a2256c4e8011f0a717fc8829c4b40f8513363d031ca0e4e92f0d998080e3",
          "dweb:/ipfs/Qmb8Lb2LcbguFXqsiv546L22ewqRrFncuJVNY771L5NG9F"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/NonZeroDeltaCount.sol": {
        "keccak256": "0x6658cd1b79b5018a21e79c3dfb80af3651b0f3d432dbc88798df327b1ac720d5",
        "urls": [
          "bzz-raw://cee26426d2f60d6df169dac1a14189ef24ae0cf2d8be2363c2f86fc0b61f3d34",
          "dweb:/ipfs/QmbyghFMioEw1hdNMGovjYJBsCVJ3hCG2ghTEDRR55vtLF"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/ParseBytes.sol": {
        "keccak256": "0x4ebd68d279f329cb8fa090b106c02828a536d21329af65aa6ca3e2eb039664da",
        "urls": [
          "bzz-raw://4095e7aa0baf5a0a15acc7232628f49205de9c34962d2fa4b88ecc5c29d09de1",
          "dweb:/ipfs/QmVKAAr8eRGJ9EA4TXLATBbfh7SKEaLgVfBGeni93SZHGP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/Pool.sol": {
        "keccak256": "0x5872d9930358dba79a19efacdf3993b541be408fbd8c301c23f0e4b344d2cec2",
        "urls": [
          "bzz-raw://db6532f4eb1052a9df508d90ff070f67581c83be13e2e4a03062392ff22559a1",
          "dweb:/ipfs/QmSJX5Xzh38Zq1pGVmmS2239LocRdeYMmxi7TiEdeLzpUo"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/Position.sol": {
        "keccak256": "0x3c7a61e8249fed5e3d6cb13a5648e1bd13b93b74fa2ebf6d0c08cefb1248e499",
        "urls": [
          "bzz-raw://628fc59ba05b4f2427ae7c7d0882f2b89c1375aa4eef1854d5965682aeab475b",
          "dweb:/ipfs/QmTbBsaDRosy72UBcxpUWkFVeRW5CzuDBt8ufvPyUkA3Kn"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/ProtocolFeeLibrary.sol": {
        "keccak256": "0xfe57793436b42e73edaf9281dbf170a03169e17123916dcaedc6bf6c63ed85cd",
        "urls": [
          "bzz-raw://be1430384e13155a63ae88732b6f562fe482b3d182bba352f5ae2d17d2edd382",
          "dweb:/ipfs/QmeKZZNByL2Z6f1mJYZeztjkFKYddYpTQKkPuMMj9M67e2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/Reserves.sol": {
        "keccak256": "0xf761387927a68d8ea63bed6d648579534271fcf6eb8f3d8d3dc4f251053e0a10",
        "urls": [
          "bzz-raw://04d839d44cf2898063547ba4ecdeb32c0683bb0ac570a42479caed0d1b3f9457",
          "dweb:/ipfs/Qmenf3yDkNy8ZiKwGVDZyh4JKsBb5XgTH6xFfxXMw4Ce24"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/SafeCast.sol": {
        "keccak256": "0x4876713bb40c7cc68c66d1a09d5dd0a2725fda7bc803e6c29417363b61fff61d",
        "urls": [
          "bzz-raw://812a44f15aeecf2b374d7cd5a1cc35f87ca9c7694e85cfebf9e3c50c35ae4cd5",
          "dweb:/ipfs/QmTMmrTj3XZDHVHQHGE1S6961vfvWsgwrxp4JEXCfpy7wM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0xbdb51515e1335ec4553f179d1b6d598b456ec238cd33a31da1c1f5dbeb1e2f15",
        "urls": [
          "bzz-raw://58f704ea0ab4fb4acea00ef78e91e9bba4d8f6840ee2be0833938e2966cbb9e7",
          "dweb:/ipfs/QmWmDPEsxjWHKNyHjNBANULPxLqACqY8hQdY5pEQv8NNVy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SwapMath.sol": {
        "keccak256": "0xf0fc6e250b4f3d77d91ca2cb7ad26d0c4753656a5f567db53a602fbbe7fd1b19",
        "urls": [
          "bzz-raw://9624972f1c1a2465ff0ae8499cb5dbb80f97e3b669b1735fd84f7d587a9d8701",
          "dweb:/ipfs/QmXyDscxpznmg1AXhQap1ZWarv8XikPHpB2VBXWCJybuv4"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickBitmap.sol": {
        "keccak256": "0xda36bb40752429644753ce775fc3042712c1f672e7c19bedbf9a79562ce70496",
        "urls": [
          "bzz-raw://e2699acca300cb9801a143994a2e041cb1cb820b6c02120025ef89839e9902df",
          "dweb:/ipfs/QmUhAg7xC3EbU78iXaEftbd5n6ZqrBNcEdUD7nxm3BTTN3"
        ],
        "license": "MIT"
      },
      "src/libraries/TickMath.sol": {
        "keccak256": "0x7f2a8a40ed3a631d86123607c57d1a8a4dfb39d9aadb6f8870afc5d7bdaa7263",
        "urls": [
          "bzz-raw://5988514744881b2f6259cb5e3ee0df197d5445e283338bef2edfd50b36362200",
          "dweb:/ipfs/Qmf9hSHNz3juAL1STmnLFBQecJDz51xhhkMbQQ1JLMk3wE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/UnsafeMath.sol": {
        "keccak256": "0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69",
        "urls": [
          "bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3",
          "dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/types/BalanceDelta.sol": {
        "keccak256": "0x9de918225b8c63a400c2ab6cf1fd28556a627f526e9254a73165c970b5366d76",
        "urls": [
          "bzz-raw://412d06a31961e198704dcd54a3a01c9ab72e5b5c3e8bd871a8a077e4c078a71b",
          "dweb:/ipfs/QmYFit1qnFhf9jmcTP2VjkH44Ea2ENgwsVmDuAf2UVeEnZ"
        ],
        "license": "MIT"
      },
      "src/types/BeforeSwapDelta.sol": {
        "keccak256": "0x37c9332a55efbfa9f3b8756e5b47c92022894516f616daac4e550abcb4ea05ec",
        "urls": [
          "bzz-raw://cbdeebfefffafc77c9348ba02b6f53e595695aa9ba48f0b312b3d68752320fb9",
          "dweb:/ipfs/QmWi3kbWcQJWRyV9jNVYczojDrX97bbgwUxumA9vUzPfrH"
        ],
        "license": "MIT"
      },
      "src/types/Currency.sol": {
        "keccak256": "0x0530be0ce9ff2d5e47ecf5e22c3f60c560d182b927f36d129a28e6eea4b9847b",
        "urls": [
          "bzz-raw://a368133c7ba837956e099abfec1512d60eb1dc2a5d70c4aedac10b9f3e1efd9d",
          "dweb:/ipfs/QmV7EnJEPMCJZDP15ghdwLrhXZF1XVLZzHLa9wNvF5KQyQ"
        ],
        "license": "MIT"
      },
      "src/types/PoolId.sol": {
        "keccak256": "0x00c5a72f3826a07e3b71ad90b17ace3575989a2f0ef4c04cb5f1cde4b22dde1f",
        "urls": [
          "bzz-raw://238d98d8b516f04cd027423abcff62e9014da95439ba28f3f7f1a25dc478e888",
          "dweb:/ipfs/QmYeF8zqmrSxvhLq75iDkdvDjGK7uAGhLz3315yW3Huus4"
        ],
        "license": "MIT"
      },
      "src/types/PoolKey.sol": {
        "keccak256": "0xc51b7d99ae4067ff1697bacf6edb2d9722359c3e7780517b076eaefc786f5b8c",
        "urls": [
          "bzz-raw://8efbee019e87c1c8f4d7ab2de16cd63e55e45518e098e5339e0bb91e97cd98aa",
          "dweb:/ipfs/QmaNGMHWdUygghK1YWNV1g1Gwkj969whgqD8ZA8NsqxksJ"
        ],
        "license": "MIT"
      },
      "src/types/Slot0.sol": {
        "keccak256": "0x8161426407963c57004d552a4497f498ff4371a34948b55effe66ea610df2657",
        "urls": [
          "bzz-raw://6e302e04080a16fb84baa6a70dbe53b1cfbc569d12939e474933e707f7b4f7de",
          "dweb:/ipfs/QmcEbztSqg8EJx5Qdr6r3Ztoywn1GBVDj1T7GLh4xo63HB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 36
}
