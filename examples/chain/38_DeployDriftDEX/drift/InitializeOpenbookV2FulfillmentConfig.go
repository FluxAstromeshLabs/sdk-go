// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package drift

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitializeOpenbookV2FulfillmentConfig is the `initializeOpenbookV2FulfillmentConfig` instruction.
type InitializeOpenbookV2FulfillmentConfig struct {
	MarketIndex *uint16

	// [0] = [] baseSpotMarket
	//
	// [1] = [] quoteSpotMarket
	//
	// [2] = [WRITE] state
	//
	// [3] = [] openbookV2Program
	//
	// [4] = [] openbookV2Market
	//
	// [5] = [] driftSigner
	//
	// [6] = [WRITE] openbookV2FulfillmentConfig
	//
	// [7] = [WRITE, SIGNER] admin
	//
	// [8] = [] rent
	//
	// [9] = [] systemProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitializeOpenbookV2FulfillmentConfigInstructionBuilder creates a new `InitializeOpenbookV2FulfillmentConfig` instruction builder.
func NewInitializeOpenbookV2FulfillmentConfigInstructionBuilder() *InitializeOpenbookV2FulfillmentConfig {
	nd := &InitializeOpenbookV2FulfillmentConfig{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 10),
	}
	return nd
}

// SetMarketIndex sets the "marketIndex" parameter.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetMarketIndex(marketIndex uint16) *InitializeOpenbookV2FulfillmentConfig {
	inst.MarketIndex = &marketIndex
	return inst
}

// SetBaseSpotMarketAccount sets the "baseSpotMarket" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetBaseSpotMarketAccount(baseSpotMarket ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(baseSpotMarket)
	return inst
}

// GetBaseSpotMarketAccount gets the "baseSpotMarket" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetBaseSpotMarketAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetQuoteSpotMarketAccount sets the "quoteSpotMarket" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetQuoteSpotMarketAccount(quoteSpotMarket ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(quoteSpotMarket)
	return inst
}

// GetQuoteSpotMarketAccount gets the "quoteSpotMarket" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetQuoteSpotMarketAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetStateAccount sets the "state" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetStateAccount(state ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(state).WRITE()
	return inst
}

// GetStateAccount gets the "state" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetOpenbookV2ProgramAccount sets the "openbookV2Program" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetOpenbookV2ProgramAccount(openbookV2Program ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(openbookV2Program)
	return inst
}

// GetOpenbookV2ProgramAccount gets the "openbookV2Program" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetOpenbookV2ProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetOpenbookV2MarketAccount sets the "openbookV2Market" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetOpenbookV2MarketAccount(openbookV2Market ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(openbookV2Market)
	return inst
}

// GetOpenbookV2MarketAccount gets the "openbookV2Market" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetOpenbookV2MarketAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetDriftSignerAccount sets the "driftSigner" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetDriftSignerAccount(driftSigner ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(driftSigner)
	return inst
}

// GetDriftSignerAccount gets the "driftSigner" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetDriftSignerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetOpenbookV2FulfillmentConfigAccount sets the "openbookV2FulfillmentConfig" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetOpenbookV2FulfillmentConfigAccount(openbookV2FulfillmentConfig ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(openbookV2FulfillmentConfig).WRITE()
	return inst
}

// GetOpenbookV2FulfillmentConfigAccount gets the "openbookV2FulfillmentConfig" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetOpenbookV2FulfillmentConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetAdminAccount sets the "admin" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetAdminAccount(admin ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(admin).WRITE().SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetRentAccount sets the "rent" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetRentAccount(rent ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *InitializeOpenbookV2FulfillmentConfig) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

func (inst InitializeOpenbookV2FulfillmentConfig) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_InitializeOpenbookV2FulfillmentConfig,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitializeOpenbookV2FulfillmentConfig) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitializeOpenbookV2FulfillmentConfig) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.MarketIndex == nil {
			return errors.New("MarketIndex parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.BaseSpotMarket is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.QuoteSpotMarket is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.State is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.OpenbookV2Program is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.OpenbookV2Market is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.DriftSigner is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.OpenbookV2FulfillmentConfig is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.Admin is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.Rent is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *InitializeOpenbookV2FulfillmentConfig) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitializeOpenbookV2FulfillmentConfig")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("MarketIndex", *inst.MarketIndex))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=10]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("             baseSpotMarket", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("            quoteSpotMarket", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("                      state", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("          openbookV2Program", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("           openbookV2Market", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("                driftSigner", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("openbookV2FulfillmentConfig", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("                      admin", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("                       rent", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("              systemProgram", inst.AccountMetaSlice.Get(9)))
					})
				})
		})
}

func (obj InitializeOpenbookV2FulfillmentConfig) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `MarketIndex` param:
	err = encoder.Encode(obj.MarketIndex)
	if err != nil {
		return err
	}
	return nil
}
func (obj *InitializeOpenbookV2FulfillmentConfig) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `MarketIndex`:
	err = decoder.Decode(&obj.MarketIndex)
	if err != nil {
		return err
	}
	return nil
}

// NewInitializeOpenbookV2FulfillmentConfigInstruction declares a new InitializeOpenbookV2FulfillmentConfig instruction with the provided parameters and accounts.
func NewInitializeOpenbookV2FulfillmentConfigInstruction(
	// Parameters:
	marketIndex uint16,
	// Accounts:
	baseSpotMarket ag_solanago.PublicKey,
	quoteSpotMarket ag_solanago.PublicKey,
	state ag_solanago.PublicKey,
	openbookV2Program ag_solanago.PublicKey,
	openbookV2Market ag_solanago.PublicKey,
	driftSigner ag_solanago.PublicKey,
	openbookV2FulfillmentConfig ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	rent ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *InitializeOpenbookV2FulfillmentConfig {
	return NewInitializeOpenbookV2FulfillmentConfigInstructionBuilder().
		SetMarketIndex(marketIndex).
		SetBaseSpotMarketAccount(baseSpotMarket).
		SetQuoteSpotMarketAccount(quoteSpotMarket).
		SetStateAccount(state).
		SetOpenbookV2ProgramAccount(openbookV2Program).
		SetOpenbookV2MarketAccount(openbookV2Market).
		SetDriftSignerAccount(driftSigner).
		SetOpenbookV2FulfillmentConfigAccount(openbookV2FulfillmentConfig).
		SetAdminAccount(admin).
		SetRentAccount(rent).
		SetSystemProgramAccount(systemProgram)
}
